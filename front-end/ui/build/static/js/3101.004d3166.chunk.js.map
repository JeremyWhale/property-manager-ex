{"version":3,"file":"static/js/3101.004d3166.chunk.js","mappings":"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","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-badge/ic-badge.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-badge/ic-badge.css?tag=ic-badge&encapsulation=shadow"],"sourcesContent":["import {\n  Component,\n  Element,\n  Host,\n  Method,\n  Prop,\n  State,\n  h,\n} from \"@stencil/core\";\nimport {\n  IcBadgePositions,\n  IcBadgeTypes,\n  IcBadgeVariants,\n  IcColor,\n} from \"./ic-badge.types\";\nimport {\n  IcColorRGBA,\n  IcSizes,\n  IcThemeForeground,\n  IcThemeForegroundEnum,\n} from \"../../utils/types\";\nimport {\n  getCssProperty,\n  getParentElement,\n  getParentElementType,\n  hexToRgba,\n  rgbaStrToObj,\n} from \"../../utils/helpers\";\n\n@Component({\n  tag: \"ic-badge\",\n  styleUrl: \"ic-badge.css\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class Badge {\n  private customColorRGBA: IcColorRGBA;\n  private foregroundColour: IcThemeForeground;\n\n  @Element() el: HTMLIcBadgeElement;\n\n  @State() visible: boolean = true;\n\n  /**\n   * The accessible label of the badge component to provide context for screen reader users.\n   */\n  @Prop() accessibleLabel?: string;\n\n  /**\n   * The custom badge colour. This will only style the badge component if variant=\"custom\".\n   * Can be a hex value e.g. \"#ff0000\", RGB e.g. \"rgb(255, 0, 0)\", or RGBA e.g. \"rgba(255, 0, 0, 1)\".\n   */\n  @Prop() customColor?: IcColor = null;\n\n  /**\n   * The maximum number shown on the badge appended with a +.\n   * This will only be displayed if type=\"text\" and textLabel is not empty.\n   */\n  @Prop() maxNumber?: number;\n\n  /**\n   * The positioning of the badge in reference to the parent element.\n   */\n  @Prop() position?: IcBadgePositions = \"far\";\n\n  /**\n   * The size of the badge to be displayed.\n   */\n  @Prop() size?: IcSizes = \"default\";\n\n  /**\n   * The text displayed in the badge. This will only be displayed if type=\"text\".\n   */\n  @Prop() textLabel?: string;\n\n  /**\n   * The type of badge to be displayed.\n   */\n  @Prop() type?: IcBadgeTypes = \"text\";\n\n  /**\n   * The variant of the badge to be displayed.\n   */\n  @Prop() variant?: IcBadgeVariants = \"neutral\";\n\n  componentWillLoad(): void {\n    this.variant === \"custom\" && this.setBadgeColour();\n\n    this.getBadgeForeground();\n\n    this.isAccessibleLabelDefined() && this.setAccessibleLabel();\n  }\n\n  /**\n   * Use to show the badge.\n   */\n  @Method()\n  async showBadge(): Promise<void> {\n    this.visible = true;\n  }\n\n  /**\n   * Use to hide the badge.\n   */\n  @Method()\n  async hideBadge(): Promise<void> {\n    this.visible = false;\n  }\n\n  private setBadgeColour = () => {\n    let colorRGBA = null;\n    if (this.customColor !== null) {\n      const firstChar = this.customColor.slice(0, 1);\n      if (firstChar === \"#\") {\n        colorRGBA = hexToRgba(this.customColor);\n      } else if (firstChar.toLowerCase() === \"r\") {\n        colorRGBA = rgbaStrToObj(this.customColor);\n      }\n      this.customColorRGBA = colorRGBA;\n      this.el.style.backgroundColor = `rgba(${colorRGBA.r.toString()}, ${colorRGBA.g.toString()}, ${colorRGBA.b.toString()}, ${colorRGBA.a.toString()})`;\n    }\n  };\n\n  private getBadgeForeground = () => {\n    let red: number;\n    let green: number;\n    let blue: number;\n\n    switch (this.variant) {\n      case \"custom\":\n        red = this.customColorRGBA.r;\n        green = this.customColorRGBA.g;\n        blue = this.customColorRGBA.b;\n        break;\n      case \"error\":\n        red = parseInt(getCssProperty(\"--ic-status-error-r\"));\n        green = parseInt(getCssProperty(\"--ic-status-error-g\"));\n        blue = parseInt(getCssProperty(\"--ic-status-error-b\"));\n        break;\n      case \"success\":\n        red = parseInt(getCssProperty(\"--ic-status-success-r\"));\n        green = parseInt(getCssProperty(\"--ic-status-success-g\"));\n        blue = parseInt(getCssProperty(\"--ic-status-success-b\"));\n        break;\n      case \"warning\":\n        red = parseInt(getCssProperty(\"--ic-status-warning-r\"));\n        green = parseInt(getCssProperty(\"--ic-status-warning-g\"));\n        blue = parseInt(getCssProperty(\"--ic-status-warning-b\"));\n        break;\n      case \"info\": {\n        const info = hexToRgba(getCssProperty(\"--ic-status-info\"));\n        red = info.r;\n        green = info.g;\n        blue = info.b;\n        break;\n      }\n      case \"neutral\": {\n        const neutral = hexToRgba(getCssProperty(\"--ic-architectural-500\"));\n        red = neutral.r;\n        green = neutral.g;\n        blue = neutral.b;\n        break;\n      }\n      case \"light\": {\n        const light = hexToRgba(getCssProperty(\"--ic-architectural-40\"));\n        red = light.r;\n        green = light.g;\n        blue = light.b;\n        break;\n      }\n    }\n\n    const brightness = (red * 299 + green * 587 + blue * 114) / 1000;\n    this.foregroundColour =\n      brightness > 133.3505\n        ? IcThemeForegroundEnum.Dark\n        : IcThemeForegroundEnum.Light;\n  };\n\n  private getTextLabel = () => {\n    let label;\n    if (this.textLabel !== null) {\n      if (this.maxNumber !== null) {\n        label =\n          Number(this.textLabel) > this.maxNumber\n            ? `${this.maxNumber}+`\n            : this.textLabel;\n      } else {\n        label = this.textLabel;\n      }\n    }\n    return label;\n  };\n\n  private setAccessibleLabel = () => {\n    if (getParentElement(this.el) !== null) {\n      if (getParentElementType(this.el) === \"IC-TAB\") {\n        getParentElement(this.el).setAttribute(\"aria-describedby\", \"badge\");\n      } else {\n        getParentElement(\n          this.el\n        ).ariaLabel = `badge displaying ${this.accessibleLabel}`;\n      }\n    }\n  };\n\n  private isAccessibleLabelDefined = () => {\n    return this.accessibleLabel !== undefined && this.accessibleLabel !== null;\n  };\n\n  render() {\n    const { position, size, type, variant, foregroundColour, visible } = this;\n\n    return (\n      <Host\n        class={{\n          [`${position}`]: true,\n          [`${size}`]: true,\n          [`${variant}`]: true,\n          [`${type}`]: true,\n          [`foreground-${foregroundColour}`]: foregroundColour !== null,\n          [\"show\"]: visible,\n          [\"hide\"]: !visible,\n        }}\n        id=\"badge\"\n        aria-label={\n          this.isAccessibleLabelDefined() &&\n          `badge displaying ${this.accessibleLabel}`\n        }\n      >\n        {type === \"icon\" && <slot name=\"badge-icon\"></slot>}\n        {type === \"text\" && (\n          <ic-typography variant={size === \"small\" ? \"badge-small\" : \"badge\"}>\n            {this.getTextLabel()}\n          </ic-typography>\n        )}\n      </Host>\n    );\n  }\n}\n","@media (prefers-reduced-motion: no-preference) {\n  :host(.show) {\n    animation: expand var(--ic-transition-duration-slow);\n  }\n\n  :host(.hide) {\n    animation: shrink var(--ic-transition-duration-slow);\n  }\n}\n\n:host {\n  display: flex;\n  height: var(--ic-space-md);\n  min-width: var(--ic-space-md);\n  width: -moz-fit-content;\n  width: fit-content;\n  border-radius: calc(2 * var(--ic-space-xxl));\n  position: absolute;\n}\n\n:host(.neutral) {\n  background-color: var(--ic-architectural-500);\n}\n\n:host(.light) {\n  background-color: var(--ic-architectural-40);\n}\n\n:host(.info) {\n  background-color: var(--ic-status-info);\n}\n\n:host(.warning) {\n  background-color: var(--ic-status-warning-mid);\n}\n\n:host(.error) {\n  background-color: var(--ic-status-error);\n}\n\n:host(.success) {\n  background-color: var(--ic-status-success);\n}\n\n:host(.small) {\n  height: var(--ic-space-sm);\n  min-width: var(--ic-space-sm);\n}\n\n:host(.large) {\n  height: calc(var(--ic-space-md) + var(--ic-space-xxs));\n  min-width: calc(var(--ic-space-md) + var(--ic-space-xxs));\n}\n\n:host(.dot.default) {\n  height: var(--ic-space-xs);\n  width: var(--ic-space-xs);\n  min-width: var(--ic-space-xs);\n}\n\n:host(.dot.small) {\n  height: calc(var(--ic-space-xxs) + var(--ic-space-xxxs));\n  width: calc(var(--ic-space-xxs) + var(--ic-space-xxxs));\n  min-width: calc(var(--ic-space-xxs) + var(--ic-space-xxxs));\n}\n\n:host(.dot.large) {\n  height: var(--ic-space-sm);\n  width: var(--ic-space-sm);\n  min-width: var(--ic-space-sm);\n}\n\n:host(.foreground-dark) ::slotted(*) {\n  fill: var(--ic-color-primary-text);\n}\n\n:host(.foreground-light) ::slotted(*) {\n  fill: white;\n}\n\n:host(.foreground-dark) ic-typography {\n  color: var(--ic-color-primary-text);\n}\n\n:host(.foreground-light) ic-typography {\n  color: white;\n}\n\n:host(.text) ic-typography {\n  align-self: center;\n  padding: 0 calc((var(--ic-space-xs) + var(--ic-space-1px)) / 2)\n    var(--ic-space-1px);\n}\n\n:host(.text.small) ic-typography {\n  padding: 0 0.2132rem;\n}\n\n:host(.text.large) ic-typography {\n  padding: 0 calc((var(--ic-space-sm) + var(--ic-space-1px)) / 2)\n    var(--ic-space-1px);\n}\n\n:host(.icon) ::slotted(svg) {\n  width: var(--ic-space-sm);\n  height: var(--ic-space-sm);\n  padding: var(--ic-space-xxxs);\n}\n\n:host(.icon.small) ::slotted(svg) {\n  width: var(--ic-space-xs);\n  height: var(--ic-space-xs);\n}\n\n:host(.icon.large) ::slotted(svg) {\n  width: calc(var(--ic-space-sm) + var(--ic-space-xxxs));\n  height: calc(var(--ic-space-sm) + var(--ic-space-xxxs));\n  padding: calc(var(--ic-space-xxxs) + var(--ic-space-1px));\n}\n\n:host(.far) {\n  top: calc(-1 * var(--ic-space-xs));\n  right: calc(-1 * var(--ic-space-xs));\n}\n\n:host(.far.small),\n:host(.dot.far.large) {\n  top: calc(-1 * var(--ic-space-xxs));\n  right: calc(-1 * var(--ic-space-xxs));\n}\n\n:host(.dot.far),\n:host(.dot.far.small) {\n  top: calc(-1 * var(--ic-space-xxxs));\n  right: calc(-1 * var(--ic-space-xxxs));\n}\n\n:host(.near) {\n  top: calc(-1 * calc(var(--ic-space-xxs) + var(--ic-space-1px)));\n  right: calc(-1 * calc(var(--ic-space-xxs) + var(--ic-space-1px)));\n}\n\n:host(.dot.near) {\n  top: calc(-1 * var(--ic-space-1px));\n  right: calc(-1 * var(--ic-space-1px));\n}\n\n:host(.inline) {\n  position: static;\n}\n\n:host(.hide) {\n  visibility: hidden !important;\n  transition: visibility var(--ic-transition-duration-slow);\n}\n\n@keyframes expand {\n  from {\n    opacity: 0;\n    transform: scale(0);\n  }\n\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n@keyframes shrink {\n  from {\n    opacity: 1;\n    transform: scale(1);\n  }\n\n  to {\n    opacity: 0;\n    transform: scale(0);\n  }\n}\n"],"names":["Badge","setBadgeColour","colorRGBA","_this","customColor","firstChar","slice","hexToRgba","toLowerCase","rgbaStrToObj","customColorRGBA","el","style","backgroundColor","concat","r","toString","g","b","a","getBadgeForeground","red","green","blue","variant","parseInt","getCssProperty","info","neutral","light","brightness","foregroundColour","IcThemeForegroundEnum","Dark","Light","getTextLabel","label","textLabel","maxNumber","Number","setAccessibleLabel","getParentElement","getParentElementType","setAttribute","ariaLabel","accessibleLabel","isAccessibleLabelDefined","undefined","this","_callee","_regeneratorRuntime","wrap","_context","prev","next","visible","stop","_showBadge","apply","arguments","_callee2","_context2","_hideBadge","key","value","_class","position","size","type","h","Host","class","_defineProperty","id","name","get"],"sourceRoot":""}