{"version":3,"file":"static/js/5498.aa08f399.chunk.js","mappings":"gjBAyBaA,EAAK,W,2IAuDR,KAAAC,cAAgB,WACtBC,EAAKC,QAAQC,OACbF,EAAKG,UAAUD,M,uBAtDkB,E,cACP,E,gBAKE,E,kBAKE,E,aAKL,G,qCAUI,E,aAKM,S,gDAYrC,WACEE,KAAKC,sB,GACN,CAAAC,IAAA,cAAAC,MAGD,WACEH,KAAKI,SAAWJ,KAAKI,O,GACtB,CAAAF,IAAA,uBAAAC,MAOO,W,OAE4C,QAAhDE,EAAAL,KAAKM,GAAGC,WAAWC,cAAc,uBAAe,IAAAH,OAAA,EAAAA,EAAEI,cAClC,KAAIT,KAAKU,gBAAiB,E,GAC7C,CAAAR,IAAA,SAAAC,MAED,WAAM,IAAAQ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAEFC,EAOEjB,KAPFiB,QACAC,EAMElB,KANFkB,QACAC,EAKEnB,KALFmB,QACAC,EAIEpB,KAJFoB,WACAC,EAGErB,KAHFqB,YACAC,EAEEtB,KAFFsB,UAIF,OAFItB,KADFI,UAKEmB,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CACHC,KAAMH,GAAa,QACnBI,OAAKC,EAAAA,EAAAA,GAAA,GACFC,EAAAA,EAAsBC,MAAO,KAGhCN,EAAAA,EAAAA,GAAA,OACEG,OAAKf,EAAA,IAAAgB,EAAAA,EAAAA,GAAAhB,EACF,aAAc,IAAIgB,EAAAA,EAAAA,GAAAhB,EAAA,aAAAmB,OACLb,IAAY,GAAIN,KAGhCY,EAAAA,EAAAA,GAAA,OAAKG,MAAM,yBACTH,EAAAA,EAAAA,GAAA,OACEG,OAAKd,EAAA,IAAAe,EAAAA,EAAAA,GAAAf,EACF,WAAY,IAAIe,EAAAA,EAAAA,GAAAf,EAAA,WAAAkB,OACLb,IAAY,GAAIL,MAGhCW,EAAAA,EAAAA,GAAA,QACEG,OAAKb,EAAA,IAAAc,EAAAA,EAAAA,GAAAd,EACF,cAAe,IAAIc,EAAAA,EAAAA,GAAAd,EACnB,iBAAkB,IAAIc,EAAAA,EAAAA,GAAAd,EAAA,QAAAiB,OACdb,IAAY,GAAIJ,GAE3BkB,UAAWC,EAAAA,EAAcf,GAASgB,SAGtCV,EAAAA,EAAAA,GAAA,OAAKG,MAAM,kBACTH,EAAAA,EAAAA,GAAA,OACEG,OAAKZ,EAAA,IAAAa,EAAAA,EAAAA,GAAAb,EACF,iBAAkB,IAAIa,EAAAA,EAAAA,GAAAb,EACtB,4BACCM,GAAcpB,KAAKU,gBAAcI,IAGpCI,IACCK,EAAAA,EAAAA,GAAA,iBACEG,OAAKX,EAAA,IAAAY,EAAAA,EAAAA,GAAAZ,EACF,eAAgB,IAAIY,EAAAA,EAAAA,GAAAZ,EACpB,oBAAsBK,GAAcpB,KAAKU,gBAAcK,GAE1DE,QAAQ,mBAERM,EAAAA,EAAAA,GAAA,SAAIL,KAGRK,EAAAA,EAAAA,GAAA,QAAMW,KAAK,YACTX,EAAAA,EAAAA,GAAA,iBAAeN,QAAQ,QAAQE,MAGlCgB,EAAAA,EAAAA,GAAWnC,KAAKM,GAAI,YACnBiB,EAAAA,EAAAA,GAAA,OAAKG,MAAM,2BACTH,EAAAA,EAAAA,GAAA,QAAMW,KAAK,cAIjBX,EAAAA,EAAAA,GAAA,OAAKG,MAAM,0BACRL,IACCE,EAAAA,EAAAA,GAAA,aACEG,OAAKV,EAAA,IAAAW,EAAAA,EAAAA,GAAAX,EACF,iBAAkB,IAAIW,EAAAA,EAAAA,GAAAX,EACtB,gBAAiB,GAAIA,GAExBe,UAAWK,EAAAA,EACXC,QAASrC,KAAKL,cACdsB,QAAQ,OACRqB,WAAYV,EAAAA,EAAsBC,KAClCU,MAAM,c,GAQrB,CAAArC,IAAA,KAAAsC,IAAA,W,0BA3Je,G,QCzBC,qtJ","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-alert/ic-alert.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-alert/ic-alert.css?tag=ic-alert&encapsulation=shadow"],"sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Host,\n  State,\n  Listen,\n  Prop,\n  h,\n} from \"@stencil/core\";\nimport closeIcon from \"../../assets/close-icon.svg\";\nimport { isSlotUsed } from \"../../utils/helpers\";\nimport { IcThemeForegroundEnum, IcStatusVariants } from \"../../utils/types\";\nimport { VARIANT_ICONS } from \"../../utils/constants\";\n\n/**\n * @slot message - Content is placed to the right of the title.\n * @slot action - Content is placed to the right of the message.\n */\n@Component({\n  tag: \"ic-alert\",\n  styleUrl: \"ic-alert.css\",\n  shadow: true,\n})\nexport class Alert {\n  @Element() el: HTMLIcAlertElement;\n\n  @State() alertTitleWrap: boolean = false;\n  @State() visible: boolean = true;\n\n  /**\n   * If `true`, the alert will have the 'alert' ARIA role and will be announced to screen readers.\n   */\n  @Prop() announced?: boolean = true;\n\n  /**\n   * If `true`, the alert will have a close icon at the end to dismiss it.\n   */\n  @Prop() dismissible?: boolean = false;\n\n  /**\n   * The optional title to display at the start of the alert.\n   */\n  @Prop() heading?: string = \"\";\n\n  /**\n   * The main body message of the alert.\n   */\n  @Prop() message?: string;\n\n  /**\n   * If `true`, the title and message will appear above and below instead of inline.\n   */\n  @Prop() titleAbove?: boolean = false;\n\n  /**\n   * The variant of the alert which will be rendered.\n   */\n  @Prop() variant?: IcStatusVariants = \"neutral\";\n\n  /**\n   * @deprecated This event should not be used anymore. Use icDismiss instead.\n   */\n  @Event() dismiss: EventEmitter<void>;\n\n  /**\n   * Is emitted when the user dismisses the alert.\n   */\n  @Event() icDismiss: EventEmitter<void>;\n\n  componentDidLoad(): void {\n    this.alertTitleShouldWrap();\n  }\n\n  @Listen(\"icDismiss\", { capture: true })\n  handleClick(): void {\n    this.visible = !this.visible;\n  }\n\n  private dismissAction = (): void => {\n    this.dismiss.emit();\n    this.icDismiss.emit();\n  };\n\n  private alertTitleShouldWrap() {\n    const titleHeight =\n      this.el.shadowRoot.querySelector(\".alert-title\")?.clientHeight;\n    if (titleHeight > 24) this.alertTitleWrap = true;\n  }\n\n  render() {\n    const {\n      variant,\n      heading,\n      message,\n      titleAbove,\n      dismissible,\n      announced,\n      visible,\n    } = this;\n\n    return (\n      visible && (\n        <Host\n          role={announced && \"alert\"}\n          class={{\n            [IcThemeForegroundEnum.Dark]: true,\n          }}\n        >\n          <div\n            class={{\n              [\"container\"]: true,\n              [`container-${variant}`]: true,\n            }}\n          >\n            <div class=\"alert-icon-container\">\n              <div\n                class={{\n                  [\"divider\"]: true,\n                  [`divider-${variant}`]: true,\n                }}\n              ></div>\n              <span\n                class={{\n                  [\"alert-icon\"]: true,\n                  [\"svg-container\"]: true,\n                  [`icon-${variant}`]: true,\n                }}\n                innerHTML={VARIANT_ICONS[variant].icon}\n              ></span>\n            </div>\n            <div class=\"alert-content\">\n              <div\n                class={{\n                  [\"alert-message\"]: true,\n                  [\"alert-message-title-above\"]:\n                    titleAbove || this.alertTitleWrap,\n                }}\n              >\n                {heading && (\n                  <ic-typography\n                    class={{\n                      [\"alert-title\"]: true,\n                      [\"alert-title-above\"]: titleAbove || this.alertTitleWrap,\n                    }}\n                    variant=\"subtitle-large\"\n                  >\n                    <p>{heading}</p>\n                  </ic-typography>\n                )}\n                <slot name=\"message\">\n                  <ic-typography variant=\"body\">{message}</ic-typography>\n                </slot>\n              </div>\n              {isSlotUsed(this.el, \"action\") && (\n                <div class=\"alert-action-container\">\n                  <slot name=\"action\" />\n                </div>\n              )}\n            </div>\n            <div class=\"dismiss-icon-container\">\n              {dismissible && (\n                <ic-button\n                  class={{\n                    [\"svg-container\"]: true,\n                    [\"dismiss-icon\"]: true,\n                  }}\n                  innerHTML={closeIcon}\n                  onClick={this.dismissAction}\n                  variant=\"icon\"\n                  appearance={IcThemeForegroundEnum.Dark}\n                  title=\"dismiss\"\n                ></ic-button>\n              )}\n            </div>\n          </div>\n        </Host>\n      )\n    );\n  }\n}\n","@import \"../../global/normalize.css\";\n\n:host {\n  display: block;\n}\n\n.container {\n  min-height: 3.5rem;\n  border-radius: var(--ic-border-radius);\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.container-neutral {\n  background-color: var(--ic-status-unknown-light);\n}\n\n.container-info {\n  background-color: var(--ic-status-info-light);\n}\n\n.container-warning {\n  background-color: var(--ic-status-warning-light);\n}\n\n.container-error {\n  background-color: var(--ic-status-error-light);\n}\n\n.container-success {\n  background-color: var(--ic-status-success-light);\n}\n\n.alert-icon-container {\n  height: 100%;\n  display: flex;\n  align-items: center;\n}\n\n.divider {\n  height: 100%;\n  width: var(--ic-space-xs);\n  border-radius: var(--ic-space-xxxs) 0 0 var(--ic-space-xxxs);\n  position: absolute;\n}\n\n.divider-neutral {\n  background-color: var(--ic-status-unknown);\n}\n\n.divider-info {\n  background-color: var(--ic-status-info);\n}\n\n.divider-warning {\n  background-color: var(--ic-status-warning);\n}\n\n.divider-error {\n  background-color: var(--ic-status-error);\n}\n\n.divider-success {\n  background-color: var(--ic-status-success);\n}\n\n.alert-icon {\n  height: var(--ic-space-lg);\n  width: 1.375rem;\n  margin-left: 1.125rem;\n}\n\n.alert-icon > svg {\n  height: var(--ic-space-lg);\n  width: var(--ic-space-lg);\n  display: inline-block;\n}\n\n.icon-neutral > svg {\n  fill: var(--ic-status-unknown);\n}\n\n:host([variant=\"info\"]) .alert-icon svg {\n  fill: var(--ic-status-info);\n}\n\n:host([variant=\"warning\"]) .alert-icon svg {\n  fill: var(--ic-status-warning);\n}\n\n:host([variant=\"error\"]) .alert-icon svg {\n  fill: var(--ic-status-error);\n}\n\n:host([variant=\"success\"]) .alert-icon svg {\n  fill: var(--ic-status-success);\n}\n\n.alert-content {\n  display: flex;\n  align-items: center;\n  margin-left: 0.625rem;\n  width: 100%;\n}\n\n.alert-message {\n  display: flex;\n  align-items: center;\n  padding: var(--ic-space-xs) var(--ic-space-xs) var(--ic-space-xs) 0;\n  flex: 1;\n}\n\n.alert-message-title-above {\n  display: inline;\n  font-size: 0;\n}\n\n.alert-title {\n  margin-right: var(--ic-space-xs);\n}\n\n.alert-title-above {\n  white-space: normal;\n}\n\n.alert-action-container {\n  margin-right: var(--ic-space-xs);\n  display: flex;\n  align-items: center;\n}\n\n.dismiss-icon {\n  margin-right: var(--ic-space-xxxs);\n  margin-left: -0.375rem;\n  padding: 0.375rem;\n  border: none;\n  border-radius: 50%;\n  background-color: inherit;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.dismiss-icon:hover {\n  cursor: pointer;\n}\n\n@media (max-width: 628px) {\n  .alert-content {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .alert-message {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .alert-title {\n    white-space: normal;\n  }\n\n  .alert-action-container {\n    margin-bottom: var(--ic-space-xs);\n  }\n}\n\n@media (forced-colors: active) {\n  .container {\n    border: var(--ic-hc-border);\n  }\n}\n"],"names":["Alert","dismissAction","_this","dismiss","emit","icDismiss","this","alertTitleShouldWrap","key","value","visible","_a","el","shadowRoot","querySelector","clientHeight","alertTitleWrap","_class2","_class3","_class4","_class5","_class6","_class7","variant","heading","message","titleAbove","dismissible","announced","h","Host","role","class","_defineProperty","IcThemeForegroundEnum","Dark","concat","innerHTML","VARIANT_ICONS","icon","name","isSlotUsed","closeIcon","onClick","appearance","title","get"],"sourceRoot":""}