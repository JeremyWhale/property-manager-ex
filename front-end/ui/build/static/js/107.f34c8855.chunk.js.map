{"version":3,"file":"static/js/107.f34c8855.chunk.js","mappings":"oPAmCaA,EAAgB,W,8CAEnB,KAAAC,oBAAgD,CAAC,E,wBAI5BC,EAAAA,EAAAA,K,UAIK,S,eAKI,E,sKAgCtC,WACEC,KAAKF,qBAAsBG,EAAAA,EAAAA,GAAkBD,KAAKE,GAAI,GAAFC,QAAAC,EAAAA,EAAAA,GAC/CC,EAAAA,GAAiB,CACpB,U,GAEH,CAAAC,IAAA,mBAAAC,MAED,YACEC,EAAAA,EAAAA,GACE,CAAC,CAAEC,KAAMT,KAAKU,MAAOC,SAAU,UAC/B,oB,GAEH,CAAAL,IAAA,sBAAAC,MAED,WACE,IAAMK,EAASZ,KAAKE,GAAGW,cAAc,iBAC1B,OAAXD,GAAmBA,EAAOE,aAAa,UAAW,Y,GACnD,CAAAR,IAAA,wBAAAC,MAGD,WACEP,KAAKe,KAAO,M,GACb,CAAAT,IAAA,yBAAAC,MAGD,WACEP,KAAKe,KAAO,Q,GACb,CAAAT,IAAA,qBAAAC,MAGD,SAAmBS,GACjB,IAAMC,EAAiBD,EAAGE,OAC1BlB,KAAKmB,kBAAoBF,EAAMF,I,kEAOjC,SAAAK,IAAA,OAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACMzB,KAAK0B,UACP1B,KAAK0B,SAASC,QACf,wBAAAJ,EAAAK,OAAA,GAAAR,EAAA,UACF,yBAAAS,EAAAC,MAAA,KAAAC,UAAA,E,IAAA,CAAAzB,IAAA,SAAAC,MAED,WAAM,IAAAyB,EAAA,KACIC,EAAgDjC,KAAhDiC,KAAMC,EAA0ClC,KAA1CkC,OAAQC,EAAkCnC,KAAlCmC,IAAKC,EAA6BpC,KAA7BoC,SAAUC,EAAmBrC,KAAnBqC,eAEjC3B,EAAQ,GACR4B,EAAY,GACZC,EAA+B,OAC/BC,EACFxC,KAAKmB,kBACHsB,EAA4B,QAC5BC,GAAY,EAEE,SAAd1C,KAAKe,OACPL,EAAQV,KAAKU,MACb6B,EAAU,WACVC,EAAaG,EAAAA,EAAsBC,QACnCH,EAAO,UACPC,GAAY,EACZJ,EAAY,sBAGd,IAAMO,EAAc,CAClBN,QAAAA,EACAC,WAAAA,EACAC,KAAAA,EACAR,KAAAA,EACAC,OAAAA,EACAC,IAAAA,EACAC,SAAAA,EACAC,eAAAA,EACAK,UAAAA,GAGF,OACEI,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CAACC,OAAKC,EAAAA,EAAAA,GAAA,GAAK,eAA+B,SAAdjD,KAAKe,QACpC+B,EAAAA,EAAAA,GAAA,YAAAI,OAAAC,OAAA,CACEH,MAAOV,EAAS,aACO,QAAXC,EAAoBvC,KAAKU,MAAQ,KAC7C0C,IAAK,SAAClD,GAAE,OAAM8B,EAAKN,SAAWxB,CAAE,GAC5B2C,EACA7C,KAAKF,qBAERY,GACDoC,EAAAA,EAAAA,GAAA,QAAMO,KAAK,YAAYC,KAAK,U,GAInC,CAAAhD,IAAA,KAAAiD,IAAA,W,4EA1I0B,G,QCnCC,6/E","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-navigation-button/ic-navigation-button.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-navigation-button/ic-navigation-button.css?tag=ic-navigation-button&encapsulation=shadow"],"sourcesContent":["import {\n  Component,\n  Element,\n  Host,\n  Prop,\n  State,\n  h,\n  Listen,\n  Method,\n} from \"@stencil/core\";\n\nimport {\n  getThemeForegroundColor,\n  inheritAttributes,\n  onComponentRequiredPropUndefined,\n} from \"../../utils/helpers\";\nimport { IC_INHERITED_ARIA } from \"../../utils/constants\";\nimport {\n  IcTheme,\n  IcThemeForeground,\n  IcThemeForegroundEnum,\n} from \"../../utils/types\";\nimport { IcNavButtonModes } from \"./ic-navigation-button.types\";\n\n/**\n * @slot icon - Content will be placed to the left of the button label.\n */\n\n@Component({\n  tag: \"ic-navigation-button\",\n  styleUrl: \"ic-navigation-button.css\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class NavigationButton {\n  private buttonEl: HTMLIcButtonElement;\n  private inheritedAttributes: { [k: string]: unknown } = {};\n\n  @Element() el: HTMLIcNavigationButtonElement;\n\n  @State() initialAppearance = getThemeForegroundColor();\n  /**\n   * The display mode.\n   */\n  @State() mode: IcNavButtonModes = \"navbar\";\n\n  /**\n   * If `true`, the user can save the linked URL instead of navigating to it.\n   */\n  @Prop() download?: string | boolean = false;\n\n  /**\n   * The URL that the link points to. This will render the button as an \"a\" tag.\n   */\n  @Prop() href?: string;\n\n  /**\n   * The human language of the linked URL.\n   */\n  @Prop() hreflang?: string;\n\n  /**\n   * The label info to display.\n   */\n  @Prop() label!: string;\n\n  /**\n   * How much of the referrer to send when following the link.\n   */\n  @Prop() referrerpolicy?: ReferrerPolicy;\n\n  /**\n   * The relationship of the linked URL as space-separated link types.\n   */\n  @Prop() rel?: string;\n\n  /**\n   * The place to display the linked URL, as the name for a browsing context (a tab, window, or iframe).\n   */\n  @Prop() target?: string;\n\n  componentWillLoad(): void {\n    this.inheritedAttributes = inheritAttributes(this.el, [\n      ...IC_INHERITED_ARIA,\n      \"title\",\n    ]);\n  }\n\n  componentDidLoad(): void {\n    onComponentRequiredPropUndefined(\n      [{ prop: this.label, propName: \"label\" }],\n      \"Navigation Button\"\n    );\n  }\n\n  componentWillRender(): void {\n    const iconEl = this.el.querySelector(`[slot=\"icon\"]`);\n    iconEl !== null && iconEl.setAttribute(\"viewBox\", \"0 0 24 24\");\n  }\n\n  @Listen(\"icNavigationMenuOpened\", { target: \"document\" })\n  navBarMenuOpenHandler(): void {\n    this.mode = \"menu\";\n  }\n\n  @Listen(\"icNavigationMenuClosed\", { target: \"document\" })\n  navBarMenuCloseHandler(): void {\n    this.mode = \"navbar\";\n  }\n\n  @Listen(\"themeChange\", { target: \"document\" })\n  themeChangeHandler(ev: CustomEvent): void {\n    const theme: IcTheme = ev.detail;\n    this.initialAppearance = theme.mode;\n  }\n\n  /**\n   * Sets focus on the native `button`.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    if (this.buttonEl) {\n      this.buttonEl.focus();\n    }\n  }\n\n  render() {\n    const { href, target, rel, download, referrerpolicy } = this;\n\n    let label = \"\";\n    let className = \"\";\n    let variant: \"icon\" | \"tertiary\" = \"icon\";\n    let appearance: IcThemeForeground | IcThemeForegroundEnum.Default =\n      this.initialAppearance;\n    let size: \"default\" | \"large\" = \"large\";\n    let fullWidth = false;\n\n    if (this.mode === \"menu\") {\n      label = this.label;\n      variant = \"tertiary\";\n      appearance = IcThemeForegroundEnum.Default;\n      size = \"default\";\n      fullWidth = true;\n      className = \"popout-menu-button\";\n    }\n\n    const buttonProps = {\n      variant,\n      appearance,\n      size,\n      href,\n      target,\n      rel,\n      download,\n      referrerpolicy,\n      fullWidth,\n    };\n\n    return (\n      <Host class={{ [\"in-side-menu\"]: this.mode === \"menu\" }}>\n        <ic-button\n          class={className}\n          aria-label={variant == \"icon\" ? this.label : null}\n          ref={(el) => (this.buttonEl = el)}\n          {...buttonProps}\n          {...this.inheritedAttributes}\n        >\n          {label}\n          <slot slot=\"left-icon\" name=\"icon\"></slot>\n        </ic-button>\n      </Host>\n    );\n  }\n}\n","@import \"../../global/normalize.css\";\n\n:host {\n  display: block;\n  margin-right: var(--ic-space-xs);\n  list-style: none;\n}\n\n:host(.in-side-menu) {\n  margin-right: 0;\n}\n\n:host::part(button) {\n  height: 100%;\n  min-height: 2.5rem;\n}\n"],"names":["NavigationButton","inheritedAttributes","getThemeForegroundColor","this","inheritAttributes","el","concat","_toConsumableArray","IC_INHERITED_ARIA","key","value","onComponentRequiredPropUndefined","prop","label","propName","iconEl","querySelector","setAttribute","mode","ev","theme","detail","initialAppearance","_callee","_regeneratorRuntime","wrap","_context","prev","next","buttonEl","focus","stop","_setFocus","apply","arguments","_this","href","target","rel","download","referrerpolicy","className","variant","appearance","size","fullWidth","IcThemeForegroundEnum","Default","buttonProps","h","Host","class","_defineProperty","Object","assign","ref","slot","name","get"],"sourceRoot":""}