{"version":3,"file":"static/js/3653.88f70268.chunk.js","mappings":"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","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-switch/ic-switch.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-switch/ic-switch.css?tag=ic-switch&encapsulation=shadow"],"sourcesContent":["import {\n  Component,\n  Host,\n  h,\n  Prop,\n  State,\n  Element,\n  Event,\n  EventEmitter,\n  Method,\n} from \"@stencil/core\";\nimport {\n  getInputDescribedByText,\n  onComponentRequiredPropUndefined,\n  renderHiddenInput,\n  addFormResetListener,\n  removeFormResetListener,\n  removeDisabledFalse,\n} from \"../../utils/helpers\";\nimport { IcSwitchChangeEventDetail } from \"./ic-switch.types\";\n\nlet inputIds = 0;\n\n/**\n * @slot right-adornment - Content is placed to the right of switch before state label.\n */\n@Component({\n  tag: \"ic-switch\",\n  styleUrl: \"ic-switch.css\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class Switch {\n  private inputId = `ic-switch-input-${inputIds++}`;\n\n  @Element() el: HTMLIcSwitchElement;\n\n  @State() checkedState: boolean = false;\n  @State() initiallyChecked = this.checked;\n\n  /**\n   * If `true`, the switch will display as checked.\n   */\n  @Prop() checked?: boolean = false;\n\n  /**\n   * If `true`, the disabled state will be set.\n   */\n  @Prop() disabled?: boolean = false;\n\n  /**\n   * The helper text that will be displayed for additional field guidance.\n   */\n  @Prop() helperText?: string = \"\";\n\n  /**\n   * If `true`, the label will be hidden and the required label value will be applied as an aria-label.\n   */\n  @Prop() hideLabel?: boolean = false;\n\n  /**\n   * The aria-label applied to the switch when no visual 'name' is provided.\n   */\n  @Prop() label!: string;\n\n  /**\n   * The name of the control, which is submitted with the form data.\n   */\n  @Prop() name?: string = this.inputId;\n\n  /**\n   * If `true`, the switch will render the On/Off state text.\n   */\n  @Prop() showState?: boolean = false;\n\n  /**\n   * If `true`, the small styling will be applied to the switch.\n   */\n  @Prop() small?: boolean = false;\n\n  /**\n   * The value of the toggle does not mean if it's checked or not, use the `checked`\n   * property for that.\n   *\n   * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n   * it's only used when the toggle participates in a native `<form>`.\n   */\n  @Prop() value?: string | null = \"on\";\n\n  /**\n   * Emitted when the toggle loses focus.\n   */\n  @Event() icBlur!: EventEmitter<void>;\n\n  /**\n   * Emitted when the value property has changed.\n   */\n  @Event() icChange!: EventEmitter<IcSwitchChangeEventDetail>;\n\n  /**\n   * Emitted when the toggle has focus.\n   */\n  @Event() icFocus!: EventEmitter<void>;\n\n  disconnectedCallback(): void {\n    removeFormResetListener(this.el, this.handleFormReset);\n  }\n\n  componentWillLoad(): void {\n    this.checkedState = this.checked;\n    addFormResetListener(this.el, this.handleFormReset);\n    removeDisabledFalse(this.disabled, this.el);\n  }\n\n  componentDidLoad(): void {\n    onComponentRequiredPropUndefined(\n      [{ prop: this.label, propName: \"label\" }],\n      \"Switch\"\n    );\n  }\n\n  /**\n   * Sets focus on the switch.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    if (this.el.shadowRoot.querySelector(\"input\")) {\n      this.el.shadowRoot.querySelector(\"input\").focus();\n    }\n  }\n\n  private handleChange = () => {\n    this.checkedState = !this.checkedState;\n    this.icChange.emit({\n      checked: this.checkedState,\n      value: this.value,\n    });\n  };\n\n  private onFocus = () => {\n    this.icFocus.emit();\n  };\n\n  private onBlur = () => {\n    this.icBlur.emit();\n  };\n\n  private handleFormReset = (): void => {\n    this.checkedState = this.initiallyChecked;\n  };\n\n  render() {\n    const {\n      label,\n      checkedState,\n      small,\n      disabled,\n      name,\n      showState,\n      value,\n      hideLabel,\n      helperText,\n      inputId,\n    } = this;\n\n    renderHiddenInput(true, this.el, name, checkedState ? value : \"\", disabled);\n\n    const describedBy = getInputDescribedByText(\n      inputId,\n      helperText !== \"\",\n      false\n    );\n\n    return (\n      <Host>\n        <label\n          class={{\n            [\"ic-switch-container\"]: true,\n            [\"ic-switch-disabled\"]: disabled,\n            [\"ic-switch-small\"]: small,\n          }}\n          htmlFor={inputId}\n        >\n          {!hideLabel && (\n            <ic-input-label\n              for={inputId}\n              label={label}\n              helperText={helperText}\n              readonly={true}\n              disabled={disabled}\n              class={{\n                [\"ic-switch-label\"]: true,\n                [\"ic-switch-label-small\"]: small,\n              }}\n            ></ic-input-label>\n          )}\n          {!hideLabel && <span class=\"ic-switch-line-break\"></span>}\n          <input\n            checked={checkedState}\n            disabled={disabled}\n            aria-label={label}\n            aria-checked={checkedState ? \"true\" : \"false\"}\n            aria-describedby={describedBy}\n            role=\"switch\"\n            class=\"ic-switch-input\"\n            type=\"checkbox\"\n            name=\"toggle\"\n            id={inputId}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            onChange={this.handleChange}\n          />\n          <span class=\"ic-switch-toggle\">\n            <svg\n              class=\"ic-switch-icon\"\n              aria-hidden=\"true\"\n              focusable=\"false\"\n              viewBox=\"0 0 10 10\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <line\n                class=\"ic-switch-icon-line\"\n                x1=\"9\"\n                y1={small ? \"2\" : \"1\"}\n                x2=\"9\"\n                y2={small ? \"8\" : \"9\"}\n              />\n            </svg>\n            <svg\n              class=\"ic-switch-icon\"\n              aria-hidden=\"true\"\n              focusable=\"false\"\n              viewBox=\"0 0 10 10\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <circle\n                class=\"ic-switch-icon-circle\"\n                fill=\"none\"\n                cx=\"5\"\n                cy=\"5\"\n                r={small ? \"3.335\" : \"4.445\"}\n              />\n            </svg>\n          </span>\n          <slot name=\"right-adornment\"></slot>\n          {showState && (\n            <ic-typography\n              aria-hidden=\"true\"\n              variant=\"label\"\n              class=\"ic-switch-checked-status\"\n            >\n              {checkedState ? \"On\" : \"Off\"}\n            </ic-typography>\n          )}\n        </label>\n      </Host>\n    );\n  }\n}\n","@import \"../../global/normalize.css\";\n\n:host {\n  display: inline-block;\n}\n\ninput {\n  overflow: hidden;\n  appearance: none;\n}\n\n.ic-switch-container {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: var(--ic-space-xxs);\n  cursor: pointer;\n}\n\n.ic-switch-label {\n  margin-left: var(--ic-space-xxs);\n  margin-bottom: var(--ic-space-sm);\n}\n\n.ic-switch-label-small {\n  margin-bottom: 0.625rem;\n}\n\n.ic-switch-toggle {\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  width: 4rem;\n  height: var(--ic-space-xl);\n  position: relative;\n  border-radius: 100vw;\n  background-color: var(--ic-architectural-200);\n  border: var(--ic-space-1px) solid var(--ic-architectural-700);\n  box-sizing: border-box;\n  transition: var(--ic-transition-duration-fast);\n}\n\n.ic-switch-line-break {\n  flex: 1 0 100%;\n}\n\n.ic-switch-checked-status {\n  padding-left: var(--ic-space-xxs);\n}\n\n.ic-switch-toggle::before {\n  content: \"\";\n  width: 1.333rem;\n  height: 1.333rem;\n  border-radius: 50%;\n  position: absolute;\n  z-index: 2;\n  top: 50%;\n  left: 0.333rem;\n  transform: translate(0, -50%);\n  background-color: var(--ic-architectural-700);\n  transition: var(--ic-transition-duration-slow);\n}\n\n.ic-switch-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 0.625rem;\n  height: 0.625rem;\n}\n\n.ic-switch-icon-circle,\n.ic-switch-icon-line {\n  stroke-width: 1;\n}\n\n.ic-switch-icon-circle {\n  stroke: var(--ic-architectural-700);\n}\n\n.ic-switch-icon-line {\n  stroke: var(--ic-architectural-white);\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .ic-switch-toggle::before {\n    transition-duration: 0ms;\n  }\n}\n\n.ic-switch-input:checked + .ic-switch-toggle {\n  background-color: var(--ic-action-default);\n  border: none;\n}\n\n.ic-switch-input:checked + .ic-switch-toggle::before {\n  transform: translate(var(--ic-space-xl), -50%);\n  background-color: var(--ic-architectural-white);\n}\n\n.ic-switch-input:not([disabled]) + .ic-switch-toggle:hover::before {\n  box-shadow: 0 0 0 0.75rem var(--ic-action-dark-bg-hover);\n}\n\n.ic-switch-input:not([disabled]) + .ic-switch-toggle:active::before {\n  box-shadow: 0 0 0 0.75rem var(--ic-action-dark-bg-active);\n}\n\n.ic-switch-input:not([disabled]):checked + .ic-switch-toggle:hover::before {\n  box-shadow: 0 0 0 0.75rem var(--ic-action-default-bg-hover);\n}\n\n.ic-switch-input:not([disabled]):checked + .ic-switch-toggle:active::before {\n  box-shadow: 0 0 0 0.75rem var(--ic-action-default-bg-active);\n}\n\n.ic-switch-input:focus:not([disabled]) + .ic-switch-toggle,\n.ic-switch-input:focus-visible:not([disabled]) + .ic-switch-toggle {\n  box-shadow: 0 0 0 var(--ic-space-1px) var(--ic-architectural-white),\n    0 0 0 0.188rem var(--ic-action-default),\n    0 0 0 0.5rem var(--ic-action-default-active-alpha);\n}\n\n.ic-switch-disabled {\n  cursor: default;\n}\n\n.ic-switch-disabled .ic-switch-icon-circle {\n  stroke: var(--ic-architectural-300);\n}\n\n.ic-switch-disabled .ic-switch-icon-line {\n  stroke: var(--ic-action-default-bg-active);\n}\n\n.ic-switch-input:disabled + .ic-switch-toggle {\n  background-color: var(--ic-architectural-80);\n  border: var(--ic-border-disabled);\n}\n\n.ic-switch-input:disabled ~ .ic-switch-checked-status {\n  color: var(--ic-architectural-300);\n}\n\n.ic-switch-input:disabled + .ic-switch-toggle::before {\n  background-color: var(--ic-architectural-300);\n}\n\n.ic-switch-input:disabled:checked + .ic-switch-toggle {\n  background-color: var(--ic-status-info-light);\n  border: var(--ic-space-1px) dashed #98c9f5;\n}\n\n.ic-switch-input:disabled:checked + .ic-switch-toggle::before {\n  background-color: var(--ic-architectural-white);\n}\n\n.ic-switch-small {\n  gap: var(--ic-space-xxxs);\n}\n\n.ic-switch-small .ic-switch-checked-status {\n  padding-left: 0.375rem;\n}\n\n.ic-switch-small .ic-switch-toggle {\n  width: var(--ic-space-xxl);\n  height: var(--ic-space-lg);\n}\n\n.ic-switch-small .ic-switch-toggle::before {\n  width: var(--ic-space-md);\n  height: var(--ic-space-md);\n  left: var(--ic-space-xxs);\n}\n\n.ic-switch-small .ic-switch-input:checked + .ic-switch-toggle::before {\n  transform: translate(var(--ic-space-lg), -50%);\n}\n\n::slotted(*) {\n  margin-left: var(--ic-space-sm);\n}\n\n::slotted(svg) {\n  fill: currentcolor;\n}\n\n@media (forced-colors: active) {\n  .ic-switch-toggle::before,\n  .ic-switch-input:checked + .ic-switch-toggle {\n    border: var(--ic-hc-border);\n  }\n\n  .ic-switch-input:checked + .ic-switch-toggle::before {\n    transform: translate(calc(var(--ic-space-xl) - 0.125rem), -50%);\n  }\n\n  .ic-switch-input:disabled + .ic-switch-toggle,\n  .ic-switch-input:disabled:checked + .ic-switch-toggle,\n  .ic-switch-input:disabled + .ic-switch-toggle::before {\n    border-color: GrayText;\n  }\n\n  .ic-switch-input:disabled ~ .ic-switch-checked-status {\n    color: GrayText;\n  }\n\n  .ic-switch-disabled .ic-switch-icon-circle,\n  .ic-switch-disabled .ic-switch-icon-line {\n    stroke: GrayText;\n  }\n}\n"],"names":["inputIds","Switch","inputId","concat","handleChange","_this","checkedState","icChange","emit","checked","value","onFocus","icFocus","onBlur","icBlur","handleFormReset","initiallyChecked","this","removeFormResetListener","el","key","addFormResetListener","removeDisabledFalse","disabled","onComponentRequiredPropUndefined","prop","label","propName","_callee","_regeneratorRuntime","wrap","_context","prev","next","shadowRoot","querySelector","focus","stop","_setFocus","apply","arguments","_class","_class2","small","name","showState","hideLabel","helperText","renderHiddenInput","describedBy","getInputDescribedByText","h","Host","class","_defineProperty","htmlFor","for","readonly","role","type","id","onChange","focusable","viewBox","xmlns","x1","y1","x2","y2","fill","cx","cy","r","variant","get"],"sourceRoot":""}