{"version":3,"file":"static/js/4608.570977d9.chunk.js","mappings":"qNA+BaA,G,QAAI,W,2IAuEP,KAAAC,cAAgB,WACtBC,EAAKC,QAAQC,OACbF,EAAKG,UAAUD,M,EAGT,KAAAE,kBAAoB,WAC1BJ,EAAKK,WAAY,C,EAGX,KAAAC,kBAAoB,WAC1BN,EAAKK,WAAY,C,kBA9EW,E,cACF,E,gBAKY,S,eAKX,E,kBAKG,E,4BAUP,S,iDAYzB,YACEE,EAAAA,EAAAA,GAAoBC,KAAKC,SAAUD,KAAKE,G,GACzC,CAAAC,IAAA,mBAAAC,MAED,W,MACEJ,KAAKK,cAEsC,QADzCC,EAAAN,KAAKE,GAAGK,WACLC,cAAc,gCAAwB,IAAAF,GAAAA,EACrCG,aAAa,cAAe,UAClCC,EAAAA,EAAAA,GACE,CAAC,CAAEC,KAAMX,KAAKY,MAAOC,SAAU,UAC/B,O,GAEH,CAAAV,IAAA,cAAAC,MAGD,WACEJ,KAAKc,SAAWd,KAAKc,O,kEAOvB,SAAAC,IAAA,OAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACMpB,KAAKE,GAAGK,WAAWC,cAAc,WACnCR,KAAKE,GAAGK,WAAWC,cAAc,UAAUa,QAC5C,wBAAAH,EAAAI,OAAA,GAAAP,EAAA,UACF,yBAAAQ,EAAAC,MAAA,KAAAC,UAAA,E,IAAA,CAAAtB,IAAA,SAAAC,MAeD,WAAM,IAAAsB,EAEFd,EAOEZ,KAPFY,MACAe,EAME3B,KANF2B,WACAC,EAKE5B,KALF4B,KACAvB,EAIEL,KAJFK,YACAS,EAGEd,KAHFc,QACAb,EAEED,KAFFC,SACAJ,EACEG,KADFH,UAGF,OACEiB,IACEe,EAAAA,EAAAA,GAAA,OACEC,OAAKJ,EAAA,IAAAK,EAAAA,EAAAA,GAAAL,EACF,QAAS,IAAIK,EAAAA,EAAAA,GAAAL,EAAA,GAAAM,OACVL,IAAe,IAAII,EAAAA,EAAAA,GAAAL,EAAA,GAAAM,OACnBJ,IAAS,IAAIG,EAAAA,EAAAA,GAAAL,EAChB,WAAazB,IAAQ8B,EAAAA,EAAAA,GAAAL,EACrB,cAAgBrB,IAAW0B,EAAAA,EAAAA,GAAAL,EAC3B,UAAY7B,GAAS6B,KAGvBO,EAAAA,EAAAA,GAAWjC,KAAKE,GAAI,UACnB2B,EAAAA,EAAAA,GAAA,OAAKC,MAAM,SACTD,EAAAA,EAAAA,GAAA,QAAMK,KAAK,WAGfL,EAAAA,EAAAA,GAAA,iBACEM,QAAQ,QAAO,0BACS,EACxBL,MAAM,UAEND,EAAAA,EAAAA,GAAA,YAAOjB,IAERP,IACCwB,EAAAA,EAAAA,GAAA,cACEjB,MAAM,UACNwB,OAAO,eACPN,OAAKC,EAAAA,EAAAA,GAAA,GAAK,mBAAqB9B,KAE/B4B,EAAAA,EAAAA,GAAA,UACEQ,GAAG,eACHP,OAAKC,EAAAA,EAAAA,GAAA,GACF,gBAAiB,GACnB,wBAAAC,OACsBpB,EAAK,SAC5BX,SAAUA,EACVqC,SAAUrC,GAAY,EAAI,EAC1BsC,QAASvC,KAAKT,cACdiD,aAAcxC,KAAKJ,kBACnB6C,aAAczC,KAAKF,kBACnB4C,U,mUAILT,EAAAA,EAAAA,GAAWjC,KAAKE,GAAI,WAAY2B,EAAAA,EAAAA,GAAA,QAAMK,KAAK,U,GAInD,CAAA/B,IAAA,KAAAwC,IAAA,W,4EAhJc,I,QC/BC,6tJ","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-chip/ic-chip.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-chip/ic-chip.css?tag=ic-chip&encapsulation=shadow"],"sourcesContent":["import {\n  Component,\n  h,\n  Prop,\n  State,\n  Listen,\n  Event,\n  EventEmitter,\n  Element,\n  Method,\n} from \"@stencil/core\";\nimport {\n  onComponentRequiredPropUndefined,\n  isSlotUsed,\n  removeDisabledFalse,\n} from \"../../utils/helpers\";\nimport { IcChipAppearance } from \"./ic-chip.types\";\nimport { IcSizes } from \"../../utils/types\";\nimport dismissIcon from \"../../assets/dismiss-icon.svg\";\n\n/**\n * @slot icon - Content will be rendered at the start of the chip.\n * @slot badge - Badge component overlaying the top right of the chip.\n */\n@Component({\n  tag: \"ic-chip\",\n  styleUrl: \"ic-chip.css\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class Chip {\n  @Element() el: HTMLIcChipElement;\n\n  @State() isHovered: boolean = false;\n  @State() visible: boolean = true;\n\n  /**\n   * The emphasis of the chip.\n   */\n  @Prop() appearance?: IcChipAppearance = \"filled\";\n\n  /**\n   * If `true`, the chip will appear disabled.\n   */\n  @Prop() disabled?: boolean = false;\n\n  /**\n   * If `true`, the chip will have a close button at the end to dismiss it.\n   */\n  @Prop() dismissible?: boolean = false;\n\n  /**\n   * The text rendered within the chip.\n   */\n  @Prop() label!: string;\n\n  /**\n   * The size of the chip.\n   */\n  @Prop() size?: IcSizes = \"default\";\n\n  /**\n   * @deprecated This event should not be used anymore. Use icDismiss instead.\n   */\n  @Event() dismiss: EventEmitter<void>;\n\n  /**\n   * Is emitted when the user dismisses the chip.\n   */\n  @Event() icDismiss: EventEmitter<void>;\n\n  componentWillLoad(): void {\n    removeDisabledFalse(this.disabled, this.el);\n  }\n\n  componentDidLoad(): void {\n    this.dismissible &&\n      this.el.shadowRoot\n        .querySelector(\"span.ic-tooltip-label\")\n        ?.setAttribute(\"aria-hidden\", \"true\");\n    onComponentRequiredPropUndefined(\n      [{ prop: this.label, propName: \"label\" }],\n      \"Chip\"\n    );\n  }\n\n  @Listen(\"icDismiss\", { capture: true })\n  handleClick(): void {\n    this.visible = !this.visible;\n  }\n\n  /**\n   * Sets focus on the chip.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    if (this.el.shadowRoot.querySelector(\"button\")) {\n      this.el.shadowRoot.querySelector(\"button\").focus();\n    }\n  }\n\n  private dismissAction = (): void => {\n    this.dismiss.emit();\n    this.icDismiss.emit();\n  };\n\n  private mouseEnterHandler = (): void => {\n    this.isHovered = true;\n  };\n\n  private mouseLeaveHandler = (): void => {\n    this.isHovered = false;\n  };\n\n  render() {\n    const {\n      label,\n      appearance,\n      size,\n      dismissible,\n      visible,\n      disabled,\n      isHovered,\n    } = this;\n\n    return (\n      visible && (\n        <div\n          class={{\n            [\"chip\"]: true,\n            [`${appearance}`]: true,\n            [`${size}`]: true,\n            [\"disabled\"]: disabled,\n            [\"dismissible\"]: dismissible,\n            [\"hovered\"]: isHovered,\n          }}\n        >\n          {isSlotUsed(this.el, \"icon\") && (\n            <div class=\"icon\">\n              <slot name=\"icon\" />\n            </div>\n          )}\n          <ic-typography\n            variant=\"label\"\n            apply-vertical-margins={false}\n            class=\"label\"\n          >\n            <span>{label}</span>\n          </ic-typography>\n          {dismissible && (\n            <ic-tooltip\n              label=\"Dismiss\"\n              target=\"dismiss-icon\"\n              class={{ [\"tooltip-disabled\"]: disabled }}\n            >\n              <button\n                id=\"dismiss-icon\"\n                class={{\n                  [\"dismiss-icon\"]: true,\n                }}\n                aria-label={`Dismiss ${label} chip`}\n                disabled={disabled}\n                tabindex={disabled ? -1 : 0}\n                onClick={this.dismissAction}\n                onMouseEnter={this.mouseEnterHandler}\n                onMouseLeave={this.mouseLeaveHandler}\n                innerHTML={dismissIcon}\n              ></button>\n            </ic-tooltip>\n          )}\n          {isSlotUsed(this.el, \"badge\") && <slot name=\"badge\"></slot>}\n        </div>\n      )\n    );\n  }\n}\n","@import \"../../global/normalize.css\";\n\n:host {\n  display: inline-block;\n}\n\n.chip {\n  display: flex;\n  padding: var(--ic-space-xxs);\n  font-size: 0.875rem;\n  border-radius: var(--ic-space-md);\n  text-align: left;\n  text-decoration: none;\n  transition: var(--ic-easing-transition-fast);\n  position: relative;\n}\n\n.chip.small {\n  padding: var(--ic-space-xxxs);\n  border-radius: calc(var(--ic-space-md) - var(--ic-space-xxxs));\n}\n\n.chip.large {\n  padding: var(--ic-space-xs);\n  border-radius: calc(var(--ic-space-md) + var(--ic-space-xxs));\n}\n\n.label {\n  padding: 0 var(--ic-space-xs);\n}\n\n.chip.hovered:not(:focus-within) {\n  background-color: var(--ic-architectural-300);\n}\n\n.chip:focus-within {\n  box-shadow: var(--ic-border-focus);\n  outline: var(--ic-hc-focus-outline);\n  z-index: 1;\n}\n\n.chip.outline.hovered:not(:focus-within) {\n  background-color: var(--ic-action-dark-bg-hover);\n}\n\nic-tooltip:focus-within {\n  z-index: 1;\n}\n\n.filled {\n  background-color: var(--ic-architectural-200);\n  color: black;\n  border: none;\n}\n\n.filled.disabled {\n  background-color: var(--ic-architectural-100);\n}\n\n.outline {\n  color: var(--ic-architectural-900);\n  border: var(--ic-space-1px) solid var(--ic-architectural-900);\n  padding: calc(var(--ic-space-xxs) - var(--ic-space-1px));\n}\n\n.outline.small {\n  padding: calc(var(--ic-space-xxxs) - var(--ic-space-1px));\n}\n\n.outline.large {\n  padding: calc(var(--ic-space-xs) - var(--ic-space-1px));\n}\n\n.outline.disabled {\n  border: var(--ic-border-disabled);\n  background: none;\n}\n\n.chip.disabled ic-typography {\n  color: var(--ic-architectural-200);\n}\n\n.dismiss-icon {\n  border: none;\n  border-radius: 50%;\n  padding: 0;\n  background: none;\n  cursor: pointer;\n  margin: var(--ic-space-xxxs);\n  height: calc(var(--ic-space-lg) - var(--ic-space-xxs));\n  width: calc(var(--ic-space-lg) - var(--ic-space-xxs));\n}\n\n.dismiss-icon:focus {\n  outline: var(--ic-hc-focus-outline);\n}\n\n.dismiss-icon[disabled] {\n  pointer-events: none;\n  color: var(--ic-architectural-200);\n}\n\n.icon {\n  padding: var(--ic-space-xxxs);\n  box-sizing: border-box;\n}\n\n.icon,\nic-tooltip {\n  width: var(--ic-space-lg);\n  height: var(--ic-space-lg);\n}\n\n.chip.disabled path,\n.chip.disabled ::slotted(svg) {\n  fill: var(--ic-architectural-200);\n}\n\n@media (forced-colors: active) {\n  .chip {\n    border: var(--ic-hc-border);\n  }\n\n  .filled.small {\n    padding: calc(var(--ic-space-xxxs) - var(--ic-space-1px));\n  }\n\n  .filled {\n    padding: calc(var(--ic-space-xxxs) + var(--ic-space-1px));\n  }\n\n  .filled.large {\n    padding: calc(var(--ic-space-xs) - var(--ic-space-1px));\n  }\n\n  .chip.disabled {\n    appearance: none;\n    border-color: GrayText;\n  }\n\n  .chip.disabled ic-typography {\n    color: GrayText;\n  }\n\n  .chip.disabled path,\n  .chip.disabled ::slotted(svg) {\n    fill: GrayText;\n  }\n\n  .chip:focus-within {\n    outline: none;\n    border-color: Highlight;\n  }\n}\n"],"names":["Chip","dismissAction","_this","dismiss","emit","icDismiss","mouseEnterHandler","isHovered","mouseLeaveHandler","removeDisabledFalse","this","disabled","el","key","value","dismissible","_a","shadowRoot","querySelector","setAttribute","onComponentRequiredPropUndefined","prop","label","propName","visible","_callee","_regeneratorRuntime","wrap","_context","prev","next","focus","stop","_setFocus","apply","arguments","_class","appearance","size","h","class","_defineProperty","concat","isSlotUsed","name","variant","target","id","tabindex","onClick","onMouseEnter","onMouseLeave","innerHTML","get"],"sourceRoot":""}