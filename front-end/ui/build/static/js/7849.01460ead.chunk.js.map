{"version":3,"file":"static/js/7849.01460ead.chunk.js","mappings":"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","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-checkbox/ic-checkbox.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-checkbox/ic-checkbox.css?tag=ic-checkbox&encapsulation=shadow"],"sourcesContent":["import {\n  Component,\n  Host,\n  h,\n  Prop,\n  Element,\n  Event,\n  EventEmitter,\n  State,\n  Method,\n} from \"@stencil/core\";\nimport { IcAdditionalFieldTypes, IcSizes } from \"../../utils/types\";\nimport {\n  isSlotUsed,\n  onComponentRequiredPropUndefined,\n  renderHiddenInput,\n  removeHiddenInput,\n  addFormResetListener,\n  removeFormResetListener,\n  removeDisabledFalse,\n} from \"../../utils/helpers\";\n\n@Component({\n  tag: \"ic-checkbox\",\n  styleUrl: \"ic-checkbox.css\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport class Checkbox {\n  private additionalFieldContainer: HTMLDivElement;\n  private IC_TEXT_FIELD: string = \"ic-text-field\";\n\n  @Element() host: HTMLIcCheckboxElement;\n\n  /**\n   * The style of additionalField that will be displayed if used.\n   */\n  @Prop({ reflect: true }) additionalFieldDisplay: IcAdditionalFieldTypes =\n    \"static\";\n\n  /**\n   * If `true`, the checkbox will be set to the checked state.\n   */\n  @Prop({ reflect: true, mutable: true }) checked?: boolean = false;\n  @State() initiallyChecked = this.checked;\n\n  /**\n   * If `true`, the checkbox will be set to the disabled state.\n   */\n  @Prop() disabled?: boolean = false;\n\n  /**\n   * The text to be displayed when dynamic.\n   */\n  @Prop() dynamicText: string = \"This selection requires additional answers\";\n\n  /**\n   * The group label for the checkbox.\n   */\n  @Prop() groupLabel: string;\n\n  /**\n   * If `true`, the indeterminate state will be displayed when checked.\n   */\n  @Prop() indeterminate: boolean = false;\n\n  /**\n   * The label for the checkbox.\n   */\n  @Prop() label!: string;\n\n  /**\n   * The name for the checkbox. If not set when used in a checkbox group, the name will be based on the group name.\n   */\n  @Prop() name: string;\n\n  /**\n   * The size of the checkbox to be displayed. This does not affect the font size of the label. If a checkbox is contained in a checkbox group, this will override the size set on checkbox group.\n   */\n  @Prop() size?: IcSizes;\n\n  /**\n   * @deprecated This prop should not be used anymore. Set prop `size` to \"small\" instead.\n   */\n  @Prop() small?: boolean = false;\n\n  /**\n   * The value for the checkbox.\n   */\n  @Prop() value!: string;\n\n  /**\n   * @deprecated This event should not be used anymore. Use icCheck instead.\n   */\n  @Event() checkboxChecked: EventEmitter<void>;\n\n  /**\n   * Emitted when a checkbox has been checked.\n   */\n  @Event() icCheck: EventEmitter<void>;\n\n  componentWillLoad(): void {\n    removeDisabledFalse(this.disabled, this.host);\n\n    addFormResetListener(this.host, this.handleFormReset);\n    this.host\n      .querySelector(this.IC_TEXT_FIELD)\n      ?.addEventListener(\"icChange\", this.eventHandler);\n  }\n\n  componentDidLoad(): void {\n    onComponentRequiredPropUndefined(\n      [\n        { prop: this.label, propName: \"label\" },\n        { prop: this.value, propName: \"value\" },\n      ],\n      \"Checkbox\"\n    );\n  }\n\n  componentDidRender(): void {\n    if (this.additionalFieldDisplay === \"static\") {\n      const textfield = this.host.querySelector(this.IC_TEXT_FIELD);\n      if (!this.checked) {\n        textfield && textfield.setAttribute(\"disabled\", \"\");\n      } else {\n        textfield && textfield.removeAttribute(\"disabled\");\n      }\n    } else {\n      if (!this.checked) {\n        this.additionalFieldContainer.style.display = \"none\";\n      } else {\n        this.additionalFieldContainer.style.display = \"flex\";\n      }\n    }\n  }\n\n  disconnectedCallback(): void {\n    removeFormResetListener(this.host, this.handleFormReset);\n    this.host\n      .querySelector(this.IC_TEXT_FIELD)\n      ?.removeEventListener(\"icChange\", this.eventHandler);\n  }\n\n  /**\n   * Sets focus on the checkbox.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    const checkboxEl: HTMLElement =\n      this.host.shadowRoot.querySelector(\".checkbox\");\n    if (checkboxEl) {\n      checkboxEl.focus();\n    }\n  }\n\n  private eventHandler = (event: CustomEvent) => {\n    event.stopImmediatePropagation();\n  };\n\n  private handleClick = () => {\n    this.checked = !this.checked;\n    this.icCheck.emit();\n    this.checkboxChecked.emit();\n  };\n\n  private handleFormReset = (): void => {\n    this.checked = this.initiallyChecked;\n  };\n\n  render() {\n    let id = `ic-checkbox-${\n      this.label !== undefined ? this.label : this.value\n    }-${this.groupLabel}`;\n\n    id = id.replace(/ /g, \"-\");\n\n    const parentElementSize = (\n      this.host.parentElement as HTMLIcCheckboxGroupElement\n    ).size;\n\n    this.checked\n      ? renderHiddenInput(\n          true,\n          this.host,\n          this.name,\n          this.checked && this.value,\n          this.disabled\n        )\n      : removeHiddenInput(this.host);\n\n    return (\n      <Host\n        class={{\n          [\"disabled\"]: this.disabled,\n          [\"small\"]: this.small,\n          [`${this.size || parentElementSize}`]: true,\n        }}\n      >\n        <div class=\"container\">\n          {this.checked && !this.indeterminate && (\n            <svg\n              class=\"checkmark\"\n              width=\"1.5rem\"\n              height=\"1.5rem\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n            >\n              <title>checkmark icon</title>\n              <path d=\"M21 6.285l-11.16 12.733-6.84-6.018 1.319-1.49 5.341 4.686 9.865-11.196 1.475 1.285z\" />\n            </svg>\n          )}\n          {this.checked && this.indeterminate && (\n            <div class=\"indeterminate-symbol\" />\n          )}\n          <input\n            role=\"checkbox\"\n            class={{\n              [\"checkbox\"]: true,\n              [\"checked\"]: this.checked,\n              [\"indeterminate\"]: this.indeterminate,\n            }}\n            type=\"checkbox\"\n            name={this.name}\n            id={id}\n            value={this.value}\n            disabled={this.disabled ? true : null}\n            checked={this.checked}\n            indeterminate={this.indeterminate}\n            onClick={this.handleClick}\n          ></input>\n          <ic-typography class=\"checkbox-label\" variant=\"body\">\n            <label htmlFor={id}>{this.label}</label>\n          </ic-typography>\n        </div>\n        {isSlotUsed(this.host, \"additional-field\") && (\n          <div\n            class=\"dynamic-container\"\n            ref={(el) => (this.additionalFieldContainer = el)}\n          >\n            {this.additionalFieldDisplay === \"dynamic\" && (\n              <div class=\"branch-corner\"></div>\n            )}\n            <div>\n              {this.additionalFieldDisplay === \"dynamic\" && (\n                <ic-typography variant=\"caption\">\n                  <p class=\"dynamic-text\" aria-live=\"polite\">\n                    {this.dynamicText}\n                  </p>\n                </ic-typography>\n              )}\n              <div\n                class={{\n                  \"additional-field-wrapper\":\n                    this.additionalFieldDisplay === \"static\",\n                }}\n              >\n                <slot name=\"additional-field\"></slot>\n              </div>\n            </div>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n","@import \"../../global/normalize.css\";\n\n:host(.disabled) {\n  color: var(--ic-architectural-200);\n  pointer-events: none;\n}\n\n.container {\n  display: flex;\n  width: fit-content;\n  padding: var(--ic-space-xxs) 0 var(--ic-space-xxs) var(--ic-space-xxs);\n  margin-bottom: var(--ic-space-xxs);\n  align-items: center;\n}\n\n:host(.small) .container {\n  margin-bottom: var(--ic-space-xxxs);\n}\n\n.checkbox {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  display: block;\n  position: relative;\n  top: 0;\n  left: 0;\n  height: var(--ic-space-lg);\n  width: var(--ic-space-lg);\n  background-color: transparent;\n  border: var(--ic-space-1px) solid var(--ic-architectural-300);\n  border-radius: var(--ic-border-radius);\n  outline: none;\n  cursor: pointer;\n  transition: var(--ic-easing-transition-fast);\n  flex-shrink: 0;\n}\n\n:host(.small) .checkbox,\n:host(.small) .container svg {\n  width: var(--ic-space-md);\n  height: var(--ic-space-md);\n}\n\n:host(.large) .checkbox,\n:host(.large) .container svg {\n  width: var(--ic-space-xl);\n  height: var(--ic-space-xl);\n}\n\n.checkbox:checked {\n  background-color: var(--ic-action-default);\n  border: var(--ic-space-1px) solid var(--ic-action-default);\n  transition: var(--ic-easing-transition-slow);\n}\n\n.checkbox:checked:disabled {\n  background-color: var(--ic-architectural-200);\n}\n\n.checkbox:indeterminate,\n.checkbox.indeterminate:checked {\n  background-color: transparent;\n  border: 0.125rem solid var(--ic-action-default);\n}\n\n.checkbox:checked:hover {\n  background-color: var(--ic-action-default-hover);\n}\n\n.checkbox:indeterminate:hover,\n.checkbox.indeterminate:checked:hover {\n  background-color: var(--ic-action-default-bg-hover);\n  border: 0.125rem solid var(--ic-action-default-hover);\n}\n\n.checkbox:checked:active {\n  background-color: var(--ic-action-default-active);\n}\n\n.checkbox:indeterminate:active,\n.checkbox.indeterminate:checked:active {\n  background-color: var(--ic-action-default-bg-active);\n  border: 0.125rem solid var(--ic-action-default-active);\n}\n\n.checkbox:hover {\n  background-color: var(--ic-action-default-bg-hover);\n  box-shadow: 0 0 0 0.25rem var(--ic-action-default-bg-hover);\n  border: var(--ic-space-1px) solid var(--ic-action-default-hover);\n}\n\n.checkbox:active {\n  background-color: var(--ic-action-default-bg-active);\n  box-shadow: 0 0 0 0.25rem var(--ic-action-default-bg-active);\n  border: var(--ic-space-1px) solid var(--ic-action-default-active);\n}\n\n.checkbox:focus {\n  box-shadow: var(--ic-border-focus);\n}\n\n.checkbox:disabled {\n  border: var(--ic-space-1px) dashed var(--ic-architectural-200);\n}\n\n.checkbox-label {\n  padding-left: var(--ic-space-sm);\n}\n\n.checkbox-label:hover {\n  cursor: pointer;\n}\n\n.checkmark {\n  position: relative;\n  right: calc(-1 * var(--ic-space-lg));\n  margin-left: calc(-1 * var(--ic-space-lg));\n  fill: white;\n  z-index: 1;\n  background-color: transparent;\n  pointer-events: none;\n  flex-shrink: 0;\n}\n\n:host(.small) .checkmark {\n  margin-left: calc(-1 * var(--ic-space-md));\n  right: calc(-1 * var(--ic-space-md));\n}\n\n:host(.large) .checkmark {\n  margin-left: calc(-1 * var(--ic-space-xl));\n  right: calc(-1 * var(--ic-space-xl));\n}\n\n.indeterminate-symbol {\n  position: relative;\n  width: 0.875rem;\n  height: var(--ic-space-xxxs);\n  right: -1.188rem;\n  margin-left: -0.875rem;\n  z-index: 1;\n  background-color: var(--ic-action-default);\n  pointer-events: none;\n  flex-shrink: 0;\n}\n\n:host(.small) .indeterminate-symbol {\n  width: 0.6rem;\n  right: -0.8rem;\n  margin-left: -0.6rem;\n}\n\n:host(.large) .indeterminate-symbol {\n  width: 1.25rem;\n  right: -1.625rem;\n  margin-left: -1.25rem;\n}\n\n.container:hover .indeterminate-symbol {\n  background-color: var(--ic-action-default-hover);\n}\n\n.container:active .indeterminate-symbol {\n  background-color: var(--ic-action-default-active);\n}\n\n.additional-field-wrapper {\n  margin-left: calc(var(--ic-space-md) + var(--ic-space-lg));\n  margin-top: calc(var(--ic-space-sm) / 2);\n}\n\n.branch-corner {\n  color: var(--ic-action-default);\n  height: var(--ic-space-md);\n  width: var(--ic-space-xl);\n  border-radius: 0 0 0 0.188rem;\n  border-bottom: 0.125rem solid var(--ic-action-default);\n  border-left: 0.125rem solid var(--ic-action-default);\n}\n\n.dynamic-container {\n  display: flex;\n  position: relative;\n  margin: var(--ic-space-xxxs) 0 var(--ic-space-xxs) var(--ic-space-md);\n  gap: var(--ic-space-xs);\n}\n\n.dynamic-text {\n  color: var(--ic-action-default);\n  margin-top: calc(var(--ic-space-sm) / 2);\n  margin-bottom: var(--ic-space-xs);\n  border-radius: 2%;\n}\n\n@media (max-width: 576px) {\n  ::slotted(ic-text-field) {\n    --input-width: 100%;\n  }\n}\n\n@media (forced-colors: active) {\n  /* Styles here only apply to Forced Colors Mode */\n  .checkbox {\n    appearance: revert;\n    transition: none;\n  }\n\n  .checkbox:checked {\n    transition: none;\n  }\n\n  .checkbox:focus-visible {\n    outline: 0.125rem solid highlight;\n  }\n\n  .checkbox:disabled:not(:checked) {\n    appearance: none;\n    border-color: GrayText;\n  }\n\n  .checkmark {\n    fill: none;\n  }\n\n  .indeterminate-symbol {\n    display: none;\n  }\n}\n"],"names":["Checkbox","IC_TEXT_FIELD","eventHandler","event","stopImmediatePropagation","handleClick","_this","checked","icCheck","emit","checkboxChecked","handleFormReset","initiallyChecked","this","removeDisabledFalse","disabled","host","addFormResetListener","_a","querySelector","addEventListener","key","value","onComponentRequiredPropUndefined","prop","label","propName","additionalFieldDisplay","textfield","removeAttribute","setAttribute","additionalFieldContainer","style","display","removeFormResetListener","removeEventListener","_callee","checkboxEl","_regeneratorRuntime","wrap","_context","prev","next","shadowRoot","focus","stop","_setFocus","apply","arguments","_class","_class2","_this2","id","concat","undefined","groupLabel","replace","parentElementSize","parentElement","size","renderHiddenInput","name","removeHiddenInput","h","Host","class","_defineProperty","small","indeterminate","width","height","viewBox","xmlns","d","role","type","onClick","variant","htmlFor","isSlotUsed","ref","el","dynamicText","get"],"sourceRoot":""}