{"version":3,"file":"static/js/4538.bdad4870.chunk.js","mappings":"0mBAgBaA,EAAuB,W,yDAMT,E,eAKG,E,gBAKC,E,gBAKA,E,eAKD,E,YAKH,E,uBAKW,E,sBAKmB,E,sCAEvD,WAAM,IAAAC,EAEFC,EAQEC,KARFD,MACAE,EAOED,KAPFC,iBACAC,EAMEF,KANFE,SACAC,EAKEH,KALFG,SACAC,EAIEJ,KAJFI,UACAC,EAGEL,KAHFK,UACAC,EAEEN,KAFFM,KACAC,EACEP,KADFO,iBAEIC,EACsB,KAA1BR,KAAKC,mBAA4BD,KAAKE,WAAaF,KAAKG,SAG1D,OACEM,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CACHC,OAAKb,EAAA,IAAAc,EAAAA,EAAAA,GAAAd,EACF,QAAUC,IAAKa,EAAAA,EAAAA,GAAAd,EACfG,EAAmBO,IAAmBI,EAAAA,EAAAA,GAAAd,EACtC,WAAaI,IAAQU,EAAAA,EAAAA,GAAAd,EACrB,WAAaK,IAAQS,EAAAA,EAAAA,GAAAd,EACrB,YAAcM,IAASQ,EAAAA,EAAAA,GAAAd,EACvB,YAAcO,IAASO,EAAAA,EAAAA,GAAAd,EACvB,OAASQ,GAAIR,KAGhBW,EAAAA,EAAAA,GAAA,OACEE,MAAO,CACL,mBAAmB,EACnBL,KAAMA,KAGPO,EAAAA,EAAAA,GAAWb,KAAKc,KAAM,eACrBL,EAAAA,EAAAA,GAAA,OACEE,OAAKC,EAAAA,EAAAA,GAAA,GACF,kBAAmB,KAGtBH,EAAAA,EAAAA,GAAA,QAAMM,KAAK,gBAGfN,EAAAA,EAAAA,GAAA,aAECF,GACCN,IAAqBe,EAAAA,EAAoBC,UACvCR,EAAAA,EAAAA,GAAA,QACEE,OAAKC,EAAAA,EAAAA,GAAA,GACF,kBAAmB,GAEtBM,UAAWC,EAAAA,K,GAMxB,CAAAC,IAAA,OAAAC,IAAA,W,0BAnGiC,G,QChBC,knGCArC,ICMaC,EAAc,W,6DAII,E,eAKA,C,CAgB5B,O,8BAdD,WAAM,IAAAC,EACJ,OACEd,EAAAA,EAAAA,GAACC,EAAAA,EAAI,MACHD,EAAAA,EAAAA,GAAA,OACEE,OAAKY,EAAA,IAAAX,EAAAA,EAAAA,GAAAW,EACF,uBAAwB,IAAIX,EAAAA,EAAAA,GAAAW,EAC5B,WAAavB,KAAKE,WAAQU,EAAAA,EAAAA,GAAAW,EAC1B,WAAavB,KAAKG,UAAQoB,KAG7Bd,EAAAA,EAAAA,GAAA,c,KAIPa,CAAA,CAzBwB,G,QDNC,8EEA5B,ICmCaE,EAAI,W,6eACP,KAAAC,aAAuB,EACvB,KAAAC,sBAAgC,EAChC,KAAAC,aAAuB,EACvB,KAAAC,WAAqB,EACrB,KAAAC,aAAuB,EACvB,KAAAC,oBAA8B,EAI9B,KAAAC,kBAA4B,EAC5B,KAAAC,iBAAmC,GA8TnC,KAAAC,oBAAsB,WAC5BC,EAAKC,kBAAoB,E,EAGnB,KAAAC,mBAAqB,WAC3B,IAAMC,EAAyBH,EAAKI,QAAQC,WAC1C,SAACC,GAAM,OAAKA,EAAON,EAAKO,cAAgBP,EAAKC,iBAAiB,IAGhED,EAAKQ,cAAcL,E,EAGb,KAAAM,iBAAmB,SAACC,EAAeC,GACzCX,EAAKY,gBAAgBC,KAAK,CAAEH,KAAAA,EAAMC,WAAAA,IAE7BD,IAAuB,IAAfC,IACXX,EAAKc,QAAQC,QACbf,EAAKH,kBAAmB,E,EAIpB,KAAAmB,mBAAqB,SAACC,GACxBjB,EAAKF,iBAAiBmB,EAAsB,GAC9CjB,EAAKkB,iBAAiBL,KAAK,CACzBM,MAAOnB,EAAKF,iBAAiBmB,EAAsB,GAAGjB,EAAKO,YAC3Da,SAAUpB,EAAKqB,YACbrB,EAAKF,iBAAiBmB,EAAsB,GAAGjB,EAAKO,eAIxDP,EAAKkB,iBAAiBL,KAAK,CACzBM,MAAOnB,EAAKF,iBAAiB,GAAGE,EAAKO,YACrCa,SAAUpB,EAAKqB,YAAYrB,EAAKF,iBAAiB,GAAGE,EAAKO,c,EAKvD,KAAAe,uBAAyB,SAACL,GAC5BjB,EAAKF,iBAAiBmB,EAAsB,GAC9CjB,EAAKkB,iBAAiBL,KAAK,CACzBM,MAAOnB,EAAKF,iBAAiBmB,EAAsB,GAAGjB,EAAKO,YAC3Da,SAAUpB,EAAKqB,YACbrB,EAAKF,iBAAiBmB,EAAsB,GAAGjB,EAAKO,eAIxDP,EAAKkB,iBAAiBL,KAAK,CACzBM,MACEnB,EAAKF,iBAAiBE,EAAKF,iBAAiByB,OAAS,GACnDvB,EAAKO,YAETa,SAAUpB,EAAKqB,YACbrB,EAAKF,iBAAiBE,EAAKF,iBAAiByB,OAAS,GACnDvB,EAAKO,c,EAOP,KAAAiB,YAAc,SAACC,GACE,kBAAnBA,EAAOC,QACT1B,EAAKL,aAAc,EAEA,cAAnB8B,EAAOC,SAC+B,OAAtCD,EAAOE,aAAa,oBACkBC,IAAtCH,EAAOE,aAAa,gBAEpB3B,EAAKJ,oBAAqB,E,EAItB,KAAAiC,eAAiB,SAACC,GACxBA,EAAMC,iBACN/B,EAAKS,kBAAiB,E,EAGhB,KAAAuB,eAAiB,kBACvBhC,EAAKL,YAAcK,EAAKI,QAAUJ,EAAKF,gBAAgB,EAEjD,KAAAmC,qBAAuB,SAACC,GAC9B,IAAMC,EAAcnC,EAAKgC,iBAEzBG,EAAYD,KACTC,EAAYD,GAAkBE,WAC9BpC,EAAKC,kBACJkC,EAAYD,GAAkBlC,EAAKO,kBAAeqB,E,EAGhD,KAAAS,8BAAgC,SAACP,GACvC,IAAMb,EAAsBjB,EAAKF,iBAAiBO,WAChD,SAACC,GAAM,OAAKA,EAAON,EAAKO,cAAgBP,EAAKmB,KAAK,IAKpD,OAFAnB,EAAKsC,aAAc,EAEXR,EAAM5C,KACZ,IAAK,YACHc,EAAKsC,aAAc,EACnBtC,EAAK6B,eAAeC,GACpB9B,EAAKgB,mBAAmBC,GACxB,MACF,IAAK,UACHjB,EAAKsC,aAAc,EACnBtC,EAAK6B,eAAeC,GACpB9B,EAAKsB,uBAAuBL,GAC5B,MACF,IAAK,IACL,IAAK,QACsC,iBAApCa,EAAMS,OAAuBC,IAChCxC,EAAKS,kBAAiB,G,EAMtB,KAAAgC,6BAA+B,SAACX,GACtC,IAAMK,EAAcnC,EAAKgC,iBAEzBhC,EAAKsC,aAAc,EAEnB,IAAMnC,EAAyBgC,EAAY9B,WACzC,SAACC,GAAM,OAAKA,EAAON,EAAKO,cAAgBP,EAAKC,iBAAiB,IAG1DoB,EAAc,SAACqB,GAAa,IAAAC,EAChC,OAAmD,QAAnDA,EAAAC,MAAMC,KAAK7C,EAAKpB,KAAKkE,iBAAiB,OAAOJ,UAAM,IAAAC,OAAA,EAAAA,EAAEH,EAAE,EAEzD,OAAQV,EAAM5C,KACZ,IAAK,YACHc,EAAKsC,aAAc,EACnBtC,EAAK6B,eAAeC,GAChB3B,EAAyBgC,EAAYZ,OAAS,GAChDvB,EAAKiC,qBAAqB9B,EAAyB,GACnDH,EAAK+C,aAAalC,KAAK,CACrBO,SAAUC,EAAYlB,EAAyB,OAGjDH,EAAKiC,qBAAqB,GAC1BjC,EAAK+C,aAAalC,KAAK,CACrBO,SAAUC,EAAY,MAG1BrB,EAAKgD,0BAA2B,EAChChD,EAAKiD,yBAA0B,EAC/B,MACF,IAAK,UACHjD,EAAKsC,aAAc,EACnBtC,EAAK6B,eAAeC,GAElB3B,GAA0B,GAC1BA,EAAyBgC,EAAYZ,OAAS,GAE9CvB,EAAKiC,qBAAqBE,EAAYZ,OAAS,GAC/CvB,EAAK+C,aAAalC,KAAK,CACrBO,SAAUC,EAAYc,EAAYZ,OAAS,OAG7CvB,EAAKiC,qBAAqB9B,EAAyB,GACnDH,EAAK+C,aAAalC,KAAK,CACrBO,SAAUC,EAAYlB,EAAyB,MAGnDH,EAAKgD,0BAA2B,EAChChD,EAAKiD,yBAA0B,EAC/B,MACF,IAAK,OACHjD,EAAKsC,aAAc,EACnBR,EAAMC,iBACN/B,EAAK6B,eAAeC,GACpB9B,EAAKiC,qBAAqB,GAC1BjC,EAAK+C,aAAalC,KAAK,CACrBO,SAAUC,EAAY,KAExB,MACF,IAAK,MACHrB,EAAKsC,aAAc,EACnBR,EAAMC,iBACN/B,EAAK6B,eAAeC,GACpB9B,EAAKiC,qBAAqBE,EAAYZ,OAAS,GAC/CvB,EAAK+C,aAAalC,KAAK,CACrBO,SAAUC,EAAYc,EAAYZ,OAAS,KAE7C,MACF,IAAK,QACHO,EAAMC,iBACN/B,EAAKQ,cAAcL,QACyByB,IAAxCO,EAAYhC,KACdH,EAAKmB,MAAQgB,EAAYhC,GAAwBH,EAAKO,aAExD,MACF,IAAK,SACCP,EAAKU,MACPoB,EAAMoB,2BAERlD,EAAKS,kBAAiB,GACtBT,EAAK+C,aAAalC,KAAK,CAAEO,cAAUQ,IACnC,MACF,IAAK,QACL,IAAK,MACC5B,EAAKL,cACPK,EAAKsC,aAAc,GAErBtC,EAAKgD,0BAA2B,EAChC,MACF,IAAK,YACChD,EAAKL,aACNK,EAAKmD,SAAoCC,WAClB,eAApBpD,EAAKqD,YAA6BrD,EAAKiC,qBAAqB,IACvDjC,EAAKJ,oBACbI,EAAKmD,SAAiCC,WAEzCpD,EAAKiD,yBAA0B,EAC/B,MACF,QACoB,QAAdnB,EAAM5C,MACJc,EAAKL,aACNK,EAAKmD,SAAoCC,WAClB,eAApBpD,EAAKqD,YAA6BrD,EAAKiC,qBAAqB,IACvDjC,EAAKJ,oBACbI,EAAKmD,SAAiCC,WAEzCpD,EAAKiD,yBAA0B,G,EAM/B,KAAAzC,cAAgB,SAACL,GACvB,IAAMgC,EAAcnC,EAAKgC,sBAEmBJ,IAAxCO,EAAYhC,KACdH,EAAKkB,iBAAiBL,KAAK,CACzBM,MAAOgB,EAAYhC,GAAwBH,EAAKO,cAElDP,EAAKC,uBAAoB2B,EACzB5B,EAAK+C,aAAalC,KAAK,CAAEO,cAAUQ,KAEhC5B,EAAKP,YACJO,EAAKmD,SAAoCC,WADxBpD,EAAKS,kBAAiB,E,EAIvC,KAAA6C,kBAAoB,SAACxB,GAC3B,IAAAyB,EAA0BzB,EAAMS,OAAyBiB,QAAjDrC,EAAKoC,EAALpC,MAAOsC,EAAKF,EAALE,MACfzD,EAAKkB,iBAAiBL,KAAK,CAAEM,MAAAA,EAAOsC,MAAAA,IACpCzD,EAAKS,kBAAiB,E,EAGhB,KAAAiD,YAAc,WACpB1D,EAAK2D,mBAAmB9C,KAAK,CAAEM,MAAOnB,EAAKmB,O,EAGrC,KAAAyC,mBAAqB,SAACC,GACb,UAAXA,EAAG3E,KAA8B,MAAX2E,EAAG3E,MAC3B2E,EAAG9B,iBACH/B,EAAK2D,mBAAmB9C,KAAK,CAAEM,MAAOnB,EAAKmB,MAAO2C,WAAYD,EAAG3E,M,EAI7D,KAAA6E,WAAa,SAACjC,GAChBA,EAAMkC,gBAAkBhE,EAAKc,QAC1Bd,EAAKiE,KAAKC,SAASpC,EAAMkC,gBAC5BhE,EAAKS,kBAAiB,EAAOT,EAAKR,uBAGpCQ,EAAKS,kBAAiB,GACtBT,EAAKH,kBAAmB,GAErBG,EAAKL,cAAaK,EAAKR,uBAAyBsC,EAAMkC,c,EAGrD,KAAAG,gBAAkB,SAACrC,GACzBA,EAAMC,gB,EAGA,KAAAqC,kBAAoB,SAACtC,GACC,cAAxB9B,EAAKqE,eACPrE,EAAKsE,0BAA0BxC,GACE,WAAxB9B,EAAKqE,gBAA+BrE,EAAKJ,oBAClDI,EAAKyC,6BAA6BX,E,EAI9B,KAAAyC,iBAAmB,SAACC,EAAmBtF,GAC7Cc,EAAKyE,aAAa5D,KAAK,CAAE2D,SAAUA,EAAUtF,IAAKA,G,EAG5C,KAAAoF,0BAA4B,SAACxC,GACnCA,EAAM4C,cAAe,EACrB,IAAMzD,EAAsBjB,EAAKF,iBAAiBO,WAChD,SAACC,GAAM,OAAKA,EAAON,EAAKO,cAAgBP,EAAKmB,KAAK,IAG9CvB,EAA8C,UAAzBI,EAAKc,QAAQY,QAIxC,OAFA1B,EAAKsC,aAAc,EAEXR,EAAM5C,KACZ,IAAK,IACH4C,EAAMC,iBACN,MACF,IAAK,UACE/B,EAAKP,cACRqC,EAAMC,iBACN/B,EAAKsB,uBAAuBL,GAC5BjB,EAAKsC,aAAc,GAErB,MACF,IAAK,YACEtC,EAAKP,cACRqC,EAAMC,iBACN/B,EAAKgB,mBAAmBC,GACxBjB,EAAKsC,aAAc,GAErB,MACF,IAAK,OACHtC,EAAKkB,iBAAiBL,KAAK,CACzBM,MAAOnB,EAAKF,iBAAiB,GAAGE,EAAKO,cAEvCP,EAAKsC,aAAc,EACnB,MACF,IAAK,MACHtC,EAAKkB,iBAAiBL,KAAK,CACzBM,MACEnB,EAAKF,iBAAiBE,EAAKF,iBAAiByB,OAAS,GACnDvB,EAAKO,cAGXP,EAAKsC,aAAc,EACnB,MACF,IAAK,SACFtC,EAAKP,aAAeO,EAAKS,kBAAiB,GAC3C,MACF,IAAK,SACHT,EAAKS,kBAAiB,GACtB,MACF,IAAK,YACCb,GACFI,EAAKc,QAAQC,QAEf,MACF,IAAK,QACH,MACF,QACMnB,GAAoC,QAAdkC,EAAM5C,MAAkBc,EAAKP,aACrDO,EAAKc,QAAQC,QAEU,IAArBe,EAAM5C,IAAIqC,SACZvB,EAAKsC,aAAc,GAIzBtC,EAAKuE,iBAAiBvE,EAAKsC,YAAaR,EAAM5C,I,EAGxC,KAAAyF,gBAAkB,SAAC7C,GACP,QAAdA,EAAM5C,KAAiB4C,EAAM8C,WAC/B5E,EAAKH,kBAAmB,E,EAIpB,KAAAwB,YAAc,SAACF,GACrB,MAAO,GAAP0D,OAAU7E,EAAK8E,OAAM,KAAAD,OAAI1D,E,EAGnB,KAAA4D,mBAAqB,SAC3BzE,EACA0E,GAEA,IAAIC,EAAY3E,EAAON,EAAKkF,YAU5B,OARI5E,EAAO6E,cACTF,EAAY,GAAHJ,OAAMI,EAAS,MAAAJ,OAAKvE,EAAO6E,cAGlC7E,EAAO8E,UACTH,EAAY,GAAHJ,OAAMI,EAAS,MAAAJ,OAAKvE,EAAO8E,QAAQH,YAG1CD,EACK,GAAPH,OAAUI,EAAS,MAAAJ,OAAKG,EAAahF,EAAKkF,YAAW,UAE9CD,C,EAIH,KAAAI,iBAAmB,SAACjF,GAC1B,IAAIkF,EAAyB,GAM7B,OALIlF,EAAQmF,OACVD,EAASlF,EAAQmF,MAAK,SAACC,EAASC,GAAO,OACrCD,EAAQE,cAAgBD,EAAQC,aAAe,EAAI,CAAC,KAGjDJ,C,EAGD,KAAAK,aAAuC,WAAxB7H,KAAKuG,eAEpB,KAAAuB,iBAAmB,SAAC3B,GAC1B,IAAM4B,EAAiB5B,EAAK6B,cAC1B,0BAGF,GAAID,EAAgB,CAClB,IAAME,EAAQF,EAAeG,UAAYH,EAAeI,cAEtDF,EAAQ9B,EAAKiC,UAAYjC,EAAKgC,cAC9BF,EAAQ9B,EAAKiC,UAAYjC,EAAKgC,gBAE9BhC,EAAKiC,UAAYL,EAAeG,WAElCH,EAAe9E,O,GAIX,KAAAoF,qBAAuB,WACzBnG,EAAKI,QAAQmB,OAAS,GAAKvB,EAAKI,QAAQgG,KAC1CpG,EAAKI,QAAQgG,KAAI,SAAC9F,GACZA,EAAO+F,SACT/F,EAAO+F,SAASD,KACd,SAAC9F,GAAM,OAAMA,EAAOtC,UAAYgC,EAAKF,iBAAiBwG,KAAKhG,EAAO,IAE1DA,EAAOtC,UACjBgC,EAAKF,iBAAiBwG,KAAKhG,E,IAIjCN,EAAKF,iBAAmBE,EAAKqF,iBAAiBrF,EAAKF,kBACnDE,EAAKuG,oBAAoB1F,KAAK,CAAET,QAASJ,EAAKF,kB,EAGxC,KAAA0G,iBAAmB,WACzB,IAAIC,EAAgB,EACpBzG,EAAKpB,KACFkE,iBAAiB,WACjB4D,SAAQ,SAACpG,GAAM,OAAMmG,GAAiBnG,EAAOqG,YAAY,IAExDF,GAAiB,KACnBzG,EAAKiE,KAAK2C,UAAUC,IAAI,c,EAIpB,KAAAC,kBAAoB,SAACjD,GAC3B7D,EAAK+G,YAAYlG,KAAK,CAAEgD,GAAAA,G,EAGlB,KAAAmD,cAAgB,SAAC1G,G,MACvB,OACE/B,EAAAA,EAAAA,GAAC0I,EAAAA,EAAQ,KACN3G,EAAO4G,UAAW3I,EAAAA,EAAAA,GAAA,wBAAsB4I,KAAK,UAC9C5I,EAAAA,EAAAA,GAAA,OAAKE,MAAM,0BACTF,EAAAA,EAAAA,GAAA,OAAKE,MAAM,gBACR6B,EAAO8G,OACN7I,EAAAA,EAAAA,GAAA,OACEE,MAAM,cACNO,UAAWsB,EAAO8G,KAAI,cACV,UAGhB7I,EAAAA,EAAAA,GAAA,iBAAe8I,QAAQ,OAAM,cAAa,SACxC9I,EAAAA,EAAAA,GAAA,SAAI+B,EAAON,EAAKkF,eAGnB5E,EAAO6E,cACN5G,EAAAA,EAAAA,GAAA,iBACEiE,GAAE,GAAAqC,OAAK7E,EAAKqB,YAAYf,EAAON,EAAKO,aAAY,gBAChD9B,MAAM,qBACN4I,QAAQ,UAAS,cACL,SAEZ9I,EAAAA,EAAAA,GAAA,SAAI+B,EAAO6E,cAGd7E,EAAO8E,UACN7G,EAAAA,EAAAA,GAAA,OACEE,MAAM,iBACNO,UAAWsB,EAAO8E,QAAQkC,UAAS,cACvB,YAIfhH,EAAON,EAAKO,eACXP,EAAKmB,OACPb,EAAON,EAAKO,YAAYgH,iBAA4B,QAAV5E,EAAA3C,EAAKmB,aAAK,IAAAwB,OAAA,EAAAA,EAAE4E,gBAC5B,kBAA1BvH,EAAKmD,SAASzB,UACZnD,EAAAA,EAAAA,GAAA,QAAME,MAAM,aAAaO,UAAWwI,EAAAA,I,EAMtC,KAAAC,cAAgB,SACtBnH,EACAoC,EACAsC,GAEA,IACEtE,EAOEV,EAPFU,KACAS,EAMEnB,EANFmB,MACAmB,EAKEtC,EALFsC,YACAqD,EAIE3F,EAJF2F,aACA+B,EAGE1H,EAHF0H,yBACAzH,EAEED,EAFFC,kBACAG,EACEJ,EADFI,QAGF,OACE7B,EAAAA,EAAAA,GAAA,MACEiE,GAAIxC,EAAKqB,YAAYf,EAAON,EAAKO,aACjC9B,MAAO,CACL6B,QAAQ,EACR,iBAAkBqF,GACbrD,GAAeoF,IAChBpH,EAAON,EAAKO,cAAgBN,EAC5BqC,GAAehC,EAAON,EAAKO,cAAgBY,EAC/C,0BACEb,EAAOoF,aACPtF,EAAQsC,EAAQ,KACftC,EAAQsC,EAAQ,GAAGgD,YACtB,kBAAmBpF,EAAOtC,SAC1B,iBAAkBsC,EAAO4G,QACzBS,QAASrH,EAAO8B,UAElBwF,KAAK,SACLC,SACEnH,IACCJ,EAAON,EAAKO,cAAgBY,GAC3Bb,EAAON,EAAKO,cAAgBN,IAC9BqC,EACI,IACA,KAAI,aAEEtC,EAAK+E,mBAAmBzE,EAAQ0E,GAAa,gBAC1C1E,EAAON,EAAKO,cAAgBY,EAAK,gBACjCb,EAAOtC,SAAW,OAAS,QAC1C8J,SAAUxH,EAAO8B,WAAa9B,EAAO4G,SAAWlH,EAAKsD,kBACrDyE,OAAQ/H,EAAK+D,WACbiE,YAAahI,EAAKmE,gBAAe,aACrB7D,EAAON,EAAKO,YAAW,aACvBD,EAAON,EAAKkF,aAEvB5E,EAAO8B,UACN7D,EAAAA,EAAAA,GAAC0I,EAAAA,EAAQ,MACP1I,EAAAA,EAAAA,GAAA,OAAKE,MAAM,uBACTF,EAAAA,EAAAA,GAAA,OACEE,MAAM,iBAAgB,kBACN,cAChBwJ,MAAM,6BACNC,QAAQ,YACRC,KAAK,YAEL5J,EAAAA,EAAAA,GAAA,SAAOiE,GAAG,eAAa,UACvBjE,EAAAA,EAAAA,GAAA,QAAM6J,EAAE,gBAAgBD,KAAK,UAC7B5J,EAAAA,EAAAA,GAAA,QAAM6J,EAAE,sLAEV7J,EAAAA,EAAAA,GAAA,iBAAe8I,QAAQ,SACpB/G,EAAON,EAAKkF,eAGjB3G,EAAAA,EAAAA,GAAA,aACE4I,KAAK,QACLE,QAAQ,WACRS,QAAS9H,EAAK0D,YACd2E,UAAWrI,EAAK4D,mBAChBmE,OAAQ/H,EAAK8G,kBACbtE,GAAG,gBAAc,UAMrBxC,EAAKgH,cAAc1G,G,gCAr3BiB,E,+BACC,E,kBACb,E,6DAEa,E,oBAKA,Y,+CAUN,E,gBAKV,E,2DAeA,Q,yEAoBiB,a,YAKH,E,sDA4Bd,O,mDApB7B,SAAoBgI,GAClBxK,KAAK2B,YAAc6I,EAAWC,MAAK,SAACC,GAAG,OAAKA,EAAIpG,QAAQ,IACxDtE,KAAK4B,UAAY4I,EAAWC,MAAK,SAACC,GAAG,OAAKA,EAAItB,OAAO,IACrDpJ,KAAKgC,iBAAmB,GACxBhC,KAAKqI,sB,GACN,CAAAjH,IAAA,oBAAAiC,MAQD,WACErD,KAAK2K,gBAAgB5H,KAAK,CAAEM,MAAOrD,KAAKqD,O,GACzC,CAAAjC,IAAA,oBAAAiC,MA+CD,WACErD,KAAK0D,YAAY1D,KAAKqF,UAElBrF,KAAK6B,cACiB,eAApB7B,KAAKuF,YAA6BvF,KAAKmE,qBAAqB,GAChEnE,KAAK4J,0BAA2B,E,GAEnC,CAAAxI,IAAA,uBAAAiC,MAED,gBAC8BS,IAAxB9D,KAAK4K,gBACP5K,KAAK4K,eAAeC,UAEtB7K,KAAKqF,SAASyF,oBAAoB,UAAW9K,KAAKiC,qBAClDjC,KAAKqF,SAASyF,oBACZ,iBACA9K,KAAKoC,mB,GAER,CAAAhB,IAAA,oBAAAiC,MAED,W,QACErD,KAAKqI,uBACLrI,KAAKqF,SAAS0F,iBAAiB,UAAW/K,KAAKiC,qBAC/CjC,KAAKqF,SAAS0F,iBAAiB,iBAAkB/K,KAAKoC,oBACtDpC,KAAK2B,YAA0B,QAAZkD,EAAA7E,KAAKsC,eAAO,IAAAuC,OAAA,EAAAA,EAAE4F,MAAK,SAACC,GAAG,OAAKA,EAAIpG,QAAQ,IAC3DtE,KAAK4B,UAAwB,QAAZoJ,EAAAhL,KAAKsC,eAAO,IAAA0I,OAAA,EAAAA,EAAEP,MAAK,SAACC,GAAG,OAAKA,EAAItB,OAAO,G,GACzD,CAAAhI,IAAA,mBAAAiC,MAED,WAEIrD,KAAK6B,aACJ7B,KAAKqF,SAAoC4F,gBAE1CjL,KAAKmF,yBAA0B,IAGjC+F,EAAAA,EAAAA,GACE,CACE,CAAEC,KAAMnL,KAAK4C,KAAMwI,SAAU,QAC7B,CAAED,KAAMnL,KAAKsC,QAAS8I,SAAU,WAChC,CAAED,KAAMnL,KAAKgH,OAAQoE,SAAU,WAC/B,CAAED,KAAMnL,KAAKqL,WAAYD,SAAU,gBAGrC,O,GAEH,CAAAhK,IAAA,qBAAAiC,MAED,WAAkB,IAAAiI,EAAA,KACVC,EAA+BvL,KAAKsC,QAAQmI,MAChD,SAACjI,GAAM,OAAKA,EAAO8I,EAAK7I,cAAgB6I,EAAKjI,KAAK,IAG9CmI,EACuB,OAA3BxL,KAAKmC,wBACsB2B,IAA3B9D,KAAKmC,mBACsB,KAA3BnC,KAAKmC,kBAEP,GAAInC,KAAK4C,MAAgC,IAAxB5C,KAAKsC,QAAQmB,OAC5B,GACEzD,KAAKqD,OACLrD,KAAKwE,aACL+G,GACAvL,KAAKyL,sBACJzL,KAAK8B,mBAEN9B,KAAK8H,iBAAiB9H,KAAKmG,WACtB,GACoB,kBAAzBnG,KAAKgD,QAAQY,SACY,UAAzB5D,KAAKgD,QAAQY,QAEb5D,KAAKmG,KAAKlD,aACL,GACLuI,IACCxL,KAAKmF,0BACLnF,KAAKkF,yBACN,CACA,IAAMwG,EAAgB1L,KAAKc,KAAKkH,cAAc,kBAADjB,OACzB/G,KAAKmC,kBAAiB,OAGtCuJ,GACFA,EAAczI,O,IAIrB,CAAA7B,IAAA,qBAAAiC,MAED,WACE,GAAIrD,KAAKyB,aAAezB,KAAK4C,KAAM,CACjC5C,KAAKyB,aAAc,EACnB,IAAIkK,GAAS,EAEPC,EAAW5L,KAAKqF,SAASwG,QAAQ,aAGvC,GAD8B,OAAbD,EACH,CAEZ,GADA5L,KAAKc,KAAKgI,UAAUC,IAAI,aACuB,UAA3C6C,EAAS/H,aAAa,iBACR7D,KAAKc,KAAKgL,wBAAwBC,IAC/B/L,KAAKc,KAAKgL,wBAAwBE,OAChCJ,EAASE,wBAAwBG,SAEpDN,GAAS,IAGE,IAAXA,GACF3L,KAAKc,KAAKgI,UAAUC,IAAI,0B,CAK1B/I,KAAK4K,eADHe,GACoBO,EAAAA,EAAAA,GAAalM,KAAKmM,SAAUnM,KAAKc,KAAM,CAC3DsL,UAAW,SAGSF,EAAAA,EAAAA,GAAalM,KAAKmM,SAAUnM,KAAKc,KAAM,CAC3DsL,UAAW,SACXC,UAAW,CACT,CACEtL,KAAM,SACNuB,QAAS,CACPgK,OAAQ,CAAC,EAAG,KAGhB,CACEvL,KAAM,OACNuB,QAAS,CACPiK,mBAAoB,CAAC,OACrBC,aAAc,e,MAMfxM,KAAK4C,MACd5C,KAAK4K,eAAe6B,SAGlBzM,KAAK4C,MAAU5C,KAAKsC,QAAQmB,QAC9BzD,KAAK0I,kB,yEAQT,SAAAgE,IAAA,OAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACO/M,KAAK+B,mBACR/B,KAAK8C,gBAAgBC,KAAK,CAAEH,MAAO5C,KAAK4C,OACxC5C,KAAKwE,aAAc,GAErBxE,KAAK+B,kBAAmB,EAAM,wBAAA8K,EAAAG,OAAA,GAAAN,EAAA,UAC/B,yBAAAO,EAAAC,MAAA,KAAAC,UAAA,E,6EAQD,SAAAC,EAAyBpJ,GAAoB,OAAA2I,EAAAA,EAAAA,KAAAC,MAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,OAC3C/M,KAAKwE,aAAc,EAES,cAAxBxE,KAAKuG,eACPvG,KAAKuE,8BAA8BP,GAEnChE,KAAK2E,6BAA6BX,GACnC,wBAAAqJ,EAAAL,OAAA,GAAAI,EAAA,UACF,gBAAAE,GAAA,OAAAC,EAAAL,MAAA,KAAAC,UAAA,E,+EAMD,SAAAK,IAAA,OAAAb,EAAAA,EAAAA,KAAAC,MAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,OACE/M,KAAKmE,qBAAqB,GAAG,wBAAAsJ,EAAAT,OAAA,GAAAQ,EAAA,UAC9B,yBAAAE,EAAAR,MAAA,KAAAC,UAAA,E,IAAA,CAAA/L,IAAA,SAAAiC,MAmkBD,WAAM,IAAAsK,EAAA,KAEFtC,EAWErL,KAXFqL,WACA/I,EAUEtC,KAVFsC,QACA0E,EASEhH,KATFgH,OACA3D,EAQErD,KARFqD,MACAhD,EAOEL,KAPFK,UACAsB,EAME3B,KANF2B,YACAC,EAKE5B,KALF4B,UACA7B,EAIEC,KAJFD,MACA6C,EAGE5C,KAHF4C,KACAI,EAEEhD,KAFFgD,QACAwB,EACExE,KADFwE,YAGF,OACE/D,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CACHC,MAAO,CACL,aAAcN,EACd,WAAiC,WAAd,OAAP2C,QAAO,IAAPA,OAAO,EAAPA,EAASY,UAAuBjC,GAAeC,EAC3D7B,MAAOA,EACP6C,KAAMA,IAGY,IAAnBN,EAAQmB,SACPhD,EAAAA,EAAAA,GAAA,MACEiE,GAAIsC,EACJrG,MAAM,OACNmJ,KAAK,UAAS,aACFuB,EAAU,wBAEX,MAAThI,GAA2B,KAAVA,EAAerD,KAAKuD,YAAYF,GAAS,GAE5D0G,SACEnH,IAAS4B,GAAoC,WAAd,OAAPxB,QAAO,IAAPA,OAAO,EAAPA,EAASY,SAAsB,IAAM,KAE/DgK,IAAK,SAACC,GAAE,OAAMF,EAAKxH,KAAO0H,CAAE,EAC5BtD,UAAWvK,KAAKsG,kBAChBwH,QAAS9N,KAAK6G,gBACdoD,OAAQjK,KAAKiG,YAEZjG,KAAKuH,iBAAiBjF,GAASgG,KAAI,SAAC9F,EAAQoC,GAC3C,OAAIpC,EAAO+F,SACL/F,EAAO+F,SAAS9E,OAAS,GAEzBhD,EAAAA,EAAAA,GAAA,YACEA,EAAAA,EAAAA,GAAA,iBACEE,MAAM,qBACNmJ,KAAK,eACLP,QAAQ,mBAER9I,EAAAA,EAAAA,GAAA,SAAI+B,EAAOmL,EAAKvG,cAEjB5E,EAAO+F,SAASD,KAAI,SAACyF,GAAW,OAC/BJ,EAAKhE,cAAcoE,EAAanJ,EAAOpC,EAAO,KAK7C,KAGFmL,EAAKhE,cAAcnH,EAAQoC,E,QAO/C,CAAAxD,IAAA,OAAAC,IAAA,W,iIA/8Bc,G,QDnCC,w4O","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-input-component-container/ic-input-component-container.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-input-component-container/ic-input-component-container.css?tag=ic-input-component-container","../node_modules/@ukic/web-components/dist/esm/src/components/ic-input-container/ic-input-container.css?tag=ic-input-container","../node_modules/@ukic/web-components/dist/esm/src/components/ic-input-container/ic-input-container.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-menu/ic-menu.css?tag=ic-menu&encapsulation=scoped","../node_modules/@ukic/web-components/dist/esm/src/components/ic-menu/ic-menu.tsx"],"sourcesContent":["import { Component, Element, Host, Prop, h } from \"@stencil/core\";\n\nimport {\n  IcInformationStatus,\n  IcInformationStatusOrEmpty,\n} from \"../../utils/types\";\nimport successIcon from \"../../assets/success-icon.svg\";\nimport { isSlotUsed } from \"../../utils/helpers\";\n\n/**\n * @slot left-icon - Content will be placed to the left of the input.\n */\n@Component({\n  tag: \"ic-input-component-container\",\n  styleUrl: \"ic-input-component-container.css\",\n})\nexport class InputComponentContainer {\n  @Element() host: HTMLIcInputComponentContainerElement;\n\n  /**\n   *  If `true`, the dark variant of the input component container will be displayed.\n   */\n  @Prop() dark?: boolean = false;\n\n  /**\n   *  If `true`, the disabled state will be set.\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   *  If `true`, the input component container will fill the width of the container it is in.\n   */\n  @Prop() fullWidth: boolean = false;\n\n  /**\n   *  If `true`, the input component container will allow for multiple lines.\n   */\n  @Prop() multiLine: boolean = false;\n\n  /**\n   *  If `true`, the readonly state will be set.\n   */\n  @Prop() readonly: boolean = false;\n\n  /**\n   *  If `true`, the small styling will be applied to the input component container.\n   */\n  @Prop() small: boolean = false;\n\n  /**\n   *  If `true`, the validation will display inline.\n   */\n  @Prop() validationInline: boolean = false;\n\n  /**\n   * The validation status of the input component container - e.g. 'error' | 'warning' | 'success'.\n   */\n  @Prop() validationStatus: IcInformationStatusOrEmpty = \"\";\n\n  render() {\n    const {\n      small,\n      validationStatus,\n      disabled,\n      readonly,\n      multiLine,\n      fullWidth,\n      dark,\n      validationInline,\n    } = this;\n    const hasValidationStatus =\n      this.validationStatus !== \"\" && !this.disabled && !this.readonly\n        ? true\n        : false;\n    return (\n      <Host\n        class={{\n          [\"small\"]: small,\n          [validationStatus]: hasValidationStatus,\n          [\"disabled\"]: disabled,\n          [\"readonly\"]: readonly,\n          [\"multiline\"]: multiLine,\n          [\"fullwidth\"]: fullWidth,\n          [\"dark\"]: dark,\n        }}\n      >\n        <div\n          class={{\n            \"focus-indicator\": true,\n            dark: dark,\n          }}\n        >\n          {isSlotUsed(this.host, \"left-icon\") && (\n            <div\n              class={{\n                [\"icon-container\"]: true,\n              }}\n            >\n              <slot name=\"left-icon\" />\n            </div>\n          )}\n          <slot></slot>\n\n          {validationInline &&\n            validationStatus === IcInformationStatus.Success && (\n              <span\n                class={{\n                  [\"inline-success\"]: true,\n                }}\n                innerHTML={successIcon}\n              />\n            )}\n        </div>\n      </Host>\n    );\n  }\n}\n","ic-input-component-container {\n  /**\n   * @prop --border-color: Border colour of the input component container\n   */\n\n  display: flex;\n  border: var(--ic-space-1px) solid\n    var(--border-color, var(--ic-architectural-400));\n  border-radius: var(--ic-border-radius);\n  transition: var(--ic-easing-transition-slow);\n  height: 2.5rem;\n  width: var(--input-width, 20rem);\n  padding: var(--ic-space-1px);\n  background-color: var(--ic-architectural-white);\n  box-sizing: border-box;\n  fill: var(--ic-architectural-400);\n  outline: none;\n}\n\nic-input-component-container.fullwidth {\n  width: 100%;\n}\n\nic-input-component-container.disabled,\nic-input-component-container.disabled:hover {\n  border: var(--ic-space-1px) dashed var(--ic-architectural-200);\n}\n\nic-input-component-container.readonly,\nic-input-component-container.readonly:hover {\n  border: none;\n  padding: 0;\n}\n\nic-input-component-container.error {\n  border: var(--ic-error-border-default);\n  padding: 0;\n}\n\nic-input-component-container.error:hover {\n  border: var(--ic-error-border-hover);\n}\n\nic-input-component-container.error:focus-within {\n  border: var(--ic-error-border-pressed);\n}\n\nic-input-component-container.warning {\n  border: var(--ic-warning-border-default);\n  padding: 0;\n}\n\nic-input-component-container.warning:hover {\n  border: var(--ic-warning-border-hover);\n}\n\nic-input-component-container.warning:focus-within {\n  border: var(--ic-warning-border-pressed);\n}\n\nic-input-component-container.success {\n  border: var(--ic-success-border-default);\n  padding: 0;\n}\n\nic-input-component-container.success:hover {\n  border: var(--ic-success-border-hover);\n}\n\nic-input-component-container.success:focus-within {\n  border: var(--ic-success-border-pressed);\n}\n\nic-input-component-container.small {\n  height: var(--ic-space-xl);\n}\n\nic-input-component-container.multiline {\n  height: auto;\n}\n\nic-input-component-container .icon-container {\n  margin-top: var(--ic-space-xxs);\n  margin-left: 0.438rem;\n  display: flex;\n  align-items: center;\n}\n\nic-input-component-container.multiline .icon-container,\nic-input-component-container.multiline.small .icon-container {\n  margin-top: 0.375rem;\n  display: block;\n}\n\nic-input-component-container.readonly .icon-container {\n  margin-left: -0.313rem;\n}\n\nic-input-component-container.disabled ::placeholder {\n  display: none;\n}\n\nic-input-component-container .inline-success {\n  margin: var(--ic-space-xs) 0.375rem;\n  display: flex;\n  align-items: center;\n}\n\nic-input-component-container.dark:hover {\n  --border-color: var(--ic-architectural-400);\n}\n\nic-input-component-container .inline-success > svg {\n  fill: var(--ic-status-success);\n  height: 1.25rem;\n  width: 1.25rem;\n}\n\nic-input-component-container:hover {\n  border: var(--ic-border-hover);\n  color: var(--ic-action-dark-hover);\n}\n\nic-input-component-container:focus {\n  border: var(--ic-border-pressed);\n}\n\n.focus-indicator {\n  display: flex;\n  width: 100%;\n  margin: -0.125rem;\n  padding: 0.125rem;\n  border-radius: var(--ic-border-radius);\n  transition: var(--ic-easing-transition-fast);\n}\n\n.focus-indicator:focus-within,\n.focus-indicator-enabled {\n  box-shadow: var(--ic-border-focus);\n}\n\n.focus-indicator.dark:focus-within {\n  box-shadow: var(--ic-border-focus);\n}\n\n@media (forced-colors: active) {\n  /* Styles here only apply to Forced Colors Mode */\n  ic-input-component-container,\n  .focus-indicator {\n    transition: none;\n  }\n\n  ic-input-component-container:focus-within {\n    border: var(--ic-space-1px) solid Highlight;\n    outline: 0.125rem solid Highlight;\n  }\n\n  ic-input-component-container.disabled,\n  ic-input-component-container.disabled:hover {\n    border: var(--ic-space-1px) dashed GrayText;\n  }\n}\n","ic-input-container .component-container {\n  display: flex;\n  flex-direction: column;\n}\n","import { Component, Host, Prop, h } from \"@stencil/core\";\n\n@Component({\n  tag: \"ic-input-container\",\n  styleUrl: \"ic-input-container.css\",\n})\nexport class InputContainer {\n  /**\n   * If `true`, the disabled state will be set.\n   */\n  @Prop() disabled?: boolean = false;\n\n  /**\n   * If `true`, the readonly state will be set.\n   */\n  @Prop() readonly?: boolean = false;\n\n  render() {\n    return (\n      <Host>\n        <div\n          class={{\n            [\"component-container\"]: true,\n            [\"disabled\"]: this.disabled,\n            [\"readonly\"]: this.readonly,\n          }}\n        >\n          <slot></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n","@import \"../../global/normalize.css\";\n\n/**\n * @prop --ic-z-index-menu: z-index of menu\n */\n\n@media (prefers-reduced-motion: no-preference) {\n  :host(.open) .menu {\n    transition: max-height var(--ic-transition-duration-slow);\n  }\n}\n\n:host {\n  border-radius: var(--ic-border-radius);\n  max-height: 0;\n  width: var(--input-width, 20rem);\n  color: var(--ic-color-primary-text);\n  background-color: var(--ic-architectural-white);\n  position: relative;\n  z-index: var(--ic-z-index-menu);\n  box-sizing: border-box;\n  box-shadow: var(--ic-elevation-overlay);\n}\n\n:host(:not(.no-focus):focus-within) {\n  box-shadow: var(--ic-border-focus);\n}\n\n#retry-button::part(button) {\n  height: var(--ic-space-lg);\n}\n\n.small #retry-button::part(button) {\n  height: var(--ic-space-md);\n}\n\n:host(.on-dialog) {\n  inset: auto !important;\n}\n\n:host(.on-dialog-fix-translate) {\n  transform: translate(0, 80px) !important;\n}\n\n.menu {\n  text-decoration: none;\n  list-style-type: none;\n  border: var(--ic-space-1px) solid var(--ic-architectural-400);\n  border-radius: var(--ic-border-radius);\n  background-color: var(--ic-architectural-white);\n  visibility: hidden;\n  max-height: 0;\n  overflow-y: hidden;\n}\n\n.menu-scroll {\n  overflow-y: auto;\n}\n\n.menu:focus-visible {\n  outline: none;\n}\n\n:host(.open) {\n  max-height: none;\n  display: block;\n}\n\n:host(.open) .menu {\n  visibility: visible;\n  max-height: 20.125rem;\n}\n\n:host(.full-width) {\n  width: 100%;\n}\n\n.option {\n  padding: 0.5rem 0.438rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n}\n\n.option:not(.loading-option) {\n  justify-content: space-between;\n}\n\n:host(.small) .option {\n  padding: 0.25rem 0.438rem;\n}\n\n.option:last-child {\n  border-radius: 0 0 var(--ic-space-1px) var(--ic-space-1px);\n}\n\n.option:first-child {\n  border-radius: var(--ic-space-1px) var(--ic-space-1px) 0 0;\n}\n\n.option:not(.disabled-option):hover {\n  background-color: var(--ic-action-dark-bg-hover);\n}\n\n.option:not(.disabled-option):active {\n  background-color: var(--ic-action-dark-bg-active);\n}\n\n.option:focus-visible {\n  outline: var(--ic-hc-focus-outline);\n}\n\n.option:not(.disabled-option) .option-description {\n  color: var(--ic-color-secondary-text);\n}\n\n.option .option-label {\n  display: flex;\n  flex-direction: row;\n  align-items: top;\n}\n\n.option .option-element {\n  margin-top: var(--ic-space-xxs);\n}\n\n.option .option-icon {\n  height: var(--ic-space-md);\n  width: var(--ic-space-md);\n  margin-top: var(--ic-space-xxs);\n  margin-right: var(--ic-space-xxxs);\n}\n\n.option-text-container {\n  pointer-events: none;\n}\n\n.option.loading-option .option-text-container {\n  margin-left: 0.625rem;\n  color: var(--ic-color-secondary-text);\n}\n\n.error-icon-svg {\n  height: var(--ic-space-md);\n  width: var(--ic-space-md);\n  fill: var(--ic-status-error);\n  align-self: center;\n  display: flex;\n  margin-right: calc(var(--ic-space-xxs) * 1.2);\n}\n\n.loading-error-info {\n  display: flex;\n}\n\n.check-icon {\n  height: var(--ic-space-lg);\n  width: var(--ic-space-lg);\n  margin-left: 0.5rem;\n  pointer-events: none;\n}\n\n.focused-option .check-icon * {\n  fill: currentcolor;\n}\n\n.option-group-title {\n  padding: 1.5rem 0.438rem 0.5rem;\n  color: var(--ic-color-tertiary-text);\n}\n\n:host(.small) .option-group-title {\n  padding: 0.75rem 0.438rem 0.25rem;\n}\n\n.last-recommended-option {\n  border-bottom: var(--ic-border-default);\n}\n\n.disabled-option {\n  color: var(--ic-architectural-200);\n  cursor: default;\n  pointer-events: none;\n}\n\n.focused-option,\n.focused-option .option-description {\n  background-color: var(--ic-focus-blue) !important;\n  color: var(--ic-color-white-text) !important;\n}\n\n:host(.no-results) li {\n  cursor: no-drop;\n}\n\n:host(.no-results) li:hover {\n  background-color: transparent;\n}\n\n@media (forced-colors: active) {\n  .focused-option:focus {\n    outline: none;\n    border: 0.125rem solid transparent;\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  Method,\n  State,\n  Watch,\n  Fragment,\n} from \"@stencil/core\";\nimport { createPopper, Instance as PopperInstance } from \"@popperjs/core\";\n\nimport {\n  IcActivationTypes,\n  IcMenuOption,\n  IcValueEventDetail,\n} from \"../../utils/types\";\nimport Check from \"../../assets/check-icon.svg\";\nimport { onComponentRequiredPropUndefined } from \"../../utils/helpers\";\nimport {\n  IcOptionSelectEventDetail,\n  IcMenuChangeEventDetail,\n  IcMenuOptionIdEventDetail,\n} from \"./ic-menu.types\";\nimport { IcSearchBarSearchModes } from \"../ic-search-bar/ic-search-bar.types\";\n\n@Component({\n  tag: \"ic-menu\",\n  styleUrl: \"ic-menu.css\",\n  scoped: true,\n})\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport class Menu {\n  private firstRender: boolean = true;\n  private hasPreviouslyBlurred: boolean = false;\n  private hasTimedOut: boolean = false;\n  private isLoading: boolean = false;\n  private isSearchBar: boolean = false;\n  private isSearchableSelect: boolean = false;\n  private menu: HTMLUListElement;\n  private popperInstance: PopperInstance;\n  // Prevents menu re-opening immediately after it is closed on blur when clicking input.\n  private preventClickOpen: boolean = false;\n  private ungroupedOptions: IcMenuOption[] = [];\n\n  @Element() host: HTMLIcMenuElement;\n\n  @State() focusFromSearchKeypress: boolean = false;\n  @State() initialOptionsListRender: boolean = false;\n  @State() keyboardNav: boolean = false;\n  @State() optionHighlighted: string;\n  @State() preventIncorrectTabOrder: boolean = false;\n\n  /**\n   * Determines whether options manually set as values (by pressing 'Enter') when they receive focus using keyboard navigation.\n   */\n  @Prop() activationType?: IcActivationTypes = \"automatic\";\n\n  /**\n   * The reference to an anchor element the menu will position itself from when rendered.\n   */\n  @Prop() anchorEl!: HTMLElement;\n\n  /**\n   * @internal If `true`, autofocus will be applied on selected item when menu is open.\n   */\n  @Prop() autoFocusOnSelected: boolean = true;\n\n  /**\n   *  If `true`, the menu will fill the width of the container.\n   */\n  @Prop() fullWidth: boolean = false;\n\n  /**\n   * The reference to the input element.\n   */\n  @Prop() inputEl!: HTMLElement;\n\n  /**\n   * The label for the input element.\n   */\n  @Prop() inputLabel!: string;\n\n  /**\n   * The custom name for the label field for IcMenuOption.\n   */\n  @Prop() labelField: string = \"label\";\n\n  /**\n   * The ID of the menu.\n   */\n  @Prop() menuId!: string;\n\n  /**\n   * If `true`, the menu will be displayed open.\n   */\n  @Prop({ reflect: true }) open!: boolean;\n\n  /**\n   * @internal - The parent element if ic-menu is nested inside another component.\n   */\n  @Prop() parentEl?: HTMLElement;\n\n  /**\n   * Specify the mode search bar uses to search. `navigation` allows for quick lookups of a set of values, `query` allows for more general searches.\n   */\n  @Prop() searchMode?: IcSearchBarSearchModes = \"navigation\";\n\n  /**\n   * If `true`, the small styling will be applied to the menu.\n   */\n  @Prop({ reflect: true }) small?: boolean = false;\n\n  /**\n   * The possible menu selection options.\n   */\n  @Prop() options!: IcMenuOption[];\n\n  @Watch(\"options\")\n  watchOptionsHandler(newOptions: IcMenuOption[]): void {\n    this.hasTimedOut = newOptions.some((opt) => opt.timedOut);\n    this.isLoading = newOptions.some((opt) => opt.loading);\n    this.ungroupedOptions = [];\n    this.loadUngroupedOptions();\n  }\n\n  /**\n   * The value of the currently selected option.\n   */\n  @Prop({ mutable: true }) value!: string;\n\n  @Watch(\"value\")\n  watchValueHandler(): void {\n    this.menuValueChange.emit({ value: this.value });\n  }\n\n  /**\n   * The custom name for the value field for IcMenuOption.\n   */\n  @Prop() valueField: string = \"value\";\n\n  /**\n   * @internal Emitted when key is pressed while menu is open\n   */\n  @Event() menuKeyPress: EventEmitter<{ isNavKey: boolean; key: string }>;\n\n  /**\n   * @internal Emitted when an option has been highlighted\n   */\n  @Event() menuOptionId: EventEmitter<IcMenuOptionIdEventDetail>;\n\n  /**\n   * @internal Emitted when an option is selected.\n   */\n  @Event() menuOptionSelect!: EventEmitter<IcOptionSelectEventDetail>;\n\n  /**\n   * @internal Emitted when state of menu changes (i.e. open or close).\n   */\n  @Event() menuStateChange!: EventEmitter<IcMenuChangeEventDetail>;\n\n  /**\n   * @internal Emitted when menu value changes.\n   */\n  @Event() menuValueChange: EventEmitter<IcValueEventDetail>;\n\n  /**\n   * @internal Emitted when the retry button is clicked\n   */\n  @Event() retryButtonClicked: EventEmitter<IcValueEventDetail>;\n\n  /**\n   * @internal Emitted when the timeout menu loses focus\n   */\n  @Event() timeoutBlur: EventEmitter<{ ev: FocusEvent }>;\n\n  /**\n   * @internal Emitted when the ungrouped options have been set.\n   */\n  @Event() ungroupedOptionsSet: EventEmitter<{ options: IcMenuOption[] }>;\n\n  connectedCallback(): void {\n    this.getParentEl(this.parentEl);\n\n    if (this.isSearchBar) {\n      if (this.searchMode === \"navigation\") this.setHighlightedOption(0);\n      this.initialOptionsListRender = true;\n    }\n  }\n\n  disconnectedCallback(): void {\n    if (this.popperInstance !== undefined) {\n      this.popperInstance.destroy();\n    }\n    this.parentEl.removeEventListener(\"icClear\", this.handleClearListener);\n    this.parentEl.removeEventListener(\n      \"icSubmitSearch\",\n      this.handleSubmitSearch\n    );\n  }\n\n  componentWillLoad(): void {\n    this.loadUngroupedOptions();\n    this.parentEl.addEventListener(\"icClear\", this.handleClearListener);\n    this.parentEl.addEventListener(\"icSubmitSearch\", this.handleSubmitSearch);\n    this.hasTimedOut = this.options?.some((opt) => opt.timedOut);\n    this.isLoading = this.options?.some((opt) => opt.loading);\n  }\n\n  componentDidLoad(): void {\n    if (\n      this.isSearchBar &&\n      (this.parentEl as HTMLIcSearchBarElement).disableFilter\n    ) {\n      this.focusFromSearchKeypress = true;\n    }\n\n    onComponentRequiredPropUndefined(\n      [\n        { prop: this.open, propName: \"open\" },\n        { prop: this.options, propName: \"options\" },\n        { prop: this.menuId, propName: \"menu-id\" },\n        { prop: this.inputLabel, propName: \"input-label\" },\n        //NOTE: no check for value, input-el or anchor-el as otherwise get console errors on first load of select component\n      ],\n      \"Menu\"\n    );\n  }\n\n  componentDidUpdate(): void {\n    const inputValueInOptions: boolean = this.options.some(\n      (option) => option[this.valueField] === this.value\n    );\n\n    const optionHighlightedIsSet =\n      this.optionHighlighted !== null &&\n      this.optionHighlighted !== undefined &&\n      this.optionHighlighted !== \"\";\n\n    if (this.open && this.options.length !== 0) {\n      if (\n        this.value &&\n        this.keyboardNav &&\n        inputValueInOptions &&\n        this.autoFocusOnSelected &&\n        !this.isSearchableSelect\n      ) {\n        this.scrollToSelected(this.menu);\n      } else if (\n        this.inputEl.tagName !== \"IC-TEXT-FIELD\" &&\n        this.inputEl.tagName !== \"INPUT\"\n      ) {\n        this.menu.focus();\n      } else if (\n        optionHighlightedIsSet &&\n        !this.focusFromSearchKeypress &&\n        !this.preventIncorrectTabOrder\n      ) {\n        const highlightedEl = this.host.querySelector(\n          `li[data-value=\"${this.optionHighlighted}\"]`\n        ) as HTMLElement;\n\n        if (highlightedEl) {\n          highlightedEl.focus();\n        }\n      }\n    }\n  }\n\n  componentDidRender(): void {\n    if (this.firstRender && this.open) {\n      this.firstRender = false;\n      let adjust = false;\n\n      const dialogEl = this.parentEl.closest(\"ic-dialog\");\n\n      const onDialog = dialogEl !== null;\n      if (onDialog) {\n        this.host.classList.add(\"on-dialog\");\n        if (dialogEl.getAttribute(\"data-overflow\") === \"false\") {\n          const menuTop = this.host.getBoundingClientRect().top;\n          const menuHeight = this.host.getBoundingClientRect().height;\n          const dialogHeight = dialogEl.getBoundingClientRect().bottom;\n          if (menuTop + menuHeight > dialogHeight) {\n            adjust = true;\n          }\n        }\n        if (adjust === false) {\n          this.host.classList.add(\"on-dialog-fix-translate\");\n        }\n      }\n\n      if (adjust) {\n        this.popperInstance = createPopper(this.anchorEl, this.host, {\n          placement: \"top\",\n        });\n      } else {\n        this.popperInstance = createPopper(this.anchorEl, this.host, {\n          placement: \"bottom\",\n          modifiers: [\n            {\n              name: \"offset\",\n              options: {\n                offset: [0, 7],\n              },\n            },\n            {\n              name: \"flip\",\n              options: {\n                fallbackPlacements: [\"top\"],\n                rootBoundary: \"viewport\",\n              },\n            },\n          ],\n        });\n      }\n    } else if (this.open) {\n      this.popperInstance.update();\n    }\n\n    if (this.open && !!this.options.length) {\n      this.setMenuScrollbar();\n    }\n  }\n\n  /**\n   * @internal If menu is opened with the mouse, emit menuStateChange custom event.\n   */\n  @Method()\n  async handleClickOpen(): Promise<void> {\n    if (!this.preventClickOpen) {\n      this.menuStateChange.emit({ open: !this.open });\n      this.keyboardNav = false;\n    }\n    this.preventClickOpen = false;\n  }\n\n  /**\n   * Used alongside activationType\n   * If menu is opened via keyboard navigation (i.e. Enter, ArrowUp or ArrowDown), emit optionSelect custom event.\n   * @param {KeyboardEvent} event - keyboard event\n   */\n  @Method()\n  async handleKeyboardOpen(event: KeyboardEvent): Promise<void> {\n    this.keyboardNav = false;\n\n    if (this.activationType === \"automatic\") {\n      this.autoSetInputValueKeyboardOpen(event);\n    } else {\n      this.manSetInputValueKeyboardOpen(event);\n    }\n  }\n\n  /**\n   * @internal Used to highlight the first option in the menu.\n   */\n  @Method()\n  async handleSetFirstOption(): Promise<void> {\n    this.setHighlightedOption(0);\n  }\n\n  private handleClearListener = (): void => {\n    this.optionHighlighted = \"\";\n  };\n\n  private handleSubmitSearch = (): void => {\n    const highlightedOptionIndex = this.options.findIndex(\n      (option) => option[this.valueField] === this.optionHighlighted\n    );\n\n    this.setInputValue(highlightedOptionIndex);\n  };\n\n  private handleMenuChange = (open: boolean, focusInput?: boolean): void => {\n    this.menuStateChange.emit({ open, focusInput });\n\n    if (!open && focusInput !== false) {\n      this.inputEl.focus();\n      this.preventClickOpen = false;\n    }\n  };\n\n  private setNextOptionValue = (selectedOptionIndex: number): void => {\n    if (this.ungroupedOptions[selectedOptionIndex + 1]) {\n      this.menuOptionSelect.emit({\n        value: this.ungroupedOptions[selectedOptionIndex + 1][this.valueField],\n        optionId: this.getOptionId(\n          this.ungroupedOptions[selectedOptionIndex + 1][this.valueField]\n        ),\n      });\n    } else {\n      this.menuOptionSelect.emit({\n        value: this.ungroupedOptions[0][this.valueField],\n        optionId: this.getOptionId(this.ungroupedOptions[0][this.valueField]),\n      });\n    }\n  };\n\n  private setPreviousOptionValue = (selectedOptionIndex: number): void => {\n    if (this.ungroupedOptions[selectedOptionIndex - 1]) {\n      this.menuOptionSelect.emit({\n        value: this.ungroupedOptions[selectedOptionIndex - 1][this.valueField],\n        optionId: this.getOptionId(\n          this.ungroupedOptions[selectedOptionIndex - 1][this.valueField]\n        ),\n      });\n    } else {\n      this.menuOptionSelect.emit({\n        value:\n          this.ungroupedOptions[this.ungroupedOptions.length - 1][\n            this.valueField\n          ],\n        optionId: this.getOptionId(\n          this.ungroupedOptions[this.ungroupedOptions.length - 1][\n            this.valueField\n          ]\n        ),\n      });\n    }\n  };\n\n  private getParentEl = (parent: HTMLElement) => {\n    if (parent.tagName === \"IC-SEARCH-BAR\") {\n      this.isSearchBar = true;\n    } else if (\n      parent.tagName === \"IC-SELECT\" &&\n      parent.getAttribute(\"searchable\") !== null &&\n      parent.getAttribute(\"searchable\") !== undefined\n    ) {\n      this.isSearchableSelect = true;\n    }\n  };\n\n  private arrowBehaviour = (event: KeyboardEvent): void => {\n    event.preventDefault();\n    this.handleMenuChange(true);\n  };\n\n  private setMenuOptions = () =>\n    this.isSearchBar ? this.options : this.ungroupedOptions;\n\n  private setHighlightedOption = (highlightedIndex: number): void => {\n    const menuOptions = this.setMenuOptions();\n\n    menuOptions[highlightedIndex] &&\n      !menuOptions[highlightedIndex].timedOut &&\n      (this.optionHighlighted =\n        menuOptions[highlightedIndex][this.valueField] || undefined);\n  };\n\n  private autoSetInputValueKeyboardOpen = (event: KeyboardEvent) => {\n    const selectedOptionIndex = this.ungroupedOptions.findIndex(\n      (option) => option[this.valueField] === this.value\n    );\n\n    this.keyboardNav = false;\n\n    switch (event.key) {\n      case \"ArrowDown\":\n        this.keyboardNav = true;\n        this.arrowBehaviour(event);\n        this.setNextOptionValue(selectedOptionIndex);\n        break;\n      case \"ArrowUp\":\n        this.keyboardNav = true;\n        this.arrowBehaviour(event);\n        this.setPreviousOptionValue(selectedOptionIndex);\n        break;\n      case \" \":\n      case \"Enter\":\n        if ((event.target as HTMLElement).id !== \"clear-button\") {\n          this.handleMenuChange(true);\n        }\n        break;\n    }\n  };\n\n  private manSetInputValueKeyboardOpen = (event: KeyboardEvent) => {\n    const menuOptions = this.setMenuOptions();\n\n    this.keyboardNav = false;\n\n    const highlightedOptionIndex = menuOptions.findIndex(\n      (option) => option[this.valueField] === this.optionHighlighted\n    );\n\n    const getOptionId = (index: number): string =>\n      Array.from(this.host.querySelectorAll(\"li\"))[index]?.id;\n\n    switch (event.key) {\n      case \"ArrowDown\":\n        this.keyboardNav = true;\n        this.arrowBehaviour(event);\n        if (highlightedOptionIndex < menuOptions.length - 1) {\n          this.setHighlightedOption(highlightedOptionIndex + 1);\n          this.menuOptionId.emit({\n            optionId: getOptionId(highlightedOptionIndex + 1),\n          });\n        } else {\n          this.setHighlightedOption(0);\n          this.menuOptionId.emit({\n            optionId: getOptionId(0),\n          });\n        }\n        this.preventIncorrectTabOrder = false;\n        this.focusFromSearchKeypress = false;\n        break;\n      case \"ArrowUp\":\n        this.keyboardNav = true;\n        this.arrowBehaviour(event);\n        if (\n          highlightedOptionIndex <= 0 ||\n          highlightedOptionIndex > menuOptions.length + 1\n        ) {\n          this.setHighlightedOption(menuOptions.length - 1);\n          this.menuOptionId.emit({\n            optionId: getOptionId(menuOptions.length - 1),\n          });\n        } else {\n          this.setHighlightedOption(highlightedOptionIndex - 1);\n          this.menuOptionId.emit({\n            optionId: getOptionId(highlightedOptionIndex - 1),\n          });\n        }\n        this.preventIncorrectTabOrder = false;\n        this.focusFromSearchKeypress = false;\n        break;\n      case \"Home\":\n        this.keyboardNav = true;\n        event.preventDefault();\n        this.arrowBehaviour(event);\n        this.setHighlightedOption(0);\n        this.menuOptionId.emit({\n          optionId: getOptionId(0),\n        });\n        break;\n      case \"End\":\n        this.keyboardNav = true;\n        event.preventDefault();\n        this.arrowBehaviour(event);\n        this.setHighlightedOption(menuOptions.length - 1);\n        this.menuOptionId.emit({\n          optionId: getOptionId(menuOptions.length - 1),\n        });\n        break;\n      case \"Enter\":\n        event.preventDefault();\n        this.setInputValue(highlightedOptionIndex);\n        if (menuOptions[highlightedOptionIndex] !== undefined) {\n          this.value = menuOptions[highlightedOptionIndex][this.valueField];\n        }\n        break;\n      case \"Escape\":\n        if (this.open) {\n          event.stopImmediatePropagation();\n        }\n        this.handleMenuChange(false);\n        this.menuOptionId.emit({ optionId: undefined });\n        break;\n      case \"Shift\":\n      case \"Tab\":\n        if (this.isSearchBar) {\n          this.keyboardNav = true;\n        }\n        this.preventIncorrectTabOrder = true;\n        break;\n      case \"Backspace\":\n        if (this.isSearchBar) {\n          (this.parentEl as HTMLIcSearchBarElement).setFocus();\n          if (this.searchMode === \"navigation\") this.setHighlightedOption(0);\n        } else if (this.isSearchableSelect) {\n          (this.parentEl as HTMLIcSelectElement).setFocus();\n        }\n        this.focusFromSearchKeypress = true;\n        break;\n      default:\n        if (event.key !== \"Tab\") {\n          if (this.isSearchBar) {\n            (this.parentEl as HTMLIcSearchBarElement).setFocus();\n            if (this.searchMode === \"navigation\") this.setHighlightedOption(0);\n          } else if (this.isSearchableSelect) {\n            (this.parentEl as HTMLIcSelectElement).setFocus();\n          }\n          this.focusFromSearchKeypress = true;\n        }\n        break;\n    }\n  };\n\n  private setInputValue = (highlightedOptionIndex: number) => {\n    const menuOptions = this.setMenuOptions();\n\n    if (menuOptions[highlightedOptionIndex] !== undefined) {\n      this.menuOptionSelect.emit({\n        value: menuOptions[highlightedOptionIndex][this.valueField],\n      });\n      this.optionHighlighted = undefined;\n      this.menuOptionId.emit({ optionId: undefined });\n    }\n    if (!this.hasTimedOut) this.handleMenuChange(false);\n    else (this.parentEl as HTMLIcSearchBarElement).setFocus();\n  };\n\n  private handleOptionClick = (event: Event): void => {\n    const { value, label } = (event.target as HTMLLIElement).dataset;\n    this.menuOptionSelect.emit({ value, label });\n    this.handleMenuChange(false);\n  };\n\n  private handleRetry = (): void => {\n    this.retryButtonClicked.emit({ value: this.value });\n  };\n\n  private handleRetryKeyDown = (ev: KeyboardEvent): void => {\n    if (ev.key === \"Enter\" || ev.key === \" \") {\n      ev.preventDefault();\n      this.retryButtonClicked.emit({ value: this.value, keyPressed: ev.key });\n    }\n  };\n\n  private handleBlur = (event: FocusEvent): void => {\n    if (event.relatedTarget !== this.inputEl) {\n      if (!this.menu.contains(event.relatedTarget as HTMLElement)) {\n        this.handleMenuChange(false, this.hasPreviouslyBlurred);\n      }\n    } else {\n      this.handleMenuChange(false);\n      this.preventClickOpen = true;\n    }\n    if (!this.isSearchBar) this.hasPreviouslyBlurred = !!event.relatedTarget;\n  };\n\n  private handleMouseDown = (event: Event): void => {\n    event.preventDefault();\n  };\n\n  private handleMenuKeyDown = (event: KeyboardEvent) => {\n    if (this.activationType === \"automatic\") {\n      this.autoSetValueOnMenuKeyDown(event);\n    } else if (this.activationType === \"manual\" && this.isSearchableSelect) {\n      this.manSetInputValueKeyboardOpen(event);\n    }\n  };\n\n  private emitMenuKeyPress = (isNavKey: boolean, key: string) => {\n    this.menuKeyPress.emit({ isNavKey: isNavKey, key: key });\n  };\n\n  private autoSetValueOnMenuKeyDown = (event: KeyboardEvent): void => {\n    event.cancelBubble = true;\n    const selectedOptionIndex = this.ungroupedOptions.findIndex(\n      (option) => option[this.valueField] === this.value\n    );\n\n    const isSearchableSelect = this.inputEl.tagName === \"INPUT\";\n\n    this.keyboardNav = false;\n\n    switch (event.key) {\n      case \" \":\n        event.preventDefault();\n        break;\n      case \"ArrowUp\":\n        if (!this.hasTimedOut) {\n          event.preventDefault();\n          this.setPreviousOptionValue(selectedOptionIndex);\n          this.keyboardNav = true;\n        }\n        break;\n      case \"ArrowDown\":\n        if (!this.hasTimedOut) {\n          event.preventDefault();\n          this.setNextOptionValue(selectedOptionIndex);\n          this.keyboardNav = true;\n        }\n        break;\n      case \"Home\":\n        this.menuOptionSelect.emit({\n          value: this.ungroupedOptions[0][this.valueField],\n        });\n        this.keyboardNav = true;\n        break;\n      case \"End\":\n        this.menuOptionSelect.emit({\n          value:\n            this.ungroupedOptions[this.ungroupedOptions.length - 1][\n              this.valueField\n            ],\n        });\n        this.keyboardNav = true;\n        break;\n      case \"Enter\":\n        !this.hasTimedOut && this.handleMenuChange(false);\n        break;\n      case \"Escape\":\n        this.handleMenuChange(false);\n        break;\n      case \"Backspace\":\n        if (isSearchableSelect) {\n          this.inputEl.focus();\n        }\n        break;\n      case \"Shift\":\n        break;\n      default:\n        if (isSearchableSelect && event.key !== \"Tab\" && !this.hasTimedOut) {\n          this.inputEl.focus();\n        }\n        if (event.key.length === 1) {\n          this.keyboardNav = true;\n        }\n        break;\n    }\n    this.emitMenuKeyPress(this.keyboardNav, event.key);\n  };\n\n  private handleMenuKeyUp = (event: KeyboardEvent): void => {\n    if (event.key === \"Tab\" && event.shiftKey) {\n      this.preventClickOpen = false;\n    }\n  };\n\n  private getOptionId = (value: string): string => {\n    return `${this.menuId}-${value}`;\n  };\n\n  private getOptionAriaLabel = (\n    option: IcMenuOption,\n    parentOption: IcMenuOption\n  ): string => {\n    let ariaLabel = option[this.labelField];\n\n    if (option.description) {\n      ariaLabel = `${ariaLabel}, ${option.description}`;\n    }\n\n    if (option.element) {\n      ariaLabel = `${ariaLabel}, ${option.element.ariaLabel}`;\n    }\n\n    if (parentOption) {\n      return `${ariaLabel}, ${parentOption[this.labelField]} group`;\n    } else {\n      return ariaLabel;\n    }\n  };\n\n  private getSortedOptions = (options: IcMenuOption[]): IcMenuOption[] => {\n    let sorted: IcMenuOption[] = [];\n    if (options.sort) {\n      sorted = options.sort((optionA, optionB) =>\n        optionA.recommended && !optionB.recommended ? -1 : 0\n      );\n    }\n    return sorted;\n  };\n\n  private isManualMode = this.activationType === \"manual\";\n\n  private scrollToSelected = (menu: HTMLUListElement) => {\n    const selectedOption = menu.querySelector(\n      \".option[aria-selected]\"\n    ) as HTMLElement;\n\n    if (selectedOption) {\n      const elTop = selectedOption.offsetTop + selectedOption.offsetHeight;\n      if (\n        elTop > menu.scrollTop + menu.offsetHeight ||\n        elTop < menu.scrollTop + menu.offsetHeight\n      ) {\n        menu.scrollTop = selectedOption.offsetTop;\n      }\n      selectedOption.focus();\n    }\n  };\n\n  private loadUngroupedOptions = () => {\n    if (this.options.length > 0 && this.options.map) {\n      this.options.map((option) => {\n        if (option.children) {\n          option.children.map(\n            (option) => !option.disabled && this.ungroupedOptions.push(option)\n          );\n        } else if (!option.disabled) {\n          this.ungroupedOptions.push(option);\n        }\n      });\n    }\n    this.ungroupedOptions = this.getSortedOptions(this.ungroupedOptions);\n    this.ungroupedOptionsSet.emit({ options: this.ungroupedOptions });\n  };\n\n  private setMenuScrollbar = () => {\n    let optionsHeight = 0;\n    this.host\n      .querySelectorAll(\".option\")\n      .forEach((option) => (optionsHeight += option.clientHeight));\n\n    if (optionsHeight >= 320) {\n      this.menu.classList.add(\"menu-scroll\");\n    }\n  };\n\n  private handleTimeoutBlur = (ev: FocusEvent) => {\n    this.timeoutBlur.emit({ ev });\n  };\n\n  private optionContent = (option: IcMenuOption) => {\n    return (\n      <Fragment>\n        {option.loading && <ic-loading-indicator size=\"icon\" />}\n        <div class=\"option-text-container\">\n          <div class=\"option-label\">\n            {option.icon && (\n              <div\n                class=\"option-icon\"\n                innerHTML={option.icon}\n                aria-hidden=\"true\"\n              ></div>\n            )}\n            <ic-typography variant=\"body\" aria-hidden=\"true\">\n              <p>{option[this.labelField]}</p>\n            </ic-typography>\n          </div>\n          {option.description && (\n            <ic-typography\n              id={`${this.getOptionId(option[this.valueField])}-description`}\n              class=\"option-description\"\n              variant=\"caption\"\n              aria-hidden=\"true\"\n            >\n              <p>{option.description}</p>\n            </ic-typography>\n          )}\n          {option.element && (\n            <div\n              class=\"option-element\"\n              innerHTML={option.element.component}\n              aria-hidden=\"true\"\n            ></div>\n          )}\n        </div>\n        {!!option[this.valueField] &&\n          !!this.value &&\n          option[this.valueField].toLowerCase() === this.value?.toLowerCase() &&\n          this.parentEl.tagName !== \"IC-SEARCH-BAR\" && (\n            <span class=\"check-icon\" innerHTML={Check} />\n          )}\n      </Fragment>\n    );\n  };\n\n  private displayOption = (\n    option: IcMenuOption,\n    index?: number,\n    parentOption?: IcMenuOption\n  ): HTMLLIElement => {\n    const {\n      open,\n      value,\n      keyboardNav,\n      isManualMode,\n      initialOptionsListRender,\n      optionHighlighted,\n      options,\n    } = this;\n\n    return (\n      <li\n        id={this.getOptionId(option[this.valueField])}\n        class={{\n          option: true,\n          \"focused-option\": isManualMode\n            ? (keyboardNav || initialOptionsListRender) &&\n              option[this.valueField] === optionHighlighted\n            : keyboardNav && option[this.valueField] === value,\n          \"last-recommended-option\":\n            option.recommended &&\n            options[index + 1] &&\n            !options[index + 1].recommended,\n          \"disabled-option\": option.disabled,\n          \"loading-option\": option.loading,\n          timeout: option.timedOut,\n        }}\n        role=\"option\"\n        tabindex={\n          open &&\n          (option[this.valueField] === value ||\n            option[this.valueField] === optionHighlighted) &&\n          keyboardNav\n            ? \"0\"\n            : \"-1\"\n        }\n        aria-label={this.getOptionAriaLabel(option, parentOption)}\n        aria-selected={option[this.valueField] === value}\n        aria-disabled={option.disabled ? \"true\" : \"false\"}\n        onClick={!option.timedOut && !option.loading && this.handleOptionClick}\n        onBlur={this.handleBlur}\n        onMouseDown={this.handleMouseDown}\n        data-value={option[this.valueField]}\n        data-label={option[this.labelField]}\n      >\n        {option.timedOut ? (\n          <Fragment>\n            <div class=\"loading-error-info\">\n              <svg\n                class=\"error-icon-svg\"\n                aria-labelledby=\"error-title\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"#000000\"\n              >\n                <title id=\"error-title\">Error</title>\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                <path d=\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\" />\n              </svg>\n              <ic-typography variant=\"label\">\n                {option[this.labelField]}\n              </ic-typography>\n            </div>\n            <ic-button\n              size=\"small\"\n              variant=\"tertiary\"\n              onClick={this.handleRetry}\n              onKeyDown={this.handleRetryKeyDown}\n              onBlur={this.handleTimeoutBlur}\n              id=\"retry-button\"\n            >\n              Retry\n            </ic-button>\n          </Fragment>\n        ) : (\n          this.optionContent(option)\n        )}\n      </li>\n    );\n  };\n\n  render() {\n    const {\n      inputLabel,\n      options,\n      menuId,\n      value,\n      fullWidth,\n      hasTimedOut,\n      isLoading,\n      small,\n      open,\n      inputEl,\n      keyboardNav,\n    } = this;\n\n    return (\n      <Host\n        class={{\n          \"full-width\": fullWidth,\n          \"no-focus\": inputEl?.tagName === \"INPUT\" || hasTimedOut || isLoading,\n          small: small,\n          open: open,\n        }}\n      >\n        {options.length !== 0 && (\n          <ul\n            id={menuId}\n            class=\"menu\"\n            role=\"listbox\"\n            aria-label={inputLabel}\n            aria-activedescendant={\n              value != null && value !== \"\" ? this.getOptionId(value) : \"\"\n            }\n            tabindex={\n              open && !keyboardNav && inputEl?.tagName !== \"INPUT\" ? \"0\" : \"-1\"\n            }\n            ref={(el) => (this.menu = el)}\n            onKeyDown={this.handleMenuKeyDown}\n            onKeyUp={this.handleMenuKeyUp}\n            onBlur={this.handleBlur}\n          >\n            {this.getSortedOptions(options).map((option, index) => {\n              if (option.children) {\n                if (option.children.length > 0) {\n                  return (\n                    <div>\n                      <ic-typography\n                        class=\"option-group-title\"\n                        role=\"presentation\"\n                        variant=\"subtitle-small\"\n                      >\n                        <p>{option[this.labelField]}</p>\n                      </ic-typography>\n                      {option.children.map((childOption) =>\n                        this.displayOption(childOption, index, option)\n                      )}\n                    </div>\n                  );\n                } else {\n                  return null;\n                }\n              } else {\n                return this.displayOption(option, index);\n              }\n            })}\n          </ul>\n        )}\n      </Host>\n    );\n  }\n}\n"],"names":["InputComponentContainer","_class","small","this","validationStatus","disabled","readonly","multiLine","fullWidth","dark","validationInline","hasValidationStatus","h","Host","class","_defineProperty","isSlotUsed","host","name","IcInformationStatus","Success","innerHTML","successIcon","key","get","InputContainer","_class4","Menu","firstRender","hasPreviouslyBlurred","hasTimedOut","isLoading","isSearchBar","isSearchableSelect","preventClickOpen","ungroupedOptions","handleClearListener","_this","optionHighlighted","handleSubmitSearch","highlightedOptionIndex","options","findIndex","option","valueField","setInputValue","handleMenuChange","open","focusInput","menuStateChange","emit","inputEl","focus","setNextOptionValue","selectedOptionIndex","menuOptionSelect","value","optionId","getOptionId","setPreviousOptionValue","length","getParentEl","parent","tagName","getAttribute","undefined","arrowBehaviour","event","preventDefault","setMenuOptions","setHighlightedOption","highlightedIndex","menuOptions","timedOut","autoSetInputValueKeyboardOpen","keyboardNav","target","id","manSetInputValueKeyboardOpen","index","_a","Array","from","querySelectorAll","menuOptionId","preventIncorrectTabOrder","focusFromSearchKeypress","stopImmediatePropagation","parentEl","setFocus","searchMode","handleOptionClick","_event$target$dataset","dataset","label","handleRetry","retryButtonClicked","handleRetryKeyDown","ev","keyPressed","handleBlur","relatedTarget","menu","contains","handleMouseDown","handleMenuKeyDown","activationType","autoSetValueOnMenuKeyDown","emitMenuKeyPress","isNavKey","menuKeyPress","cancelBubble","handleMenuKeyUp","shiftKey","concat","menuId","getOptionAriaLabel","parentOption","ariaLabel","labelField","description","element","getSortedOptions","sorted","sort","optionA","optionB","recommended","isManualMode","scrollToSelected","selectedOption","querySelector","elTop","offsetTop","offsetHeight","scrollTop","loadUngroupedOptions","map","children","push","ungroupedOptionsSet","setMenuScrollbar","optionsHeight","forEach","clientHeight","classList","add","handleTimeoutBlur","timeoutBlur","optionContent","Fragment","loading","size","icon","variant","component","toLowerCase","Check","displayOption","initialOptionsListRender","timeout","role","tabindex","onClick","onBlur","onMouseDown","xmlns","viewBox","fill","d","onKeyDown","newOptions","some","opt","menuValueChange","popperInstance","destroy","removeEventListener","addEventListener","_b","disableFilter","onComponentRequiredPropUndefined","prop","propName","inputLabel","_this2","inputValueInOptions","optionHighlightedIsSet","autoFocusOnSelected","highlightedEl","adjust","dialogEl","closest","getBoundingClientRect","top","height","bottom","createPopper","anchorEl","placement","modifiers","offset","fallbackPlacements","rootBoundary","update","_callee","_regeneratorRuntime","wrap","_context","prev","next","stop","_handleClickOpen","apply","arguments","_callee2","_context2","_x","_handleKeyboardOpen","_callee3","_context3","_handleSetFirstOption","_this3","ref","el","onKeyUp","childOption"],"sourceRoot":""}