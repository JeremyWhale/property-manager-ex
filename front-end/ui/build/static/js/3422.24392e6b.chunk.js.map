{"version":3,"file":"static/js/3422.24392e6b.chunk.js","mappings":"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","sources":["../node_modules/@ukic/web-components/dist/esm/src/utils/constants.ts","../node_modules/@ukic/web-components/dist/esm/src/utils/helpers.ts","../node_modules/@ukic/web-components/dist/esm/src/utils/types.ts"],"sourcesContent":["import errorIcon from \"../assets/error-icon.svg\";\nimport infoIcon from \"../assets/info-icon.svg\";\nimport neutralIcon from \"../assets/neutral-icon.svg\";\nimport successIcon from \"../assets/success-icon.svg\";\nimport warningIcon from \"../assets/warning-icon.svg\";\n\n// Global status icons\nexport const VARIANT_ICONS = {\n  neutral: {\n    icon: neutralIcon,\n    ariaLabel: \"Neutral\",\n  },\n  info: {\n    icon: infoIcon,\n    ariaLabel: \"For your information\",\n  },\n  warning: {\n    icon: warningIcon,\n    ariaLabel: \"Warning\",\n  },\n  error: {\n    icon: errorIcon,\n    ariaLabel: \"Error\",\n  },\n  success: {\n    icon: successIcon,\n    ariaLabel: \"Success\",\n  },\n};\n\n// Global ARIA attributes\nexport const IC_INHERITED_ARIA = [\n  \"aria-atomic\",\n  \"aria-busy\",\n  \"aria-controls\",\n  \"aria-current\",\n  \"aria-describedby\",\n  \"aria-description\",\n  \"aria-details\",\n  \"aria-disabled\",\n  \"aria-dropeffect\",\n  \"aria-errormessage\",\n  \"aria-flowto\",\n  \"aria-grabbed\",\n  \"aria-haspopup\",\n  \"aria-hidden\",\n  \"aria-invalid\",\n  \"aria-keyshortcuts\",\n  \"aria-label\",\n  \"aria-labelledby\",\n  \"aria-live\",\n  \"aria-owns\",\n  \"aria-relevant\",\n  \"aria-roledescription\",\n];\n\nexport const IC_DEVICE_SIZES = {\n  XS: 576,\n  S: 768,\n  M: 992,\n  L: 1200,\n  XL: 99999,\n};\n\nexport const IC_BLOCK_COLOR_COMPONENTS = [\n  \"ic-hero\",\n  \"ic-top-navigation\",\n  \"ic-footer\",\n  \"ic-side-navigation\",\n  \"ic-alert\",\n];\n\nexport const IC_FIXED_COLOR_COMPONENTS = [\"ic-alert\"];\n\nexport interface IcColorExceptions {\n  [details: string]: string[];\n}\n\nexport const IC_BLOCK_COLOR_EXCEPTIONS: IcColorExceptions = {\n  \"ic-alert\": [\"ic-link\"],\n};\n\n/* Range within which the chosen theme colour would not have a sufficient brightness difference with either of the black or white foreground colours\n * The brightness difference must be greater than 125 to provide good colour visibility\n * Calculated by:\n * - Using the brightness formula for both colours: https://www.w3.org/TR/AERT/#color-contrast\n * - Adding 125 to the brightness of the black foreground colour - RGB(11, 12, 12)\n * - Subtracting 125 from the brightness of the white foreground colour - RGB(255, 255, 255)\n */\nexport const BLACK_MIN_COLOR_BRIGHTNESS = 136.701;\nexport const WHITE_MAX_COLOR_BRIGHTNESS = 130;\n","import { EventEmitter } from \"@stencil/core\";\nimport {\n  IcCallbackFunctionNoReturn,\n  IcInformationStatusOrEmpty,\n  IcNavParentDetails,\n  IcPropObject,\n  IcSearchMatchPositions,\n  IcColorRGBA,\n} from \"./types\";\n\nimport {\n  IcMenuOption,\n  IcThemeForeground,\n  IcThemeForegroundEnum,\n} from \"../utils/types\";\nimport {\n  IC_BLOCK_COLOR_COMPONENTS,\n  IC_BLOCK_COLOR_EXCEPTIONS,\n  IC_FIXED_COLOR_COMPONENTS,\n} from \"./constants\";\n\nconst DARK_MODE_THRESHOLD = 133.3505;\n\n/**\n * Used to inherit global attributes set on the host. Called in componentWillLoad and assigned\n * to a variable that is later used in the render function.\n *\n * This does not need to be reactive as changing attributes on the host element\n * does not trigger a re-render.\n */\nexport const inheritAttributes = (\n  element: HTMLElement,\n  attributes: string[] = []\n): { [key: string]: unknown } => {\n  const attributeObject: { [key: string]: unknown } = {};\n\n  attributes.forEach((attr) => {\n    if (element.hasAttribute(attr)) {\n      const value = element.getAttribute(attr);\n      if (value !== null) {\n        attributeObject[attr] = element.getAttribute(attr);\n      }\n      element.removeAttribute(attr);\n    }\n  });\n\n  return attributeObject;\n};\n\nexport const debounceEvent = (\n  event: EventEmitter,\n  wait: number\n): EventEmitter => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const original = (event as any)._original || event;\n  return {\n    _original: event,\n    emit: debounce(original.emit.bind(original), wait),\n  } as EventEmitter;\n};\n\nexport const debounce = (\n  func: (...args: unknown[]) => void,\n  wait = 0\n): unknown => {\n  let timer: ReturnType<typeof setTimeout>;\n  return (...args: unknown[]) => {\n    clearTimeout(timer);\n    timer = setTimeout(func, wait, ...args);\n  };\n};\n\n/**\n * This method is used to add a hidden input to a host element that contains\n * a Shadow DOM. It does not add the input inside of the Shadow root which\n * allows it to be picked up inside of forms. It should contain the same\n * values as the host element.\n *\n * @param always Add a hidden input even if the container does not use Shadow\n * @param container The element where the input will be added\n * @param name The name of the input\n * @param value The value of the input\n * @param disabled If true, the input is disabled\n */\nexport const renderHiddenInput = (\n  always: boolean,\n  container: HTMLElement,\n  name: string,\n  value: string | undefined | null,\n  disabled: boolean\n): void => {\n  if (name !== undefined && (always || hasShadowDom(container))) {\n    const inputs = container.querySelectorAll(\"input.ic-input\");\n    const inputEls = Array.from(inputs);\n    const filtered = inputEls.filter((el) => container === el.parentElement);\n\n    let input = filtered[0] as HTMLInputElement;\n    if (input === null || input === undefined) {\n      input = container.ownerDocument.createElement(\"input\");\n      input.type = \"hidden\";\n      input.classList.add(\"ic-input\");\n      container.appendChild(input);\n    }\n    input.disabled = disabled;\n    input.name = name;\n    input.value = value || \"\";\n  }\n};\n\nexport const removeHiddenInput = (container: HTMLElement): void => {\n  const inputs = container.querySelectorAll(\"input.ic-input\");\n  const inputEls = Array.from(inputs);\n  const filtered = inputEls.filter((el) => container === el.parentElement);\n  const input = filtered[0] as HTMLInputElement;\n  input?.remove();\n};\n\nexport const hasShadowDom = (el: HTMLElement): boolean => {\n  return !!el.shadowRoot && !!el.attachShadow;\n};\n\nexport const getInputHelperTextID = (id: string): string => {\n  return id + \"-helper-text\";\n};\n\nexport const getInputValidationTextID = (id: string): string => {\n  return id + \"-validation-text\";\n};\n\nexport const getInputDescribedByText = (\n  inputId: string,\n  helperText: boolean,\n  validationText: boolean\n): string => {\n  return `${helperText ? getInputHelperTextID(inputId) : \"\"} ${\n    validationText ? getInputValidationTextID(inputId) : \"\"\n  }`.trim();\n};\n\n/**\n * This method helps to understand the context in which a component exists,\n * to assist with choosing appropriate foreground colours to use. For example,\n * this method will help you use the 'white' version of a button if it's within\n * a block colour element using white foreground text.\n *\n * This only works for components/elements passed via <slot> and not if they\n * are part of an IC component.\n *\n * \"\"\n * @returns IcThemeForeground depending on the context\n */\nexport const getThemeFromContext = (\n  el: Element,\n  themeFromEvent: IcThemeForeground = null\n): IcThemeForeground => {\n  const parentElement =\n    el.parentElement || (<ShadowRoot>el.getRootNode()).host.parentElement;\n  const blockColorParent = parentElement.closest(\n    IC_BLOCK_COLOR_COMPONENTS.join(\",\")\n  );\n\n  // If within a block color component\n  if (blockColorParent !== null) {\n    const parentTag = blockColorParent.tagName.toLowerCase();\n    const currentTag = el.tagName.toLowerCase();\n\n    if (IC_BLOCK_COLOR_EXCEPTIONS[parentTag]?.includes(currentTag)) {\n      return IcThemeForegroundEnum.Default;\n    } else if (\n      themeFromEvent !== null &&\n      !IC_FIXED_COLOR_COMPONENTS.includes(parentTag)\n    ) {\n      return themeFromEvent;\n    } else if (\n      blockColorParent.classList.contains(IcThemeForegroundEnum.Dark)\n    ) {\n      return IcThemeForegroundEnum.Dark;\n    }\n\n    return IcThemeForegroundEnum.Light;\n  }\n\n  return IcThemeForegroundEnum.Default;\n};\n\nexport const isMobileOrTablet = (): boolean => {\n  let isMobileOrTablet = false;\n  if (\"maxTouchPoints\" in navigator) {\n    isMobileOrTablet = navigator.maxTouchPoints > 0;\n  }\n  return isMobileOrTablet;\n};\n\n/**\n * Will create a button within the lightDOM which interacts with the parent form.\n * This is required as buttons within the shadowDOM will not invoke a submit or reset\n *\n * @param form - parent form element which contains shadowDom button\n * @param button - shadowDOM button\n */\nexport const handleHiddenFormButtonClick = (\n  form: HTMLFormElement,\n  button: HTMLIcButtonElement | HTMLButtonElement\n): void => {\n  const hiddenFormButton = document.createElement(\"button\");\n\n  hiddenFormButton.setAttribute(\"type\", button.type);\n  hiddenFormButton.style.display = \"none\";\n\n  form.appendChild(hiddenFormButton);\n\n  hiddenFormButton.click();\n  hiddenFormButton.remove();\n};\n\nexport const isEmptyString = (value: string): boolean => {\n  if (!value) {\n    return true;\n  }\n\n  return value.trim().length === 0;\n};\n\n/**\n * Extracts the label using the value from an object. Requires the object to have a label and value property.\n * @param value - value from object\n * @param options - list of menu items\n * @returns - label corresponding to value\n */\nexport const getLabelFromValue = (\n  value: string,\n  options: IcMenuOption[],\n  valueField?: string,\n  labelField?: string\n): string | undefined => {\n  if (valueField === undefined) {\n    valueField = \"value\";\n  }\n  if (labelField === undefined) {\n    labelField = \"label\";\n  }\n  const ungroupedOptions: IcMenuOption[] = [];\n  if (options.length > 0 && options.map) {\n    options.map((option) => {\n      if (option.children) {\n        option.children.map((option: IcMenuOption) =>\n          ungroupedOptions.push(option)\n        );\n      } else {\n        ungroupedOptions.push(option);\n      }\n    });\n    if (\n      ungroupedOptions.find((option) => option[valueField] === value) !==\n      undefined\n    ) {\n      return ungroupedOptions.find((option) => option[valueField] === value)[\n        labelField\n      ];\n    }\n  }\n\n  return undefined;\n};\n\n/**\n * Filters the options based on the search string.\n * @param options - array of options\n * @param includeDescriptions - determines whether option descriptions are included when filtering options\n * @param searchString - string used to filter the options\n * @param position - whether the search string matches the start of or anywhere in the options\n * @returns filtered array of options\n */\nexport const getFilteredMenuOptions = (\n  options: IcMenuOption[],\n  includeDescriptions: boolean,\n  searchString: string,\n  position: IcSearchMatchPositions,\n  labelField?: string\n): IcMenuOption[] => {\n  let rawFilteredOptions;\n\n  if (labelField === undefined) {\n    labelField = \"label\";\n  }\n\n  if (position === \"anywhere\") {\n    rawFilteredOptions = options.filter((option) => {\n      if (includeDescriptions) {\n        return (\n          option[labelField]\n            .toLowerCase()\n            .includes(searchString.toLowerCase()) ||\n          option.description?.toLowerCase().includes(searchString.toLowerCase())\n        );\n      } else {\n        return option[labelField]\n          .toLowerCase()\n          .includes(searchString.toLowerCase());\n      }\n    });\n  } else {\n    rawFilteredOptions = options.filter((option) => {\n      if (includeDescriptions) {\n        return (\n          option[labelField]\n            .toLowerCase()\n            .startsWith(searchString.toLowerCase()) ||\n          option.description\n            ?.toLowerCase()\n            .startsWith(searchString.toLowerCase())\n        );\n      } else {\n        return option[labelField]\n          .toLowerCase()\n          .startsWith(searchString.toLowerCase());\n      }\n    });\n  }\n\n  return rawFilteredOptions;\n};\n\nexport const deviceSizeMatches = (size: number): boolean =>\n  window.matchMedia(`(max-width: ${size}px)`).matches;\n\nexport const getCurrentDeviceSize = (): number => {\n  if (deviceSizeMatches(DEVICE_SIZES.S)) {\n    return DEVICE_SIZES.S;\n  }\n  if (deviceSizeMatches(DEVICE_SIZES.M)) {\n    return DEVICE_SIZES.M;\n  }\n  if (deviceSizeMatches(DEVICE_SIZES.L)) {\n    return DEVICE_SIZES.L;\n  }\n  if (deviceSizeMatches(DEVICE_SIZES.XL)) {\n    return DEVICE_SIZES.XL;\n  }\n  //fallback needed as all of above get initialised to 0 in jest tests\n  return DEVICE_SIZES.UNDEFINED;\n};\n\nexport const getCssProperty = (cssVar: string): string => {\n  return getComputedStyle(document.documentElement).getPropertyValue(cssVar);\n};\n\n/**\n * Returns the brightness of the theme colour, calculated by using the theme RGB CSS values by:\n * - Multiplying each RGB value by a set number: https://www.w3.org/TR/AERT/#color-contrast\n * - Adding them together and dividing by 1000\n * This is a similar calculation to its CSS counterpart: \"--ic-theme-text\"\n * @returns number representing the brightness of the theme colour\n */\nexport const getThemeColorBrightness = (): number => {\n  const themeRed = getCssProperty(\"--ic-theme-primary-r\");\n  const themeGreen = getCssProperty(\"--ic-theme-primary-g\");\n  const themeBlue = getCssProperty(\"--ic-theme-primary-b\");\n  return (\n    (parseInt(themeRed) * 299 +\n      parseInt(themeGreen) * 587 +\n      parseInt(themeBlue) * 114) /\n    1000\n  );\n};\n\n/**\n * Returns if dark or light foreground colors should be used for color contrast reasons\n * @returns \"dark\" or \"light\"\n */\nexport const getThemeForegroundColor = (): IcThemeForeground => {\n  return getThemeColorBrightness() > DARK_MODE_THRESHOLD\n    ? IcThemeForegroundEnum.Dark\n    : IcThemeForegroundEnum.Light;\n};\n\nexport const getSlot = (element: HTMLElement, name: string): Element | null => {\n  if (element && element.querySelector) {\n    return element.querySelector(`[slot=\"${name}\"]`);\n  }\n  return null;\n};\n\nexport const slotHasContent = (element: HTMLElement, name: string): boolean =>\n  getSlot(element, name) !== null;\n\nexport const getSlotContent = (\n  element: HTMLElement,\n  name: string\n): Element[] | NodeListOf<ChildNode> | null => {\n  const slot = getSlot(element, name);\n  if (slot) {\n    return getSlotElements(slot);\n  }\n\n  return null;\n};\n\nexport const getSlotElements = (\n  slot: Element\n): NodeListOf<ChildNode> | Element[] => {\n  const slotContent = slot.firstElementChild as HTMLSlotElement;\n\n  if (slotContent !== null) {\n    const elements = slotContent.assignedElements\n      ? slotContent.assignedElements()\n      : slotContent.childNodes;\n    return elements.length ? elements : null;\n  } else {\n    //check for single element\n    return slot === null ? null : [slot];\n  }\n};\n\nexport const getNavItemParentDetails = (\n  el: HTMLElement\n): IcNavParentDetails => {\n  let navType: IcNavParentDetails = { navType: \"\", parent: null };\n  switch (getParentElementType(el)) {\n    case \"IC-NAVIGATION-GROUP\":\n      navType = getNavItemParentDetails(el.parentElement);\n      break;\n    case \"IC-TOP-NAVIGATION\":\n      navType = { navType: \"top\", parent: getParentElement(el) };\n      break;\n    case \"IC-SIDE-NAVIGATION\":\n      navType = { navType: \"side\", parent: getParentElement(el) };\n      break;\n    case \"IC-PAGE-HEADER\":\n      navType = { navType: \"page-header\", parent: null };\n      break;\n  }\n  return navType;\n};\n\nexport const DEVICE_SIZES = {\n  XS: Number(getCssProperty(\"--ic-breakpoint-xs\").replace(\"px\", \"\")), // 0\n  S: Number(getCssProperty(\"--ic-breakpoint-sm\").replace(\"px\", \"\")), // 576\n  M: Number(getCssProperty(\"--ic-breakpoint-md\").replace(\"px\", \"\")), // 768\n  L: Number(getCssProperty(\"--ic-breakpoint-lg\").replace(\"px\", \"\")), // 992\n  XL: Number(getCssProperty(\"--ic-breakpoint-xl\").replace(\"px\", \"\")), // 1200\n  UNDEFINED: 1200,\n};\n\nexport const hasValidationStatus = (\n  status: IcInformationStatusOrEmpty,\n  disabled: boolean\n): boolean => {\n  return status !== \"\" && !disabled;\n};\n\nexport const isSlotUsed = (element: HTMLElement, slotName: string): boolean => {\n  return Array.from(element.children).some(\n    (child) => child.getAttribute(\"slot\") === slotName\n  );\n};\n\n// added as a common method to allow detection of gatsby hydration issue, where (camelCase) props are initially undefined & then update\n// with a value. Allows a callback function to be executed when this is the case\nexport const onComponentPropUndefinedChange = (\n  oldValue: string | undefined,\n  newValue: string | undefined,\n  callback: IcCallbackFunctionNoReturn\n): void => {\n  if (oldValue === undefined && newValue !== oldValue) {\n    callback();\n  }\n};\n\nexport const onComponentRequiredPropUndefined = (\n  props: IcPropObject[],\n  component: string\n): void => {\n  for (let i = 0; i < props.length; i++) {\n    const { prop, propName } = props[i];\n    if (prop === null || prop === undefined) {\n      console.error(\n        `No ${propName} specified for ${component} component - prop '${propName}' (web components) / '${kebabToCamelCase(\n          propName\n        )}' (react) required`\n      );\n    }\n  }\n};\n\nexport const kebabToCamelCase = (kebabCase: string): string => {\n  kebabCase = kebabCase.toLowerCase();\n  const individualWords: string[] = kebabCase.split(\"-\");\n  let camelCase = individualWords[0];\n  for (let i = 1; i < individualWords.length; i++) {\n    camelCase +=\n      individualWords[i].substring(0, 1).toUpperCase() +\n      individualWords[i].substring(1);\n  }\n  return camelCase;\n};\n\nexport const checkResizeObserver = (\n  callbackFn: IcCallbackFunctionNoReturn\n): void => {\n  if (\n    typeof window !== \"undefined\" &&\n    typeof window.ResizeObserver !== \"undefined\"\n  ) {\n    callbackFn();\n  }\n};\n\nconst hex2dec = function (v: string) {\n  return parseInt(v, 16);\n};\n\nexport const hexToRgba = (hex: string): IcColorRGBA => {\n  let c;\n  if (hex.length === 4) {\n    c = hex.replace(\"#\", \"\").split(\"\");\n    return {\n      r: hex2dec(c[0] + c[0]),\n      g: hex2dec(c[1] + c[1]),\n      b: hex2dec(c[2] + c[2]),\n      a: 1,\n    };\n  } else {\n    return {\n      r: hex2dec(hex.slice(1, 3)),\n      g: hex2dec(hex.slice(3, 5)),\n      b: hex2dec(hex.slice(5)),\n      a: 1,\n    };\n  }\n};\n\nexport const rgbaStrToObj = (rgbaStr: string): IcColorRGBA => {\n  const fourthChar = rgbaStr.slice(3, 4);\n  let colorRGBA: IcColorRGBA;\n  if (fourthChar.toLowerCase() === \"a\") {\n    colorRGBA = { r: null, g: null, b: null, a: null };\n    const rgba = rgbaStr\n      .substring(5, rgbaStr.length - 1)\n      .replace(/ /g, \"\")\n      .split(\",\");\n    colorRGBA.r = Number(rgba[0]);\n    colorRGBA.g = Number(rgba[1]);\n    colorRGBA.b = Number(rgba[2]);\n    colorRGBA.a = Number(rgba[3]);\n  } else {\n    colorRGBA = { r: null, g: null, b: null, a: 1 };\n    const rgb = rgbaStr\n      .substring(4, rgbaStr.length - 1)\n      .replace(/ /g, \"\")\n      .split(\",\");\n    colorRGBA.r = Number(rgb[0]);\n    colorRGBA.g = Number(rgb[1]);\n    colorRGBA.b = Number(rgb[2]);\n  }\n\n  return colorRGBA;\n};\n\nexport const elementOverflowsX = (element: HTMLElement): boolean => {\n  return element.scrollWidth > element.clientWidth;\n};\n/**\n *\n * @param child - The child element\n * @returns string\n */\nexport const getParentElementType = (child: HTMLElement): string =>\n  child.parentElement.tagName;\n\nexport const getParentElement = (child: HTMLElement): HTMLElement =>\n  child.parentElement;\n\nexport const hasClassificationBanner = (): boolean => {\n  return document.querySelector(\"ic-classification-banner:not([inline='true'])\")\n    ? true\n    : false;\n};\n\nexport const getForm = (el: HTMLElement): HTMLFormElement | null => {\n  return el.closest(\"FORM\");\n};\n\nexport const addFormResetListener = (\n  el: HTMLElement,\n  callbackFn: IcCallbackFunctionNoReturn\n): void => {\n  const form = getForm(el);\n  if (form !== null) {\n    form.addEventListener(\"reset\", callbackFn);\n  }\n};\n\nexport const removeFormResetListener = (\n  el: HTMLElement,\n  callbackFn: IcCallbackFunctionNoReturn\n): void => {\n  const form = getForm(el);\n  if (form !== null) {\n    form.removeEventListener(\"reset\", callbackFn);\n  }\n};\n\nexport const pxToRem = (px: string, base = 16): string => {\n  const tempPx = parseInt(px);\n  return `${(1 / base) * tempPx}rem`;\n};\n\nexport const removeDisabledFalse = (\n  disabled: boolean,\n  element: HTMLElement\n): void => {\n  if (!disabled) {\n    element.removeAttribute(\"disabled\");\n  }\n};\n","export type IcFocusableComponents =\n  | HTMLIcBreadcrumbElement\n  | HTMLIcButtonElement\n  | HTMLIcCardElement\n  | HTMLIcCheckboxElement\n  | HTMLIcChipElement\n  | HTMLIcLinkElement\n  | HTMLIcNavigationButtonElement\n  | HTMLIcNavigationGroupElement\n  | HTMLIcNavigationItemElement\n  | HTMLIcRadioOptionElement\n  | HTMLIcSearchBarElement\n  | HTMLIcSelectElement\n  | HTMLIcSwitchElement\n  | HTMLIcTabElement\n  | HTMLIcTextFieldElement;\n\nexport type IcStatusVariants =\n  | \"neutral\"\n  | \"info\"\n  | \"warning\"\n  | \"error\"\n  | \"success\";\n\nexport enum IcInformationStatus {\n  Warning = \"warning\",\n  Error = \"error\",\n  Success = \"success\",\n}\n\nexport type IcSizes = \"default\" | \"large\" | \"small\";\n\nexport type IcInformationStatusOrEmpty = \"warning\" | \"error\" | \"success\" | \"\";\n\nexport type IcNavType = \"side\" | \"top\" | \"page-header\";\n\n// From: https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\nexport type IcAutocompleteTypes =\n  | \"on\"\n  | \"off\"\n  | \"name\"\n  | \"honorific-prefix\"\n  | \"given-name\"\n  | \"additional-name\"\n  | \"family-name\"\n  | \"honorific-suffix\"\n  | \"nickname\"\n  | \"email\"\n  | \"username\"\n  | \"new-password\"\n  | \"current-password\"\n  | \"one-time-code\"\n  | \"organization-title\"\n  | \"organization\"\n  | \"street-address\"\n  | \"address-line1\"\n  | \"address-line2\"\n  | \"address-line3\"\n  | \"address-level4\"\n  | \"address-level3\"\n  | \"address-level2\"\n  | \"address-level1\"\n  | \"country\"\n  | \"country-name\"\n  | \"postal-code\"\n  | \"cc-name\"\n  | \"cc-given-name\"\n  | \"cc-additional-name\"\n  | \"cc-family-name\"\n  | \"cc-family-name\"\n  | \"cc-number\"\n  | \"cc-exp\"\n  | \"cc-exp-month\"\n  | \"cc-exp-year\"\n  | \"cc-csc\"\n  | \"cc-type\"\n  | \"transaction-currency\"\n  | \"transaction-amount\"\n  | \"language\"\n  | \"bday\"\n  | \"bday-day\"\n  | \"bday-month\"\n  | \"bday-year\"\n  | \"sex\"\n  | \"tel\"\n  | \"tel-country-code\"\n  | \"tel-national\"\n  | \"tel-area-code\"\n  | \"tel-local\"\n  | \"tel-extension\"\n  | \"impp\"\n  | \"url\"\n  | \"photo\";\n\nexport type IcAlignment = \"left\" | \"center\" | \"full-width\";\n\nexport enum IcThemeForegroundEnum {\n  Default = \"default\",\n  Dark = \"dark\",\n  Light = \"light\",\n}\n\nexport type IcThemeForeground = \"default\" | \"dark\" | \"light\";\n\nexport type IcThemeForegroundNoDefault = \"dark\" | \"light\";\n\nexport type IcTheme = {\n  mode: IcThemeForeground;\n  color: IcColorRGB;\n};\n\nexport type IcAdditionalFieldTypes = \"static\" | \"dynamic\";\n\nexport type IcColorRGB = {\n  r: number;\n  g: number;\n  b: number;\n};\n\nexport type IcColorRGBA = IcColorRGB & {\n  a: number;\n};\n\nexport type IcActivationTypes = \"automatic\" | \"manual\";\n\nexport type IcAutocorrectStates = \"on\" | \"off\";\n\nexport type IcNavParentDetails = {\n  navType: IcNavType | \"\";\n  parent: HTMLElement;\n};\n\nexport type IcTypographyVariants =\n  | \"h1\"\n  | \"h2\"\n  | \"h3\"\n  | \"h4\"\n  | \"subtitle-large\"\n  | \"subtitle-small\"\n  | \"body\"\n  | \"label\"\n  | \"label-uppercase\"\n  | \"caption\"\n  | \"caption-uppercase\"\n  | \"code-large\"\n  | \"code-small\"\n  | \"code-extra-small\"\n  | \"badge\"\n  | \"badge-small\";\n\n/**\n * @interface IcMenuOption\n * @field {string} A label field to options. Defaults to \"label\", but can have any custom name.\n * @field {string} A value field to options. Defaults to \"value\", but can have any custom name.\n */\nexport interface IcMenuOption {\n  description?: string;\n  disabled?: boolean;\n  recommended?: boolean;\n  children?: IcMenuOption[];\n  loading?: boolean;\n  timedOut?: boolean;\n  [key: string]: any;\n  element?: {\n    component: any;\n    ariaLabel: string;\n  };\n  icon?: any;\n}\n\nexport type IcSearchMatchPositions = \"start\" | \"anywhere\";\n\nexport type IcCallbackFunctionNoReturn = (...args: unknown[]) => void;\n\nexport type IcRequiredPropsTypes =\n  | string\n  | boolean\n  | number\n  | HTMLElement\n  | IcMenuOption[];\n\nexport type IcPropObject = { prop: IcRequiredPropsTypes; propName: string };\n\nexport type IcRelatedTarget = EventTarget | undefined;\n\nexport type IcOrientation = \"horizontal\" | \"vertical\";\n\nexport interface IcValueEventDetail {\n  value: string;\n  keyPressed?: string;\n}\nexport interface IcBlurEventDetail {\n  relatedTarget: IcRelatedTarget;\n}\n"],"names":["VARIANT_ICONS","neutral","icon","ariaLabel","info","warning","warningIcon","error","errorIcon","success","successIcon","IC_INHERITED_ARIA","IC_DEVICE_SIZES","XS","S","M","L","XL","IC_BLOCK_COLOR_COMPONENTS","IC_FIXED_COLOR_COMPONENTS","IC_BLOCK_COLOR_EXCEPTIONS","BLACK_MIN_COLOR_BRIGHTNESS","WHITE_MAX_COLOR_BRIGHTNESS","inheritAttributes","element","attributeObject","arguments","length","undefined","forEach","attr","hasAttribute","getAttribute","removeAttribute","debounceEvent","event","wait","original","_original","emit","debounce","bind","func","timer","clearTimeout","_len","args","Array","_key","setTimeout","apply","concat","renderHiddenInput","always","container","name","value","disabled","hasShadowDom","inputs","querySelectorAll","input","from","filter","el","parentElement","ownerDocument","createElement","type","classList","add","appendChild","removeHiddenInput","remove","shadowRoot","attachShadow","getInputHelperTextID","id","getInputValidationTextID","getInputDescribedByText","inputId","helperText","validationText","trim","getThemeFromContext","themeFromEvent","blockColorParent","getRootNode","host","closest","join","parentTag","tagName","toLowerCase","currentTag","_a","includes","IcThemeForegroundEnum","Default","contains","Dark","Light","isMobileOrTablet","navigator","maxTouchPoints","handleHiddenFormButtonClick","form","button","hiddenFormButton","document","setAttribute","style","display","click","isEmptyString","getLabelFromValue","options","valueField","labelField","ungroupedOptions","map","option","children","push","find","getFilteredMenuOptions","includeDescriptions","searchString","position","description","startsWith","deviceSizeMatches","size","window","matchMedia","matches","getCurrentDeviceSize","DEVICE_SIZES","UNDEFINED","getCssProperty","cssVar","getComputedStyle","documentElement","getPropertyValue","getThemeColorBrightness","themeRed","themeGreen","themeBlue","parseInt","getThemeForegroundColor","getSlot","querySelector","slotHasContent","getSlotContent","slot","getSlotElements","slotContent","firstElementChild","elements","assignedElements","childNodes","getNavItemParentDetails","navType","parent","getParentElementType","getParentElement","Number","replace","hasValidationStatus","status","isSlotUsed","slotName","some","child","onComponentPropUndefinedChange","oldValue","newValue","callback","onComponentRequiredPropUndefined","props","component","i","_props$i","prop","propName","console","kebabToCamelCase","kebabCase","individualWords","split","camelCase","substring","toUpperCase","checkResizeObserver","callbackFn","ResizeObserver","hex2dec","v","hexToRgba","hex","c","r","g","b","a","slice","rgbaStrToObj","rgbaStr","colorRGBA","rgba","rgb","elementOverflowsX","scrollWidth","clientWidth","hasClassificationBanner","getForm","addFormResetListener","addEventListener","removeFormResetListener","removeEventListener","pxToRem","px","base","tempPx","removeDisabledFalse","IcInformationStatus"],"sourceRoot":""}