{"version":3,"file":"static/js/2770.7ca403c3.chunk.js","mappings":"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","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-search-bar/ic-search-bar.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-search-bar/ic-search-bar.css?tag=ic-search-bar&encapsulation=shadow"],"sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Host,\n  Listen,\n  Prop,\n  State,\n  Watch,\n  Method,\n  h,\n} from \"@stencil/core\";\n\nimport {\n  IcAutocompleteTypes,\n  IcAutocorrectStates,\n  IcThemeForegroundEnum,\n  IcMenuOption,\n} from \"../../utils/types\";\nimport {\n  getInputDescribedByText,\n  renderHiddenInput,\n  handleHiddenFormButtonClick,\n  getLabelFromValue,\n  onComponentRequiredPropUndefined,\n  getFilteredMenuOptions,\n  removeDisabledFalse,\n} from \"../../utils/helpers\";\nimport {\n  IcSearchBarBlurEventDetail,\n  IcSearchBarSearchModes,\n} from \"./ic-search-bar.types\";\nimport { IcValueEventDetail, IcBlurEventDetail } from \"../../utils/types\";\nimport {\n  IcMenuChangeEventDetail,\n  IcOptionSelectEventDetail,\n} from \"../ic-menu/ic-menu.types\";\n\nimport clearIcon from \"../../assets/clear-icon.svg\";\nimport searchIcon from \"../../assets/search-icon.svg\";\n\nlet inputIds = 0;\n\n@Component({\n  tag: \"ic-search-bar\",\n  styleUrl: \"ic-search-bar.css\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport class SearchBar {\n  private anchorEl: HTMLElement;\n  private assistiveHintEl: HTMLSpanElement = null;\n  private debounceAriaLive: number;\n  private hasTimedOut = false;\n  private inputEl: HTMLIcTextFieldElement;\n  private inputId = `ic-search-bar-input-${inputIds++}`;\n  private menu: HTMLIcMenuElement;\n  private menuCloseFromMenuChangeEvent: boolean = false;\n  private menuId = `${this.inputId}-menu`;\n  private preLoad = true;\n  private preventSubmit: boolean = false;\n  private prevNoOption: boolean = false;\n  private retryButtonClick: boolean = false;\n  private retryViaKeyPress: boolean;\n  private timeoutTimer: number;\n  private truncateValue = false;\n  private searchSubmitButton: HTMLIcButtonElement;\n\n  @Element() el: HTMLIcSearchBarElement;\n\n  @State() ariaActiveDescendant: string;\n  @State() clearButtonFocused: boolean = false;\n  @State() highlightedValue: string;\n  @State() open: boolean = false;\n  @State() searchSubmitFocused: boolean = false;\n  @State() showClearButton: boolean = false;\n\n  /**\n   * The automatic capitalisation of the text value as it is entered/edited by the user.\n   * Available options: \"off\", \"none\", \"on\", \"sentences\", \"words\", \"characters\".\n   */\n  @Prop() autocapitalize = \"off\";\n\n  /**\n   * The state of autocompletion the browser can apply on the text value.\n   */\n  @Prop() autocomplete?: IcAutocompleteTypes = \"off\";\n\n  /**\n   * The state of autocorrection the browser can apply when the user is entering/editing the text value.\n   */\n  @Prop() autocorrect?: IcAutocorrectStates = \"off\";\n\n  /**\n   * If `true`, the form control will have input focus when the page loads.\n   */\n  @Prop() autofocus = false;\n\n  /**\n   * The number of characters until suggestions appear. The submit button will be disabled until the inputted value is equal to or greater than this number.\n   */\n  @Prop() charactersUntilSuggestion: number = 2;\n\n  /**\n   * If `true`, the disabled state will be set.\n   */\n  @Prop() disabled?: boolean = false;\n\n  /**\n   * Specify whether to disable the built in filtering. For example, if options will already be filtered from external source.\n   * If `true`, all options provided will be displayed.\n   */\n  @Prop() disableFilter?: boolean = false;\n\n  /**\n   * The amount of time, in milliseconds, to wait to trigger the `icChange` event after each keystroke.\n   */\n  @Prop() debounce?: number = 0;\n\n  /**\n   * The text displayed when there are no options in the option list.\n   */\n  @Prop() emptyOptionListText = \"No results found\";\n\n  /**\n   * If `true`, the search bar will be focused when component loaded.\n   */\n  @Prop() focusOnLoad?: boolean = false;\n\n  /**\n   * Specify whether the search bar fills the full width of the container.\n   * If `true`, this overrides the --input-width CSS variable.\n   */\n  @Prop() fullWidth?: boolean = false;\n\n  /**\n   * The helper text that will be displayed for additional field guidance.\n   */\n  @Prop() helperText?: string = \"\";\n\n  /**\n   * If `true`, the label will be hidden and the required label value will be applied as an aria-label.\n   */\n  @Prop() hideLabel?: boolean = false;\n\n  /**\n   * The hint text for the hidden assistive description element.\n   */\n  @Prop() hintText?: string =\n    \"When autocomplete results are available use the up and down arrows to choose and press enter to select\";\n\n  /**\n   * The label for the search bar.\n   */\n  @Prop() label!: string;\n\n  /**\n   * The custom name for the label field to correspond with the IcMenuOption type.\n   */\n  @Prop() labelField?: string = \"label\";\n\n  /**\n   * Trigger loading state when fetching options asyncronously\n   */\n  @Prop({ mutable: true }) loading?: boolean = false;\n\n  /**\n   * Change the message displayed when external loading times out.\n   */\n  @Prop() loadingErrorLabel?: string = \"Loading Error\";\n\n  /**\n   * Change the message displayed whilst the options are being loaded externally.\n   */\n  @Prop() loadingLabel?: string = \"Loading...\";\n\n  /**\n   * The name of the control, which is submitted with the form data.\n   */\n  @Prop() name: string = this.inputId;\n\n  /**\n   * The placeholder value to display.\n   */\n  @Prop() placeholder?: string = \"Search\";\n\n  /**\n   * If `true`, the readonly state will be set.\n   */\n  @Prop() readonly?: boolean = false;\n\n  /**\n   * If `true`, the search bar will require a value.\n   */\n  @Prop() required?: boolean = false;\n\n  /**\n   * Specify the mode search bar uses to search. `navigation` allows for quick lookups of a set of values, `query` allows for more general searches.\n   */\n  @Prop() searchMode?: IcSearchBarSearchModes = \"navigation\";\n\n  /**\n   * If `true`, the small styling will be applied to the search bar.\n   */\n  @Prop() small?: boolean = false;\n\n  /**\n   * If `true`, the value of the search will have its spelling and grammar checked.\n   */\n  @Prop() spellcheck: boolean = false;\n\n  /**\n   * If using external filtering, set a timeout for when loading takes too long.\n   */\n  @Prop() timeout?: number;\n\n  /**\n   * The custom name for the value field to correspond with the IcMenuOption type.\n   */\n  @Prop() valueField?: string = \"value\";\n\n  @Watch(\"loading\")\n  loadingHandler(newValue: boolean): void {\n    if (newValue && !this.hasTimedOut) {\n      this.preLoad = false;\n      this.triggerLoading();\n    }\n  }\n\n  @State() filteredOptions: IcMenuOption[] = [];\n\n  @Watch(\"filteredOptions\")\n  filteredOptionsHandler(newOptions: IcMenuOption[]): void {\n    this.hasTimedOut = newOptions.some((opt) => opt.timedOut);\n  }\n\n  /**\n   * The suggested search options.\n   */\n  @Prop() options?: IcMenuOption[] = [];\n\n  @Watch(\"options\")\n  watchOptionsHandler(newOptions: IcMenuOption[]): void {\n    if (this.disableFilter && !this.hasTimedOut) {\n      this.loading = false;\n      clearTimeout(this.timeoutTimer);\n      if (newOptions.length > 0) {\n        this.filteredOptions = newOptions;\n      } else {\n        if (this.hadNoOptions()) {\n          return;\n        }\n        this.setMenuChange(true);\n        !this.preLoad &&\n          (this.filteredOptions = [\n            {\n              [this.labelField]: this.emptyOptionListText,\n              [this.valueField]: \"\",\n            },\n          ]);\n        this.preLoad = true;\n      }\n    }\n    this.debounceAriaLiveUpdate();\n  }\n\n  /**\n   * The value of the search input.\n   */\n  @Prop({ reflect: true, mutable: true }) value: string = \"\";\n\n  @Watch(\"value\")\n  watchValueHandler(newValue: string): void {\n    if (\n      this.inputEl &&\n      this.options &&\n      !!getLabelFromValue(\n        newValue,\n        this.options,\n        this.valueField,\n        this.labelField\n      )\n    ) {\n      this.inputEl.value = getLabelFromValue(\n        newValue,\n        this.options,\n        this.valueField,\n        this.labelField\n      );\n    } else if (this.inputEl && this.inputEl.value !== newValue) {\n      this.inputEl.value = newValue;\n    }\n  }\n\n  // The icChange event is defined here so that it appears as an event for search bar\n  // The actual event is emitted from the child ic-text-field\n  /**\n   * Emitted when the value has changed.\n   */\n  @Event() icChange: EventEmitter<IcValueEventDetail>;\n\n  /**\n   * Emitted when value is cleared with clear button\n   */\n  @Event() icClear: EventEmitter<void>;\n  private handleClear = (ev: Event) => {\n    const keyboardEvent = ev as KeyboardEvent;\n    const mouseEvent = ev as MouseEvent;\n\n    if (\n      mouseEvent.type === \"click\" ||\n      keyboardEvent.code === \"Enter\" ||\n      keyboardEvent.code === \"Space\"\n    ) {\n      this.value = \"\";\n      this.inputEl.value = \"\";\n      this.loading = false;\n      clearTimeout(this.timeoutTimer);\n      this.filteredOptions = this.options;\n      this.el.setFocus();\n\n      this.icClear.emit();\n      ev.preventDefault();\n\n      this.preventSubmit = true;\n    }\n  };\n\n  // The icInput event is defined here so that it appears as an event for search bar\n  // The actual event is emitted from the child ic-text-field\n  /**\n   * Emitted when a keyboard input occurred.\n   */\n  @Event() icInput: EventEmitter<IcValueEventDetail>;\n  private onInput = (ev: Event) => {\n    this.value = (ev.target as HTMLInputElement).value;\n\n    const noOptions = [\n      { [this.labelField]: this.emptyOptionListText, [this.valueField]: \"\" },\n    ];\n\n    if (this.options.length > 0) {\n      this.setMenuChange(true);\n\n      this.preLoad = false;\n\n      if (this.disableFilter === false) {\n        const rawFilteredOptions = getFilteredMenuOptions(\n          this.options,\n          false,\n          this.value,\n          \"anywhere\",\n          this.labelField\n        );\n\n        this.filteredOptions =\n          rawFilteredOptions.length > 0 ? rawFilteredOptions : noOptions;\n      }\n    }\n\n    if (!this.showClearButton) {\n      this.handleShowClearButton(true);\n    }\n\n    this.debounceAriaLiveUpdate();\n  };\n\n  /**\n   * @deprecated This event should not be used anymore. Use icSearchBarBlur instead.\n   */\n  @Event() icInputBlur: EventEmitter<IcSearchBarBlurEventDetail>;\n  private onInputBlur = (ev: Event) => {\n    const value = (ev.target as HTMLInputElement).value;\n    const nextFocus = (ev as FocusEvent).relatedTarget;\n\n    this.icInputBlur.emit({ value: value, relatedTarget: nextFocus });\n  };\n\n  /**\n   * @deprecated This event should not be used anymore. Use icSearchBarFocus instead.\n   */\n  @Event() icInputFocus: EventEmitter<IcValueEventDetail>;\n  private onInputFocus = (ev: Event) => {\n    const value = (ev.target as HTMLInputElement).value;\n    this.icInputFocus.emit({ value: value });\n\n    this.handleShowClearButton(true);\n  };\n\n  /**\n   * Emitted when option is highlighted within the menu\n   */\n  @Event() icOptionSelect: EventEmitter<IcOptionSelectEventDetail>;\n\n  /**\n   * Emitted when the state of the menu changes (i.e. open or close)\n   */\n  @Event() icMenuChange: EventEmitter<IcMenuChangeEventDetail>;\n  /**\n   * @internal - Emitted when blur is invoked from clear button\n   */\n  @Event() icClearBlur: EventEmitter<IcBlurEventDetail>;\n  private handleClearBlur = (ev: Event) => {\n    const nextFocus = (ev as FocusEvent).relatedTarget;\n\n    this.icClearBlur.emit({ relatedTarget: nextFocus });\n\n    this.clearButtonFocused = false;\n  };\n\n  /**\n   * Emitted when the 'retry loading' button is clicked\n   */\n  @Event() icRetryLoad: EventEmitter<IcValueEventDetail>;\n\n  /**\n   * Emitted when the search value has been submitted\n   */\n  @Event() icSubmitSearch: EventEmitter<IcValueEventDetail>;\n\n  /**\n   * @internal - Emitted when blur is invoked from search submit button\n   */\n  @Event() icSubmitSearchBlur: EventEmitter<IcBlurEventDetail>;\n  private handleSubmitSearchBlur = (ev: Event) => {\n    const nextFocus = (ev as FocusEvent).relatedTarget;\n\n    this.icSubmitSearchBlur.emit({ relatedTarget: nextFocus });\n\n    this.searchSubmitFocused = false;\n  };\n\n  /**\n   * Emitted when blur is invoked from ic-search-bar\n   */\n  @Event() icSearchBarBlur: EventEmitter<IcSearchBarBlurEventDetail>;\n\n  /**\n   * Emitted when focus is invoked from ic-search-bar\n   */\n  @Event() icSearchBarFocus: EventEmitter<void>;\n\n  disconnectedCallback(): void {\n    if (this.assistiveHintEl) {\n      this.assistiveHintEl.remove();\n    }\n  }\n\n  componentWillLoad(): void {\n    this.watchValueHandler(this.value);\n\n    removeDisabledFalse(this.disabled, this.el);\n  }\n\n  componentDidLoad(): void {\n    if (this.focusOnLoad) {\n      this.el.setFocus();\n    }\n\n    if (this.hasOptionsOrFilterDisabled()) {\n      this.renderAssistiveHintEl();\n      if (this.disableFilter) {\n        this.filteredOptions = this.options;\n      }\n    }\n\n    onComponentRequiredPropUndefined(\n      [{ prop: this.label, propName: \"label\" }],\n      \"Search Bar\"\n    );\n\n    if (this.inputEl !== undefined) {\n      this.anchorEl = this.inputEl.shadowRoot.querySelector(\n        \"ic-input-component-container\"\n      );\n    }\n  }\n\n  componentWillRender(): void {\n    this.highlightFirstOptionAfterNoResults();\n  }\n\n  @Listen(\"icKeydown\", {})\n  handleKeyDown(ev: CustomEvent): void {\n    const keyEv: KeyboardEvent = ev.detail.event;\n    if (this.menu && this.open) {\n      this.menu.handleKeyboardOpen(keyEv);\n    }\n  }\n\n  @Listen(\"keyup\", {})\n  handleKeyUp(ev: KeyboardEvent): void {\n    if (ev.key === \"Enter\") {\n      if (this.preventSubmit || this.isSubmitDisabled()) {\n        return;\n      }\n\n      this.handleSubmitSearch();\n      this.setMenuChange(false);\n    }\n\n    if (ev.key === \"Escape\") {\n      this.setMenuChange(false);\n    }\n\n    if (this.preventSubmit) {\n      this.preventSubmit = false;\n    }\n  }\n\n  /**\n   * Sets focus on the native `input`.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    this.retryViaKeyPress = false;\n    this.retryButtonClick = false;\n    if (this.inputEl) {\n      this.inputEl.setFocus();\n    }\n  }\n\n  private handleMouseDown = (ev: Event) => {\n    ev.preventDefault();\n  };\n\n  private handleSubmitSearchFocus = () => {\n    this.searchSubmitFocused = true;\n  };\n\n  private handleSubmitSearch = () => {\n    this.highlightedValue && (this.value = this.highlightedValue);\n    this.highlightedValue = undefined;\n    this.icSubmitSearch.emit({ value: this.value });\n\n    const form: HTMLFormElement = this.el.closest(\"FORM\");\n\n    if (this.searchSubmitButton && !!form && !this.preventSubmit) {\n      handleHiddenFormButtonClick(form, this.searchSubmitButton);\n    }\n  };\n\n  private debounceAriaLiveUpdate() {\n    clearTimeout(this.debounceAriaLive);\n\n    this.debounceAriaLive = window.setTimeout(() => {\n      this.updateSearchResultAriaLive();\n    }, 500);\n  }\n\n  private handleSubmitSearchKeyDown = (ev: KeyboardEvent) => {\n    if (ev.key === \" \") {\n      ev.preventDefault();\n      this.handleSubmitSearch();\n    }\n  };\n\n  private handleRetry = (ev: CustomEvent<IcValueEventDetail>) => {\n    this.retryViaKeyPress = ev.detail.keyPressed === \"Enter\";\n    this.icRetryLoad.emit({ value: ev.detail.value });\n    this.triggerLoading();\n    this.retryButtonClick = true;\n  };\n\n  private triggerLoading = () => {\n    const loadingOption: IcMenuOption[] = [\n      {\n        [this.labelField]: this.loadingLabel,\n        [this.valueField]: \"\",\n        loading: true,\n      },\n    ];\n    if (this.filteredOptions !== loadingOption)\n      this.filteredOptions = loadingOption;\n    if (this.timeout) {\n      this.timeoutTimer = window.setTimeout(() => {\n        this.filteredOptions = [\n          {\n            [this.labelField]: this.loadingErrorLabel,\n            [this.valueField]: \"\",\n            timedOut: true,\n          },\n        ];\n      }, this.timeout);\n    }\n  };\n\n  private handleOptionSelect = (ev: CustomEvent) => {\n    if (ev.detail.label === this.emptyOptionListText) {\n      this.el.setFocus();\n      return;\n    }\n\n    this.value = ev.detail.value;\n    this.icOptionSelect.emit({ value: this.value });\n  };\n\n  private handleMenuOptionHighlight = (ev: CustomEvent) => {\n    const optionValue = ev.detail.optionId?.replace(`${this.menuId}-`, \"\");\n    optionValue && (this.highlightedValue = optionValue);\n    if (ev.detail.optionId) {\n      this.ariaActiveDescendant = ev.detail.optionId;\n    } else {\n      this.ariaActiveDescendant = undefined;\n    }\n  };\n\n  private handleMenuChange = (ev: CustomEvent) => {\n    this.setMenuChange(ev.detail.open);\n    if (!ev.detail.open) {\n      this.handleMenuCloseFromMenuChange(true);\n      if (ev.detail.focusInput === undefined || ev.detail.focusInput) {\n        this.el.setFocus();\n      }\n    }\n  };\n\n  private setMenuChange = (open: boolean) => {\n    if (this.open !== open) {\n      this.open = open;\n      this.icMenuChange.emit({ open });\n    }\n  };\n\n  private handleHostFocus = () => {\n    if (this.options && this.value && !this.menuCloseFromMenuChangeEvent) {\n      this.setMenuChange(true);\n    }\n    this.handleTruncateValue(false);\n\n    this.icSearchBarFocus.emit();\n  };\n\n  private handleHostBlur = (ev: Event) => {\n    const nextFocus = (ev as FocusEvent).relatedTarget;\n    if (\n      this.open &&\n      this.options &&\n      nextFocus !== this.menu &&\n      !this.retryViaKeyPress &&\n      !this.retryButtonClick\n    ) {\n      this.setMenuChange(false);\n    }\n\n    if (this.retryButtonClick || this.retryViaKeyPress) {\n      this.inputEl.setFocus();\n    }\n\n    this.handleShowClearButton(false);\n    this.handleMenuCloseFromMenuChange(false);\n    this.handleTruncateValue(true);\n    this.icSearchBarBlur.emit({ relatedTarget: nextFocus, value: this.value });\n    this.retryViaKeyPress = false;\n    this.retryButtonClick = false;\n  };\n\n  private handleShowClearButton = (visible: boolean): void => {\n    this.showClearButton = visible;\n  };\n\n  private handleFocusClearButton = (): void => {\n    this.clearButtonFocused = true;\n  };\n\n  private handleMenuCloseFromMenuChange = (fromEvent: boolean): void => {\n    this.menuCloseFromMenuChangeEvent = fromEvent;\n  };\n\n  private handleTruncateValue = (truncate: boolean): void => {\n    this.truncateValue = truncate;\n  };\n\n  private renderAssistiveHintEl = (): void => {\n    const input = this.el.shadowRoot\n      .querySelector(\"ic-text-field\")\n      ?.shadowRoot?.querySelector(`#${this.inputId}`);\n\n    if (\n      input &&\n      Object.keys(input).length > 0 &&\n      this.hasOptionsOrFilterDisabled()\n    ) {\n      this.assistiveHintEl = document.createElement(\"span\");\n      this.assistiveHintEl.innerText = this.hintText;\n      this.assistiveHintEl.id = `${this.inputId}-assistive-hint`;\n      this.assistiveHintEl.style.display = \"none\";\n      if (input.after !== undefined) {\n        input.after(this.assistiveHintEl);\n      }\n    }\n  };\n\n  private updateSearchResultAriaLive = (): void => {\n    const searchResultsStatusEl = this.el.shadowRoot.querySelector(\n      \".search-results-status\"\n    ) as HTMLParagraphElement;\n\n    if (\n      !this.open ||\n      this.value === \"\" ||\n      this.value.length < this.charactersUntilSuggestion\n    ) {\n      searchResultsStatusEl.innerText = \"\";\n    } else if (\n      this.hasOptionsOrFilterDisabled() &&\n      this.filteredOptions.length > 0 &&\n      this.open &&\n      searchResultsStatusEl &&\n      !this.filteredOptions[0].loading\n    ) {\n      if (this.hadNoOptions()) {\n        searchResultsStatusEl.innerText = this.emptyOptionListText;\n      } else {\n        searchResultsStatusEl.innerText = `${\n          this.filteredOptions.length\n        } result${this.filteredOptions.length > 1 ? \"s\" : \"\"} available`;\n      }\n    }\n  };\n\n  private hasOptionsOrFilterDisabled = (): boolean =>\n    this.options.length > 0 || this.disableFilter;\n\n  private hadNoOptions = (): boolean =>\n    this.filteredOptions.length === 1 &&\n    this.filteredOptions[0][this.labelField] === this.emptyOptionListText &&\n    this.searchMode === \"navigation\";\n\n  private isSubmitDisabled = (): boolean => {\n    const valueNotSet =\n      this.value === undefined || this.value === null || this.value === \"\";\n    const valueLengthLess = this.value.length < this.charactersUntilSuggestion;\n    return (\n      valueNotSet ||\n      valueLengthLess ||\n      this.disabled ||\n      this.hadNoOptions() ||\n      this.hasTimedOut ||\n      this.loading\n    );\n  };\n\n  private highlightFirstOptionAfterNoResults = () => {\n    if (this.prevNoOption && this.menu && !this.hasTimedOut) {\n      this.menu.handleSetFirstOption();\n      this.prevNoOption = false;\n    }\n    const prevNoOptionsList = this.filteredOptions.find(\n      (filteredOption) =>\n        filteredOption[this.labelField] === this.emptyOptionListText ||\n        filteredOption[this.labelField] === this.loadingErrorLabel ||\n        filteredOption[this.labelField] === this.loadingLabel\n    );\n    if (prevNoOptionsList) {\n      this.prevNoOption = true;\n    }\n  };\n\n  render() {\n    const {\n      inputId,\n      name,\n      label,\n      required,\n      small,\n      placeholder,\n      helperText,\n      disabled,\n      value,\n      readonly,\n      spellcheck,\n      fullWidth,\n      options,\n      open,\n      hideLabel,\n      menuId,\n      ariaActiveDescendant,\n      truncateValue,\n      autofocus,\n      autocapitalize,\n      autocomplete,\n      filteredOptions,\n    } = this;\n\n    const disabledMode = readonly || disabled ? true : false;\n\n    const describedBy = getInputDescribedByText(\n      inputId,\n      helperText !== \"\",\n      false\n    ).trim();\n\n    let describedById;\n\n    if (describedBy !== \"\" && this.hasOptionsOrFilterDisabled()) {\n      describedById = `${describedBy} ${this.inputId}-assistive-hint`;\n    } else if (this.hasOptionsOrFilterDisabled()) {\n      describedById = `${this.inputId}-assistive-hint`;\n    } else if (describedBy !== \"\") {\n      describedById = describedBy;\n    } else {\n      describedById = undefined;\n    }\n\n    const disabledText = disabledMode && !readonly;\n    const hasSuggestedSearch = value && this.hasOptionsOrFilterDisabled();\n    const menuOpen = hasSuggestedSearch && open && filteredOptions.length > 0;\n    const menuRendered =\n      menuOpen && value.length >= this.charactersUntilSuggestion;\n    const isOrHasLoaded =\n      this.filteredOptions.length === 1 &&\n      (this.filteredOptions[0][this.labelField] === this.loadingLabel ||\n        filteredOptions[0][this.labelField] === this.loadingErrorLabel);\n\n    let expanded;\n\n    if (options.length > 0) {\n      if (menuOpen) {\n        expanded = \"true\";\n      } else {\n        expanded = \"false\";\n      }\n    } else {\n      expanded = undefined;\n    }\n\n    renderHiddenInput(true, this.el, name, value, disabledMode);\n\n    return (\n      <Host\n        class={{\n          [\"search\"]: true,\n          [\"fullwidth\"]: fullWidth,\n          [\"disabled\"]: disabled,\n          [\"small\"]: small,\n        }}\n        onFocus={this.handleHostFocus}\n        onBlur={this.handleHostBlur}\n      >\n        <ic-text-field\n          ref={(el) => (this.inputEl = el)}\n          inputId={inputId}\n          label={label}\n          helperText={helperText}\n          required={required}\n          disabled={disabledText}\n          readonly={readonly}\n          small={small}\n          hideLabel={hideLabel}\n          fullWidth={fullWidth}\n          name={name}\n          truncateValue={truncateValue}\n          value={\n            options &&\n            !!getLabelFromValue(\n              value,\n              options,\n              this.valueField,\n              this.labelField\n            )\n              ? getLabelFromValue(\n                  value,\n                  options,\n                  this.valueField,\n                  this.labelField\n                )\n              : value\n          }\n          placeholder={placeholder}\n          onInput={this.onInput}\n          onBlur={this.onInputBlur}\n          onFocus={this.onInputFocus}\n          aria-label={hideLabel ? label : \"\"}\n          aria-describedby={describedById}\n          aria-owns={menuRendered ? menuId : undefined}\n          aria-haspopup={options.length > 0 ? \"listbox\" : undefined}\n          ariaExpanded={expanded}\n          ariaActiveDescendant={ariaActiveDescendant}\n          aria-autocomplete={hasSuggestedSearch ? \"list\" : undefined}\n          role={hasSuggestedSearch ? \"combobox\" : undefined}\n          autocomplete={autocomplete}\n          autocapitalize={autocapitalize}\n          autoFocus={autofocus}\n          spellcheck={spellcheck}\n          inputmode=\"search\"\n          debounce={this.debounce}\n        >\n          <div\n            class={{\n              \"clear-button-container\": true,\n              \"clear-button-visible\":\n                value && !disabledMode && this.showClearButton,\n            }}\n            slot=\"clear-button\"\n          >\n            <ic-button\n              id=\"clear-button\"\n              class=\"clear-button\"\n              aria-label=\"Clear\"\n              innerHTML={clearIcon}\n              onClick={this.handleClear}\n              onMouseDown={this.handleMouseDown}\n              size={small ? \"small\" : \"default\"}\n              onFocus={this.handleFocusClearButton}\n              onBlur={this.handleClearBlur}\n              onKeyDown={this.handleClear}\n              type=\"submit\"\n              variant=\"icon\"\n              appearance={\n                this.clearButtonFocused\n                  ? IcThemeForegroundEnum.Light\n                  : IcThemeForegroundEnum.Dark\n              }\n            ></ic-button>\n            <div class=\"divider\"></div>\n          </div>\n          <div\n            class={{\n              \"search-submit-button-container\": true,\n              \"search-submit-button-disabled\": this.isSubmitDisabled(),\n            }}\n            slot=\"search-submit-button\"\n          >\n            <ic-button\n              id=\"search-submit-button\"\n              aria-label=\"Search\"\n              ref={(el) => (this.searchSubmitButton = el)}\n              class={{\n                [\"search-submit-button\"]: true,\n                [\"search-submit-button-small\"]: !!small,\n              }}\n              disabled={this.isSubmitDisabled()}\n              innerHTML={searchIcon}\n              size={small ? \"small\" : \"default\"}\n              onClick={this.handleSubmitSearch}\n              onMouseDown={this.handleMouseDown}\n              onBlur={this.handleSubmitSearchBlur}\n              onFocus={this.handleSubmitSearchFocus}\n              onKeyDown={this.handleSubmitSearchKeyDown}\n              type=\"submit\"\n              variant=\"icon\"\n              appearance={\n                this.searchSubmitFocused\n                  ? IcThemeForegroundEnum.Light\n                  : IcThemeForegroundEnum.Default\n              }\n            ></ic-button>\n          </div>\n          <div\n            class={{\n              \"menu-container\": true,\n              fullwidth: fullWidth,\n            }}\n            slot=\"menu\"\n          >\n            {menuRendered && (\n              <ic-menu\n                class={{\n                  \"no-results\": this.hadNoOptions() || isOrHasLoaded,\n                }}\n                activationType=\"manual\"\n                anchorEl={this.anchorEl}\n                autoFocusOnSelected={false}\n                searchMode={this.searchMode}\n                inputEl={this.inputEl}\n                inputLabel={label}\n                ref={(el) => (this.menu = el)}\n                small={small}\n                fullWidth={fullWidth}\n                menuId={menuId}\n                open={true}\n                options={filteredOptions}\n                onMenuOptionSelect={this.handleOptionSelect}\n                onMenuStateChange={this.handleMenuChange}\n                onMenuOptionId={this.handleMenuOptionHighlight}\n                onRetryButtonClicked={this.handleRetry}\n                parentEl={this.el}\n                value={value}\n                labelField={this.labelField}\n                valueField={this.valueField}\n              ></ic-menu>\n            )}\n          </div>\n        </ic-text-field>\n        <div\n          aria-live=\"polite\"\n          role=\"status\"\n          class=\"search-results-status\"\n        ></div>\n      </Host>\n    );\n  }\n}\n","@import \"../../global/normalize.css\";\n\n/**\n * @prop --ic-z-index-menu: z-index of search bar menu\n */\n\n:host(.search) {\n  --divider-height: 1.5rem;\n}\n\n:host(.search.small) {\n  --divider-height: 1rem;\n}\n\n:host(.fullwidth) {\n  width: 100%;\n}\n\n:host(.search) .disabled:hover {\n  border-color: var(--ic-architectural-200);\n}\n\n:host(.search.disabled) .disabled svg {\n  color: var(--ic-architectural-200);\n}\n\n:host(.search) .disabled svg {\n  color: var(--ic-architectural-400);\n}\n\n/* CLEAR */\n\n.clear-button-container {\n  align-items: center;\n  margin-right: var(--ic-space-1px);\n  display: none;\n  visibility: hidden;\n}\n\n.clear-button {\n  border-radius: var(--ic-border-radius);\n  transition: box-shadow var(--ic-easing-transition),\n    border-radius var(--ic-easing-transition);\n}\n\n.clear-button:focus,\n.clear-button:active {\n  background-color: var(--ic-focus-blue);\n  box-shadow: inset 0 0 0 0.125rem var(--ic-focus-glow);\n  border-radius: 0.25rem;\n}\n\n.clear-button:focus,\n.clear-button:active * {\n  fill: white;\n}\n\n.clear-button-visible {\n  visibility: visible;\n  display: flex;\n}\n\n.search-submit-button-container {\n  display: flex;\n  align-items: center;\n}\n\n.search-submit-button-disabled .ic-tooltip-container {\n  display: none !important;\n}\n\n.search-submit-button:focus,\n.search-submit-button:active {\n  background-color: var(--ic-focus-blue) !important;\n  box-shadow: inset 0 0 0 0.125rem var(--ic-focus-glow) !important;\n  border-radius: var(--ic-space-xxs);\n}\n\n.search-submit-button:focus,\n.search-submit-button:active * {\n  fill: white;\n}\n\n.divider {\n  width: var(--ic-space-1px);\n  background-color: var(--ic-action-dark-active);\n  height: var(--divider-height);\n}\n\n:host(.dark) .divider {\n  background-color: var(--ic-architectural-200);\n}\n\n.menu-container {\n  width: var(--input-width, 20rem);\n  position: relative;\n  top: var(--ic-space-xxxs);\n}\n\n.menu-container.fullwidth {\n  width: 100%;\n}\n\n.no-results {\n  cursor: not-allowed;\n}\n\n.search-results-status {\n  border: 0;\n  clip: rect(0, 0, 0, 0, 0);\n  height: var(--ic-space-1px);\n  margin-bottom: calc(-1 * var(--ic-space-1px));\n  margin-right: calc(-1 * var(--ic-space-1px));\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: var(--ic-space-1px);\n}\n"],"names":["inputIds","SearchBar","assistiveHintEl","hasTimedOut","inputId","concat","menuCloseFromMenuChangeEvent","menuId","this","preLoad","preventSubmit","prevNoOption","retryButtonClick","truncateValue","handleClear","ev","keyboardEvent","type","code","_this","value","inputEl","loading","clearTimeout","timeoutTimer","filteredOptions","options","el","setFocus","icClear","emit","preventDefault","onInput","_ref","target","noOptions","_defineProperty","labelField","emptyOptionListText","valueField","length","setMenuChange","disableFilter","rawFilteredOptions","getFilteredMenuOptions","showClearButton","handleShowClearButton","debounceAriaLiveUpdate","onInputBlur","nextFocus","relatedTarget","icInputBlur","onInputFocus","icInputFocus","handleClearBlur","icClearBlur","clearButtonFocused","handleSubmitSearchBlur","icSubmitSearchBlur","searchSubmitFocused","handleMouseDown","handleSubmitSearchFocus","handleSubmitSearch","highlightedValue","undefined","icSubmitSearch","form","closest","searchSubmitButton","handleHiddenFormButtonClick","handleSubmitSearchKeyDown","key","handleRetry","retryViaKeyPress","detail","keyPressed","icRetryLoad","triggerLoading","_ref2","loadingOption","loadingLabel","timeout","window","setTimeout","_ref3","loadingErrorLabel","handleOptionSelect","label","icOptionSelect","handleMenuOptionHighlight","optionValue","_a","optionId","replace","ariaActiveDescendant","handleMenuChange","open","handleMenuCloseFromMenuChange","focusInput","icMenuChange","handleHostFocus","handleTruncateValue","icSearchBarFocus","handleHostBlur","menu","icSearchBarBlur","visible","handleFocusClearButton","fromEvent","truncate","renderAssistiveHintEl","input","_b","shadowRoot","querySelector","Object","keys","hasOptionsOrFilterDisabled","document","createElement","innerText","hintText","id","style","display","after","updateSearchResultAriaLive","searchResultsStatusEl","charactersUntilSuggestion","hadNoOptions","searchMode","isSubmitDisabled","valueNotSet","valueLengthLess","disabled","highlightFirstOptionAfterNoResults","handleSetFirstOption","find","filteredOption","newValue","newOptions","some","opt","timedOut","_ref4","getLabelFromValue","remove","watchValueHandler","removeDisabledFalse","focusOnLoad","onComponentRequiredPropUndefined","prop","propName","anchorEl","keyEv","event","handleKeyboardOpen","_callee","_regeneratorRuntime","wrap","_context","prev","next","stop","_setFocus","apply","arguments","_this2","debounceAriaLive","_class","_class2","describedById","_this3","name","required","small","placeholder","helperText","readonly","spellcheck","fullWidth","hideLabel","autofocus","autocapitalize","autocomplete","disabledMode","describedBy","getInputDescribedByText","trim","expanded","disabledText","hasSuggestedSearch","menuOpen","menuRendered","isOrHasLoaded","renderHiddenInput","h","Host","class","onFocus","onBlur","ref","ariaExpanded","role","autoFocus","inputmode","debounce","slot","innerHTML","onClick","onMouseDown","size","onKeyDown","variant","appearance","IcThemeForegroundEnum","Light","Dark","Default","fullwidth","activationType","autoFocusOnSelected","inputLabel","onMenuOptionSelect","onMenuStateChange","onMenuOptionId","onRetryButtonClicked","parentEl","get"],"sourceRoot":""}