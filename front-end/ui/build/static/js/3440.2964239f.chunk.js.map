{"version":3,"file":"static/js/3440.2964239f.chunk.js","mappings":"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","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-tab-context/ic-tab-context.tsx","../node_modules/@ukic/web-components/dist/esm/src/utils/types.ts"],"sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Listen,\n  Prop,\n  State,\n  h,\n  Watch,\n  Method,\n} from \"@stencil/core\";\nimport {\n  IcActivationTypes,\n  IcThemeForegroundNoDefault,\n  IcThemeForegroundEnum,\n} from \"../../utils/types\";\n\nimport {\n  IcTabClickEventDetail,\n  IcTabSelectEventDetail,\n} from \"../ic-tab/ic-tab.types\";\n\n@Component({\n  tag: \"ic-tab-context\",\n})\nexport class TabContext {\n  private controlledMode: boolean;\n  private enabledTabs: HTMLIcTabElement[];\n  private focusedTabIndex: number;\n  private newTabPanels: HTMLIcTabPanelElement[] = [];\n  private newTabs: HTMLIcTabElement[] = [];\n  private tabs: HTMLIcTabElement[];\n  private tabGroup: HTMLIcTabGroupElement;\n  private tabPanels: HTMLIcTabPanelElement[];\n\n  @Element() host: HTMLIcTabContextElement;\n\n  @State() selectedTab: number | null;\n\n  /**\n   * Determines whether tabs have to be manually activated (by pressing 'Enter' or 'Space') when they receive focus using keyboard navigation.\n   */\n  @Prop() activationType?: IcActivationTypes = \"automatic\";\n\n  /**\n   * The appearance of the tab context, e.g dark, or light.\n   */\n  @Prop() appearance?: IcThemeForegroundNoDefault = \"dark\";\n\n  /**\n   * The unique context needed if using multiple tabs inside one another i.e. rendering another set of tabs inside a tab panel.\n   */\n  @Prop({ reflect: true }) contextId?: string = \"default\";\n\n  /**\n   * The selected tab to be controlled by the user. Must be used alongside the icTabSelect event to manage tab selection.\n   */\n  @Prop() selectedTabIndex?: number;\n\n  @Watch(\"selectedTabIndex\")\n  updateSelectedTab(newValue: number): void {\n    this.selectedTab = newValue;\n  }\n\n  /**\n   * Emitted when a user selects a tab.\n   */\n  @Event({ bubbles: false }) icTabSelect: EventEmitter<IcTabSelectEventDetail>;\n\n  /**\n   * @deprecated This event should not be used anymore. Use icTabSelect instead.\n   */\n  @Event({ bubbles: false }) tabSelect: EventEmitter<IcTabSelectEventDetail>;\n\n  componentDidLoad(): void {\n    this.setControlledMode();\n    this.getChildren();\n    this.linkTabs();\n    this.attatchEventListeners();\n    this.setInitialTab();\n    this.configureTabs();\n  }\n\n  componentWillUpdate(): void {\n    this.configureTabs();\n  }\n\n  disconnectedCallback(): void {\n    this.tabGroup.removeEventListener(\"keydown\", this.keydownHandler);\n  }\n\n  @Listen(\"tabClick\")\n  tabClickHandler(event: CustomEvent<IcTabClickEventDetail>): void {\n    if (\n      this.selectedTabIndex === undefined &&\n      event.detail.contextId === this.contextId\n    ) {\n      this.selectedTab = event.detail.position;\n    }\n    this.icTabSelect.emit({\n      tabIndex: event.detail.position,\n    });\n    this.tabSelect.emit({\n      tabIndex: event.detail.position,\n    });\n    event.stopImmediatePropagation();\n  }\n\n  @Listen(\"tabCreated\")\n  @Listen(\"tabPanelCreated\")\n  tabCreatedHandler(ev: CustomEvent): void {\n    if (this.tabs && this.tabPanels) {\n      (ev.detail.setFocus ? this.newTabs : this.newTabPanels).push(ev.detail);\n      if (this.newTabs.length === this.newTabPanels.length) {\n        this.tabs.push(...this.newTabs);\n        this.tabPanels.push(...this.newTabPanels);\n        this.enabledTabs = this.getEnabledTabs();\n        this.linkTabs();\n        this.newTabs = [];\n        this.newTabPanels = [];\n      }\n    }\n  }\n\n  @Listen(\"tabEnabled\")\n  tabEnabledHandler(): void {\n    this.enabledTabs = this.getEnabledTabs();\n  }\n\n  /**\n   * @internal Used to set tab/tab panel IDs when a tab/tab panel has been removed\n   */\n  @Method()\n  async tabRemovedHandler(hadFocus?: boolean): Promise<void> {\n    this.getChildren();\n    this.enabledTabs = this.getEnabledTabs();\n    this.linkTabs();\n    if (this.tabs[this.selectedTab] && this.tabPanels[this.selectedTab]) {\n      this.tabs[this.selectedTab].selected = true;\n      this.tabPanels[this.selectedTab].selectedTab =\n        this.tabs[this.selectedTab].tabId;\n    } else {\n      this.setInitialTab();\n    }\n\n    if (hadFocus) {\n      this.tabs[this.selectedTab].setFocus();\n    }\n  }\n\n  // Sets attributes to link tab-group, tabs and tab-panels\n  private linkTabs = () => {\n    this.tabs.forEach((tab, index) => {\n      const tabId = `ic-tab-${index}-context-${this.contextId}`;\n      const tabPanelId = `ic-tab-panel-${index}-context-${this.contextId}`;\n      const shared = `ic-tab--${index}-context-${this.contextId}`;\n      const contextIdAttr = \"context-id\";\n      tab.setAttribute(\"id\", tabId);\n      tab.tabId = shared;\n      tab.tabPosition = index;\n      tab.setAttribute(\"aria-controls\", tabPanelId);\n      tab.setAttribute(contextIdAttr, this.contextId);\n      this.tabGroup.setAttribute(contextIdAttr, this.contextId);\n      this.tabPanels[index].setAttribute(\"id\", tabPanelId);\n      this.tabPanels[index].panelId = shared;\n      this.tabPanels[index].tabPosition = index;\n      this.tabPanels[index].setAttribute(\"aria-labelledby\", tabId);\n      this.tabPanels[index].setAttribute(contextIdAttr, this.contextId);\n\n      if (this.appearance === IcThemeForegroundEnum.Light) {\n        tab.appearance = this.appearance;\n        this.tabPanels[index].appearance = this.appearance;\n      }\n    });\n\n    if (this.appearance === IcThemeForegroundEnum.Light) {\n      this.tabGroup.appearance = this.appearance;\n    }\n  };\n\n  // Gets tabs and tabpanels with the same context ID\n  // Using querySelector to selector the children in relation to the host\n  private getChildren = (): void => {\n    this.tabGroup = this.host.querySelector(\"ic-tab-group\");\n    this.tabs = Array.from(this.tabGroup.querySelectorAll(\"ic-tab\"));\n    this.tabPanels = Array.from(this.host.children).filter(\n      (child) => child.tagName === \"IC-TAB-PANEL\"\n    ) as HTMLIcTabPanelElement[];\n    this.enabledTabs = this.getEnabledTabs();\n  };\n\n  private keydownHandler = (event: KeyboardEvent) => {\n    if (this.activationType === \"automatic\") {\n      this.handleKeyBoardNavAutomatic(event);\n    } else {\n      this.handleKeyBoardNavManual(event);\n    }\n  };\n\n  // Determines how keyboard navigation is to be handled based on the activation type\n  private attatchEventListeners = (): void => {\n    this.tabGroup.addEventListener(\"keydown\", this.keydownHandler);\n  };\n\n  // Determines whether the selected tab is being controlled within the component\n  // or by the user (via selectedTabIndex and onIcTabSelect)\n  private setControlledMode = (): void => {\n    if (this.selectedTabIndex !== undefined) {\n      this.controlledMode = true;\n      this.selectedTab = this.selectedTabIndex;\n    }\n  };\n\n  // Sets the tab that is selected on initial render\n  private setInitialTab = (): void => {\n    if (this.controlledMode) {\n      this.selectedTab = this.selectedTabIndex;\n      this.focusedTabIndex = this.selectedTabIndex;\n    } else {\n      const firstEnabledTabIndex = this.tabs.findIndex(\n        (tab) => tab.tabId === this.enabledTabs[0].tabId\n      );\n      this.selectedTab = firstEnabledTabIndex;\n      this.focusedTabIndex = firstEnabledTabIndex;\n    }\n  };\n\n  // Passes the selected tab to the tab and tab panel components\n  private configureTabs = () => {\n    this.enabledTabs.forEach((tab) => {\n      tab.selected = tab.tabPosition === this.selectedTab;\n    });\n    this.tabPanels.forEach((tabPanel) => {\n      tabPanel.selectedTab = this.tabs[this.selectedTab].tabId;\n    });\n  };\n\n  private getEnabledTabs = () => {\n    return Array.from(this.tabs).filter((child) => !child.disabled);\n  };\n\n  private getIndexOfEnabledTab = (allTabsIndex: number) => {\n    return this.enabledTabs.findIndex(\n      (tab) => tab.tabId === this.tabs[allTabsIndex].tabId\n    );\n  };\n\n  // Sets focus on tab and selects it\n  private keyboardSelectTab = (enabledTabIndex: number) => {\n    const newIndex = this.tabs.findIndex(\n      (tab) => tab.tabId === this.enabledTabs[enabledTabIndex].tabId\n    );\n    this.enabledTabs[enabledTabIndex].focus();\n    if (!this.controlledMode) {\n      this.selectedTab = newIndex;\n    } else {\n      this.icTabSelect.emit({ tabIndex: newIndex });\n      this.tabSelect.emit({ tabIndex: newIndex });\n    }\n  };\n\n  // Sets focus on tab without selecting it (for manual activation)\n  private keyboardFocusTab = (enabledTabIndex: number) => {\n    const newIndex = this.tabs.findIndex(\n      (tab) => tab.tabId === this.enabledTabs[enabledTabIndex].tabId\n    );\n    this.enabledTabs[enabledTabIndex].focus();\n    this.focusedTabIndex = newIndex;\n  };\n\n  private handleKeyBoardNavAutomatic = (event: KeyboardEvent) => {\n    const key = event.key;\n    const enabledTabIndex = this.getIndexOfEnabledTab(this.selectedTab);\n    let preventDefault = true;\n    switch (key) {\n      case \"Home\":\n        this.keyboardSelectTab(0);\n        break;\n      case \"End\":\n        this.keyboardSelectTab(this.enabledTabs.length - 1);\n        break;\n      case \"ArrowRight\":\n        if (enabledTabIndex < this.enabledTabs.length - 1) {\n          this.keyboardSelectTab(enabledTabIndex + 1);\n        } else {\n          this.keyboardSelectTab(0);\n        }\n        break;\n      case \"ArrowLeft\":\n        if (enabledTabIndex > 0) {\n          this.keyboardSelectTab(enabledTabIndex - 1);\n        } else {\n          this.keyboardSelectTab(this.enabledTabs.length - 1);\n        }\n        break;\n      default:\n        preventDefault = false;\n    }\n    if (preventDefault) event.preventDefault();\n  };\n\n  private handleKeyBoardNavManual = (event: KeyboardEvent) => {\n    const key = event.key;\n    const enabledTabIndex = this.getIndexOfEnabledTab(this.focusedTabIndex);\n    let preventDefault = true;\n    switch (key) {\n      case \"Home\":\n        this.keyboardFocusTab(0);\n        break;\n      case \"End\":\n        this.keyboardFocusTab(this.enabledTabs.length - 1);\n        break;\n      case \"ArrowRight\":\n        if (enabledTabIndex < this.enabledTabs.length - 1) {\n          this.keyboardFocusTab(enabledTabIndex + 1);\n        } else {\n          this.keyboardFocusTab(0);\n        }\n        break;\n      case \"ArrowLeft\":\n        if (enabledTabIndex > 0) {\n          this.keyboardFocusTab(enabledTabIndex - 1);\n        } else {\n          this.keyboardFocusTab(this.enabledTabs.length - 1);\n        }\n        break;\n      case \"Enter\":\n        this.keyboardSelectTab(this.focusedTabIndex);\n        break;\n      case \" \":\n        this.keyboardSelectTab(this.focusedTabIndex);\n        break;\n      default:\n        preventDefault = false;\n    }\n    if (preventDefault) event.preventDefault();\n  };\n\n  render() {\n    return <slot></slot>;\n  }\n}\n","export type IcFocusableComponents =\n  | HTMLIcBreadcrumbElement\n  | HTMLIcButtonElement\n  | HTMLIcCardElement\n  | HTMLIcCheckboxElement\n  | HTMLIcChipElement\n  | HTMLIcLinkElement\n  | HTMLIcNavigationButtonElement\n  | HTMLIcNavigationGroupElement\n  | HTMLIcNavigationItemElement\n  | HTMLIcRadioOptionElement\n  | HTMLIcSearchBarElement\n  | HTMLIcSelectElement\n  | HTMLIcSwitchElement\n  | HTMLIcTabElement\n  | HTMLIcTextFieldElement;\n\nexport type IcStatusVariants =\n  | \"neutral\"\n  | \"info\"\n  | \"warning\"\n  | \"error\"\n  | \"success\";\n\nexport enum IcInformationStatus {\n  Warning = \"warning\",\n  Error = \"error\",\n  Success = \"success\",\n}\n\nexport type IcSizes = \"default\" | \"large\" | \"small\";\n\nexport type IcInformationStatusOrEmpty = \"warning\" | \"error\" | \"success\" | \"\";\n\nexport type IcNavType = \"side\" | \"top\" | \"page-header\";\n\n// From: https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\nexport type IcAutocompleteTypes =\n  | \"on\"\n  | \"off\"\n  | \"name\"\n  | \"honorific-prefix\"\n  | \"given-name\"\n  | \"additional-name\"\n  | \"family-name\"\n  | \"honorific-suffix\"\n  | \"nickname\"\n  | \"email\"\n  | \"username\"\n  | \"new-password\"\n  | \"current-password\"\n  | \"one-time-code\"\n  | \"organization-title\"\n  | \"organization\"\n  | \"street-address\"\n  | \"address-line1\"\n  | \"address-line2\"\n  | \"address-line3\"\n  | \"address-level4\"\n  | \"address-level3\"\n  | \"address-level2\"\n  | \"address-level1\"\n  | \"country\"\n  | \"country-name\"\n  | \"postal-code\"\n  | \"cc-name\"\n  | \"cc-given-name\"\n  | \"cc-additional-name\"\n  | \"cc-family-name\"\n  | \"cc-family-name\"\n  | \"cc-number\"\n  | \"cc-exp\"\n  | \"cc-exp-month\"\n  | \"cc-exp-year\"\n  | \"cc-csc\"\n  | \"cc-type\"\n  | \"transaction-currency\"\n  | \"transaction-amount\"\n  | \"language\"\n  | \"bday\"\n  | \"bday-day\"\n  | \"bday-month\"\n  | \"bday-year\"\n  | \"sex\"\n  | \"tel\"\n  | \"tel-country-code\"\n  | \"tel-national\"\n  | \"tel-area-code\"\n  | \"tel-local\"\n  | \"tel-extension\"\n  | \"impp\"\n  | \"url\"\n  | \"photo\";\n\nexport type IcAlignment = \"left\" | \"center\" | \"full-width\";\n\nexport enum IcThemeForegroundEnum {\n  Default = \"default\",\n  Dark = \"dark\",\n  Light = \"light\",\n}\n\nexport type IcThemeForeground = \"default\" | \"dark\" | \"light\";\n\nexport type IcThemeForegroundNoDefault = \"dark\" | \"light\";\n\nexport type IcTheme = {\n  mode: IcThemeForeground;\n  color: IcColorRGB;\n};\n\nexport type IcAdditionalFieldTypes = \"static\" | \"dynamic\";\n\nexport type IcColorRGB = {\n  r: number;\n  g: number;\n  b: number;\n};\n\nexport type IcColorRGBA = IcColorRGB & {\n  a: number;\n};\n\nexport type IcActivationTypes = \"automatic\" | \"manual\";\n\nexport type IcAutocorrectStates = \"on\" | \"off\";\n\nexport type IcNavParentDetails = {\n  navType: IcNavType | \"\";\n  parent: HTMLElement;\n};\n\nexport type IcTypographyVariants =\n  | \"h1\"\n  | \"h2\"\n  | \"h3\"\n  | \"h4\"\n  | \"subtitle-large\"\n  | \"subtitle-small\"\n  | \"body\"\n  | \"label\"\n  | \"label-uppercase\"\n  | \"caption\"\n  | \"caption-uppercase\"\n  | \"code-large\"\n  | \"code-small\"\n  | \"code-extra-small\"\n  | \"badge\"\n  | \"badge-small\";\n\n/**\n * @interface IcMenuOption\n * @field {string} A label field to options. Defaults to \"label\", but can have any custom name.\n * @field {string} A value field to options. Defaults to \"value\", but can have any custom name.\n */\nexport interface IcMenuOption {\n  description?: string;\n  disabled?: boolean;\n  recommended?: boolean;\n  children?: IcMenuOption[];\n  loading?: boolean;\n  timedOut?: boolean;\n  [key: string]: any;\n  element?: {\n    component: any;\n    ariaLabel: string;\n  };\n  icon?: any;\n}\n\nexport type IcSearchMatchPositions = \"start\" | \"anywhere\";\n\nexport type IcCallbackFunctionNoReturn = (...args: unknown[]) => void;\n\nexport type IcRequiredPropsTypes =\n  | string\n  | boolean\n  | number\n  | HTMLElement\n  | IcMenuOption[];\n\nexport type IcPropObject = { prop: IcRequiredPropsTypes; propName: string };\n\nexport type IcRelatedTarget = EventTarget | undefined;\n\nexport type IcOrientation = \"horizontal\" | \"vertical\";\n\nexport interface IcValueEventDetail {\n  value: string;\n  keyPressed?: string;\n}\nexport interface IcBlurEventDetail {\n  relatedTarget: IcRelatedTarget;\n}\n"],"names":["TabContext","newTabPanels","newTabs","linkTabs","_this","tabs","forEach","tab","index","tabId","concat","contextId","tabPanelId","shared","contextIdAttr","setAttribute","tabPosition","tabGroup","tabPanels","panelId","appearance","IcThemeForegroundEnum","Light","getChildren","host","querySelector","Array","from","querySelectorAll","children","filter","child","tagName","enabledTabs","getEnabledTabs","keydownHandler","event","activationType","handleKeyBoardNavAutomatic","handleKeyBoardNavManual","attatchEventListeners","addEventListener","setControlledMode","undefined","selectedTabIndex","controlledMode","selectedTab","setInitialTab","focusedTabIndex","firstEnabledTabIndex","findIndex","configureTabs","selected","tabPanel","disabled","getIndexOfEnabledTab","allTabsIndex","keyboardSelectTab","enabledTabIndex","newIndex","focus","icTabSelect","emit","tabIndex","tabSelect","keyboardFocusTab","key","preventDefault","length","newValue","this","value","removeEventListener","detail","position","stopImmediatePropagation","ev","_this$tabs","_this$tabPanels","setFocus","push","apply","_toConsumableArray","_callee","hadFocus","_regeneratorRuntime","wrap","_context","prev","next","stop","_x","_tabRemovedHandler","arguments","h","get","IcInformationStatus"],"sourceRoot":""}