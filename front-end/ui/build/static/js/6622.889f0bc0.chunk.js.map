{"version":3,"file":"static/js/6622.889f0bc0.chunk.js","mappings":"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","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-toast/ic-toast.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-toast/ic-toast.css?tag=ic-toast&encapsulation=shadow"],"sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n} from \"@stencil/core\";\nimport closeIcon from \"../../assets/close-icon.svg\";\nimport { VARIANT_ICONS } from \"../../utils/constants\";\nimport {\n  getSlot,\n  isSlotUsed,\n  onComponentRequiredPropUndefined,\n} from \"../../utils/helpers\";\nimport {\n  IcActivationTypes,\n  IcStatusVariants,\n  IcThemeForegroundEnum,\n} from \"../../utils/types\";\nimport { ActionAreaElementTypes } from \"./ic-toast.types\";\n\nconst AUTO_DISMISS_TIMER_REFRESH_RATE_MS = 1000;\nconst TOAST_HEADING_CHAR_LIMIT = 70;\nconst TOAST_MESSAGE_CHAR_LIMIT = 140;\n\n/**\n * @slot action - IcButton or IcLink is placed below header and message. If used will default toast to manual `dismiss` type.\n * @slot neutral-icon - A custom neutral icon is placed on the left side of the component. If used will default toast to `neutral` variant.\n */\n@Component({\n  tag: \"ic-toast\",\n  styleUrl: \"ic-toast.css\",\n  shadow: true,\n})\nexport class Toast {\n  private dismissTimeout: number;\n  private interactiveElements: ActionAreaElementTypes[] = [];\n  private isManual: boolean;\n  private neutralVariantLabel: string;\n  private timerRefreshInterval: number;\n\n  @Element() el: HTMLIcToastElement;\n\n  @State() timerProgress = 100;\n  @State() visible = false;\n\n  /**\n   * If toast dismissMode is set to `automatic`, use this prop to define the time before the toast dismisses (in MILLISECONDS)\n   * (NOTE: Has a minimum value of `5000ms`)\n   */\n  @Prop({ mutable: true }) autoDismissTimeout? = 5000;\n\n  /**\n   * If toast can be manually dismissed, this prop sets a custom aria-label for the ic-button component\n   */\n  @Prop() dismissButtonAriaLabel? = \"dismiss\";\n\n  /**\n   * How the toast will be dismissed. If manual will display a dismiss button.\n   */\n  @Prop({ mutable: true }) dismissMode?: IcActivationTypes = \"manual\";\n\n  /**\n   * The title to display at the start of the toast. (NOTE: Should be no more than `70` characters)\n   */\n  @Prop() heading!: string;\n\n  /**\n   * The main body message of the toast. (NOTE: Should be no more than `140` characters)\n   */\n  @Prop() message?: string;\n\n  /**\n   * Provides a custom alt-text to be announced to screen readers, if slotting a custom neutral icon\n   */\n  @Prop() neutralIconAriaLabel?: string;\n\n  /**\n   * The variant of the toast being rendered\n   */\n  @Prop({ mutable: true }) variant?: IcStatusVariants;\n\n  /**\n   * Is emitted when the user dismisses the toast\n   */\n  @Event() icDismiss: EventEmitter<void>;\n\n  disconnectedCallback(): void {\n    window.clearTimeout(this.dismissTimeout);\n    window.clearInterval(this.timerRefreshInterval);\n  }\n\n  componentWillLoad(): void {\n    this.handleLongText(\n      this.heading.length > TOAST_HEADING_CHAR_LIMIT,\n      this.message?.length > TOAST_MESSAGE_CHAR_LIMIT\n    );\n\n    if (this.autoDismissTimeout < 5000) this.autoDismissTimeout = 5000;\n\n    if (isSlotUsed(this.el, \"action\")) this.dismissMode = \"manual\";\n    this.isManual = this.dismissMode === \"manual\";\n\n    if (isSlotUsed(this.el, \"neutral-icon\")) this.variant = \"neutral\";\n    if (this.variant === \"neutral\") {\n      this.neutralVariantLabel =\n        this.neutralIconAriaLabel ?? VARIANT_ICONS[this.variant].ariaLabel;\n    }\n\n    if (this.isManual) {\n      this.el.setAttribute(\n        \"aria-label\",\n        this.variant\n          ? this.neutralVariantLabel || VARIANT_ICONS[this.variant].ariaLabel\n          : this.heading\n      );\n      (this.variant || this.message) &&\n        this.el.setAttribute(\n          \"aria-description\",\n          this.variant\n            ? `${this.heading}${\n                this.message !== undefined ? `. ${this.message}` : \"\"\n              }`\n            : this.message\n        );\n    }\n  }\n\n  componentDidLoad(): void {\n    onComponentRequiredPropUndefined(\n      [{ prop: this.heading, propName: \"heading\" }],\n      \"Toast\"\n    );\n    const actionContent = getSlot(this.el, \"action\") as ActionAreaElementTypes;\n    const dismissButton = this.el.shadowRoot.querySelector(\"ic-button\");\n    if (actionContent) this.interactiveElements.push(actionContent);\n    if (dismissButton) this.interactiveElements.push(dismissButton);\n  }\n\n  @Listen(\"icDismiss\", { capture: true })\n  handleDismiss(): void {\n    this.visible = false;\n    clearInterval(this.timerRefreshInterval);\n    this.timerProgress = 100;\n  }\n\n  @Listen(\"keydown\", { target: \"document\" })\n  handleKeyboard(ev: KeyboardEvent): void {\n    if (this.isManual && this.visible) {\n      switch (ev.key) {\n        case \"Tab\":\n          ev.preventDefault();\n          this.findNextInteractiveElement(ev.shiftKey).setFocus();\n          break;\n        case \"Escape\":\n          !ev.repeat && this.dismissAction();\n          ev.stopImmediatePropagation();\n          break;\n      }\n    }\n  }\n\n  @Listen(\"mouseenter\")\n  @Listen(\"mouseleave\")\n  handleTimer(ev: MouseEvent): void {\n    if (!this.isManual) {\n      switch (ev.type) {\n        case \"mouseenter\":\n          window.clearTimeout(this.dismissTimeout);\n          window.clearInterval(this.timerRefreshInterval);\n          this.timerProgress = 100;\n          break;\n        case \"mouseleave\":\n          this.dismissTimeout = window.setTimeout(\n            this.dismissAction,\n            this.autoDismissTimeout\n          );\n          this.timerRefreshInterval = window.setInterval(\n            this.handleProgressChange,\n            AUTO_DISMISS_TIMER_REFRESH_RATE_MS\n          );\n          break;\n      }\n    }\n  }\n\n  /**\n   * Used to display the individual toast\n   * @returns The element that previously had focus before the toast appeared\n   */\n  @Method()\n  async setVisible(): Promise<HTMLElement> {\n    if (!this.visible) this.visible = true;\n    if (!this.isManual) {\n      this.dismissTimeout = window.setTimeout(\n        this.dismissAction,\n        this.autoDismissTimeout\n      );\n      this.timerRefreshInterval = window.setInterval(\n        this.handleProgressChange,\n        AUTO_DISMISS_TIMER_REFRESH_RATE_MS\n      );\n      return null;\n    } else {\n      window.setTimeout(() => this.interactiveElements[0].setFocus(), 200);\n      return document.activeElement as HTMLElement;\n    }\n  }\n\n  private dismissAction = (): void => {\n    this.icDismiss.emit();\n  };\n\n  private handleProgressChange = () => {\n    this.timerProgress -=\n      (AUTO_DISMISS_TIMER_REFRESH_RATE_MS / this.autoDismissTimeout) * 100;\n  };\n\n  private handleLongText(\n    headingTooLong: boolean,\n    messageTooLong?: boolean\n  ): void {\n    if (messageTooLong || headingTooLong) {\n      console.error(\n        `Too many characters in toast ${headingTooLong ? \"heading\" : \"\"}${\n          headingTooLong && messageTooLong ? \" and \" : \"\"\n        }${\n          messageTooLong ? \"message\" : \"\"\n        }. Refer to character limits specified in the prop description`\n      );\n    }\n  }\n\n  private findNextInteractiveElement(\n    isBackwards: boolean\n  ): ActionAreaElementTypes {\n    const first = this.interactiveElements[0];\n    const last = this.interactiveElements[this.interactiveElements.length - 1];\n\n    const source = isBackwards ? first : last;\n    const target = isBackwards ? last : first;\n    if (this.isActive(source)) return target;\n\n    let currentIndex: number;\n    const found = this.interactiveElements.some((el, index) => {\n      if (!this.isActive(el)) return false;\n      currentIndex = index;\n      return true;\n    });\n\n    if (!found) return first;\n    return this.interactiveElements[currentIndex + (isBackwards ? -1 : 1)];\n  }\n\n  private isActive(targetEl: HTMLElement): boolean {\n    if (targetEl === this.el) return !!this.el.shadowRoot.activeElement;\n    return document.activeElement === targetEl;\n  }\n\n  render() {\n    const {\n      variant,\n      heading,\n      message,\n      visible,\n      isManual,\n      dismissButtonAriaLabel,\n    } = this;\n    return (\n      <Host\n        class={{ [\"hidden\"]: !visible }}\n        role={isManual ? \"dialog\" : \"status\"}\n      >\n        <div class=\"container\">\n          {variant && visible && (\n            <div class=\"toast-icon-container\">\n              <div\n                class={{\n                  [\"divider\"]: true,\n                  [`divider-${variant}`]: true,\n                }}\n              ></div>\n              {variant === \"neutral\" ? (\n                <slot name=\"neutral-icon\" />\n              ) : (\n                <span\n                  class=\"toast-icon\"\n                  innerHTML={VARIANT_ICONS[variant].icon}\n                ></span>\n              )}\n            </div>\n          )}\n          <div\n            class={{\n              [\"toast-content\"]: true,\n              [\"no-icon\"]:\n                variant === \"neutral\" && !isSlotUsed(this.el, \"neutral-icon\"),\n            }}\n          >\n            <div class=\"toast-message\">\n              <ic-typography variant=\"subtitle-large\">\n                {visible && <h5>{heading}</h5>}\n              </ic-typography>\n              {message && (\n                <ic-typography variant=\"body\">\n                  {visible && <p>{message}</p>}\n                </ic-typography>\n              )}\n            </div>\n            {isSlotUsed(this.el, \"action\") && (\n              <div class=\"toast-action-container\">\n                <slot name=\"action\" />\n              </div>\n            )}\n          </div>\n          {!isManual ? (\n            <ic-loading-indicator\n              class=\"toast-dismiss-timer\"\n              appearance=\"light\"\n              size=\"icon\"\n              progress={this.timerProgress}\n            ></ic-loading-indicator>\n          ) : (\n            <ic-button\n              id=\"dismiss-button\"\n              innerHTML={closeIcon}\n              onClick={this.dismissAction}\n              variant=\"icon\"\n              appearance={IcThemeForegroundEnum.Light}\n              aria-label={dismissButtonAriaLabel}\n            ></ic-button>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n","@import \"../../global/normalize.css\";\n\n/**\n * @prop --ic-z-index-toast: z-index of toast\n */\n\n:host {\n  --bottom-position: var(--ic-space-xl);\n\n  position: fixed;\n  bottom: var(--bottom-position);\n  left: 50%;\n  transform: translate(-50%);\n  animation: fadein var(--ic-transition-duration-slow) ease-in-out;\n  z-index: var(--ic-z-index-toast);\n}\n\n:host(.hidden) {\n  display: none;\n  animation: fadeout var(--ic-transition-duration-slow) ease-in-out;\n}\n\n.container {\n  max-width: 32.5rem;\n  min-width: 18rem;\n  box-shadow: var(--ic-elevation-overlay);\n  min-height: 3.5rem;\n  background-color: var(--ic-architectural-800);\n  color: var(--ic-color-white-text);\n  display: flex;\n  align-items: center;\n  position: relative;\n  border-radius: var(--ic-border-radius);\n}\n\n.toast-icon-container {\n  height: 100%;\n  display: flex;\n  align-items: center;\n}\n\n.divider {\n  height: 100%;\n  width: var(--ic-space-xs);\n  position: absolute;\n  border-radius: var(--ic-space-xxxs) 0 0 var(--ic-space-xxxs);\n}\n\n.divider-neutral {\n  background-color: var(--ic-status-unknown);\n}\n\n.divider-info {\n  background-color: var(--ic-status-info-contrast);\n}\n\n.divider-warning {\n  background-color: var(--ic-status-warning-contrast);\n}\n\n.divider-error {\n  background-color: var(--ic-status-error-contrast);\n}\n\n.divider-success {\n  background-color: var(--ic-status-success-contrast);\n}\n\n.toast-icon,\n::slotted(svg) {\n  height: var(--ic-space-lg);\n  width: var(--ic-space-lg);\n  margin-left: var(--ic-space-md);\n}\n\n:host([variant=\"neutral\"]) .toast-icon svg,\n::slotted(svg) {\n  fill: var(--ic-status-unknown);\n}\n\n:host([variant=\"info\"]) .toast-icon svg {\n  fill: var(--ic-status-info-contrast);\n}\n\n:host([variant=\"warning\"]) .toast-icon svg {\n  fill: var(--ic-status-warning-contrast);\n}\n\n:host([variant=\"error\"]) .toast-icon svg {\n  fill: var(--ic-status-error-contrast);\n}\n\n:host([variant=\"success\"]) .toast-icon svg {\n  fill: var(--ic-status-success-contrast);\n}\n\n.toast-content {\n  margin-left: var(--ic-space-xs);\n  width: 100%;\n}\n\n.no-icon {\n  margin-left: var(--ic-space-md);\n}\n\n.toast-message {\n  padding: var(--ic-space-xs) var(--ic-space-xs) var(--ic-space-xs) 0;\n}\n\n.toast-action-container {\n  padding-bottom: var(--ic-space-md);\n}\n\nic-button,\n.toast-dismiss-timer {\n  padding: var(--ic-space-xs);\n}\n\n@media (max-width: 576px) {\n  :host {\n    --bottom-position: var(--ic-space-lg);\n\n    width: calc(100% - 2 * var(--ic-space-md));\n  }\n}\n\n@media (min-width: 993px) {\n  :host {\n    --bottom-position: calc(var(--ic-space-xl) + var(--ic-space-xs));\n  }\n}\n\n@media (forced-colors: active) {\n  .container {\n    border: var(--ic-hc-border);\n  }\n}\n\n@keyframes fadein {\n  from {\n    bottom: 0;\n    opacity: 0;\n  }\n\n  to {\n    bottom: var(--bottom-position);\n    opacity: 1;\n  }\n}\n\n@keyframes fadeout {\n  from {\n    bottom: var(--bottom-position);\n    opacity: 1;\n  }\n\n  to {\n    bottom: 0;\n    opacity: 0;\n  }\n}\n"],"names":["AUTO_DISMISS_TIMER_REFRESH_RATE_MS","Toast","interactiveElements","dismissAction","_this","icDismiss","emit","handleProgressChange","timerProgress","autoDismissTimeout","window","clearTimeout","this","dismissTimeout","clearInterval","timerRefreshInterval","key","value","handleLongText","heading","length","_a","message","isSlotUsed","el","dismissMode","isManual","variant","neutralVariantLabel","_b","neutralIconAriaLabel","VARIANT_ICONS","ariaLabel","setAttribute","concat","undefined","onComponentRequiredPropUndefined","prop","propName","actionContent","getSlot","dismissButton","shadowRoot","querySelector","push","visible","ev","preventDefault","findNextInteractiveElement","shiftKey","setFocus","repeat","stopImmediatePropagation","type","setTimeout","setInterval","_callee","_this2","_regeneratorRuntime","wrap","_context","prev","next","abrupt","document","activeElement","stop","_setVisible","apply","arguments","headingTooLong","messageTooLong","console","error","isBackwards","currentIndex","_this3","first","last","source","target","isActive","some","index","targetEl","_class2","_class3","dismissButtonAriaLabel","h","Host","class","_defineProperty","role","name","innerHTML","icon","id","closeIcon","onClick","appearance","IcThemeForegroundEnum","Light","size","progress","get"],"sourceRoot":""}