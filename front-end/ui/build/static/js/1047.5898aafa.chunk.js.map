{"version":3,"file":"static/js/1047.5898aafa.chunk.js","mappings":"4OAiBMA,EAAkB,IAOXC,EAAgB,W,yDACnB,KAAAC,gBAA0B,EA4F1B,KAAAC,aAAe,SAACC,GACtBC,EAAKC,iBACHC,MAAMC,KAAKH,EAAKI,OAAOC,QAAQN,EAAMO,Q,EAUjC,KAAAC,uBAAyB,WAC3BP,EAAKQ,GAAGC,aAAeT,EAAKU,iBAAiBC,YAC/CX,EAAKY,cAAe,EAEpBZ,EAAKY,cAAeC,EAAAA,EAAAA,GAAkBb,EAAKU,kBAGzCV,EAAKY,eACPZ,EAAKc,gBACHd,EAAKU,iBAAiBK,YAAcf,EAAKU,iBAAiBM,YAC1DhB,EAAKU,iBAAiBC,Y,EAIpB,KAAAM,kBAAoB,WAC1BjB,EAAKkB,eAAiB,IAAIC,gBAAe,WACvCnB,EAAKO,wB,IAEPP,EAAKkB,eAAeE,QAAQpB,EAAKU,iB,EAG3B,KAAAM,WAAa,WACnBhB,EAAKqB,mBAAmBrB,EAAKsB,qBAAuB,E,EAG9C,KAAAC,YAAc,WACpBvB,EAAKqB,mBAAmBrB,EAAKsB,qBAAuB,E,EAG9C,KAAAE,gBAAkB,WACxBxB,EAAKuB,cACLvB,EAAKyB,YAAcC,OAAOC,WAAW3B,EAAKwB,gBAAiB7B,E,EAGrD,KAAAiC,eAAiB,WACvB5B,EAAKgB,aACLhB,EAAKyB,YAAcC,OAAOC,WAAW3B,EAAK4B,eAAgBjC,E,EAGpD,KAAAkC,0BAA4B,SAACC,GACnCA,EAAEC,iBACF/B,EAAKyB,YAAcC,OAAOC,WAAW3B,EAAK4B,eAAgBjC,E,EAGpD,KAAAqC,2BAA6B,SAACF,GACpCA,EAAEC,iBACF/B,EAAKyB,YAAcC,OAAOC,WAAW3B,EAAKwB,gBAAiB7B,E,EAGrD,KAAAsC,oBAAsB,WAC5BP,OAAOQ,aAAalC,EAAKyB,Y,EAGnB,KAAAH,mBAAqB,WAC3B,IAAMa,EAAQnC,EAAKoC,YAAYC,WAC7B,SAAC7B,GAAE,OAAKA,EAAK8B,KAAKC,MAAMvC,EAAKU,iBAAiBM,WAAW,IAE3D,OAAOmB,EAAQ,EAAI,EAAIA,C,EAGjB,KAAAK,cAAgB,WACtBd,OAAOQ,aAAalC,EAAKyC,aAEzBzC,EAAKyC,YAAcf,OAAOC,WAAW3B,EAAK0C,cAAe,G,EAGnD,KAAAA,cAAgB,WAGtB,IAAM1B,EAAasB,KAAKC,MAAMvC,EAAKU,iBAAiBM,aACxB,IAAxBhB,EAAKH,iBACPG,EAAK2C,iBAAkC,IAAf3B,EACxBhB,EAAKc,gBACHd,EAAKU,iBAAiBK,YAAcC,GACpChB,EAAKU,iBAAiBC,aAE1BX,EAAKH,gBAAiB,C,yBA1Ka,E,mBACJ,E,sBACG,E,gBAKK,S,iDAEzC,WAAiB,IAAA+C,EAAA,KACfC,KAAKnC,iBAAmBmC,KAAKrC,GAAGsC,SAAS,GACzCD,KAAKnC,iBAAiBqC,iBAAiB,SAAUF,KAAKL,eAEtDK,KAAKzC,OAAS4C,EAAAA,EAAAA,GAAgBH,KAAKnC,mBACjCR,MAAMC,KAAK0C,KAAKnC,iBAAiBoC,UACnCD,KAAKzC,MAAM6C,SAAQ,SAACC,GACdA,EAAKH,kBACPG,EAAKH,iBAAiB,QAASH,EAAK9C,a,MAGzC,CAAAqD,IAAA,mBAAAC,MAED,WAAgB,IAAAC,EAAA,KACVC,EAAe,EACnBT,KAAKT,YAAcS,KAAKzC,MAAMmD,KAAI,SAACL,GAEjC,OADAI,GAAgBJ,EAAKnC,W,KAIvByC,EAAAA,EAAAA,GAAoBX,KAAK5B,mBAKzB,IAAMwC,EAAevD,MAAMC,KACzB0C,KAAKrC,GAAGkD,WAAWC,iBAAiB,QAEtC,CAAC,UAAW,cAAcV,SAAQ,SAAClD,GACjC0D,EAAaR,SAAQ,SAACW,GAAK,OACzBA,EAAMb,iBAAiBhD,EAAOsD,EAAKpB,oBAAoB,G,MAG5D,CAAAkB,IAAA,uBAAAC,MAED,WAAoB,IAAAS,EAAA,UACUC,IAAxBjB,KAAK3B,gBACP2B,KAAK3B,eAAe6C,aAGtB,IAAMN,EAAevD,MAAMC,KACzB0C,KAAKrC,GAAGkD,WAAWC,iBAAiB,QAEtC,CAAC,UAAW,cAAcV,SAAQ,SAAClD,GACjC0D,EAAaR,SAAQ,SAACW,GAAK,OACzBA,EAAMI,oBAAoBjE,EAAO8D,EAAK5B,oBAAoB,G,IAI9DY,KAAKzC,MAAM6C,SAAQ,SAACC,GACdA,EAAKc,qBACPd,EAAKc,oBAAoB,QAASH,EAAK/D,a,IAI3C+C,KAAKnC,iBAAiBsD,oBAAoB,SAAUnB,KAAKL,c,4EAO3D,SAAAyB,EAAyBC,GAAoB,IAAAC,EAAA,OAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC3C3B,KAAKF,iBAAmBuB,GAAgB,EAClCC,EACJD,GAAgB,EAAI,EAAIrB,KAAKT,YAAY8B,EAAe,GAC1DrB,KAAK/B,gBACH+B,KAAKnC,iBAAiBK,YAAcoD,GACpCtB,KAAKnC,iBAAiBC,YACxBkC,KAAKhD,gBAAiB,EACtBgD,KAAKnC,iBAAiBM,WAAamD,EAAa,wBAAAG,EAAAG,OAAA,GAAAR,EAAA,UACjD,gBAAAS,GAAA,OAAAC,EAAAC,MAAA,KAAAC,UAAA,E,IAAA,CAAA1B,IAAA,mBAAAC,MAQO,SAAiBc,GACnBrB,KAAKjC,cACPiC,KAAKxB,mBAAmB6C,E,GAE3B,CAAAf,IAAA,SAAAC,MAiFD,WAAM,IAAA0B,EAAAC,EAAAC,EACIC,EACNpC,KADMoC,WAAYtC,EAClBE,KADkBF,iBAAkB7B,EACpC+B,KADoC/B,gBAAiBF,EACrDiC,KADqDjC,aAGvD,OACEsE,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CACHC,OAAKN,EAAA,IAAAO,EAAAA,EAAAA,GAAAP,EACF,UAAYlE,IAAYyE,EAAAA,EAAAA,GAAAP,EACxB,OAASjC,KAAKoC,aAAeK,EAAAA,EAAsBC,OAAIF,EAAAA,EAAAA,GAAAP,EACvD,QAAUjC,KAAKoC,aAAeK,EAAAA,EAAsBE,OAAKV,KAG5DI,EAAAA,EAAAA,GAAA,qBACc,OACZE,OAAKL,EAAA,IAAAM,EAAAA,EAAAA,GAAAN,EACF,yBAA0B,IAAIM,EAAAA,EAAAA,GAAAN,EAC9B,UAAYnE,IAAYyE,EAAAA,EAAAA,GAAAN,EACxB,WAAapC,GAAgBoC,GAEhCU,KAAK,QAELP,EAAAA,EAAAA,GAAA,aACEE,MAAM,eACNM,QAAQ,OAAM,aACH,cACXT,WAAYA,EACZU,U,iNACAC,SAAUjD,EACVkD,SAAS,KACTC,QAASjD,KAAK7B,WACd+E,YAAalD,KAAKhB,6BAEpBqD,EAAAA,EAAAA,GAAA,QAAME,MAAM,2BAEdF,EAAAA,EAAAA,GAAA,cACAA,EAAAA,EAAAA,GAAA,qBACc,OACZE,OAAKJ,EAAA,IAAAK,EAAAA,EAAAA,GAAAL,EACF,0BAA2B,IAAIK,EAAAA,EAAAA,GAAAL,EAC/B,UAAYpE,IAAYyE,EAAAA,EAAAA,GAAAL,EACxB,WAAalE,GAAekE,GAE/BS,KAAK,QAELP,EAAAA,EAAAA,GAAA,QAAME,MAAM,2BACZF,EAAAA,EAAAA,GAAA,aACEE,MAAM,eACNM,QAAQ,OAAM,aACH,eACXT,WAAYA,EACZU,U,6MACAC,SAAU9E,EACV+E,SAAS,KACTC,QAASjD,KAAKtB,YACdwE,YAAalD,KAAKb,8B,GAK3B,CAAAmB,IAAA,KAAA6C,IAAA,W,0BAnP0B,G,QCxBC,s3H","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-horizontal-scroll/ic-horizontal-scroll.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-horizontal-scroll/ic-horizontal-scroll.css?tag=ic-horizontal-scroll&encapsulation=shadow"],"sourcesContent":["import {\n  Component,\n  Element,\n  h,\n  Host,\n  State,\n  Method,\n  Prop,\n} from \"@stencil/core\";\n\nimport LeftArrow from \"./assets/left-arrow.svg\";\nimport RightArrow from \"./assets/right-arrow.svg\";\nimport { getSlotElements } from \"../../utils/helpers\";\n\nimport { checkResizeObserver, elementOverflowsX } from \"../../utils/helpers\";\nimport { IcThemeForeground, IcThemeForegroundEnum } from \"../../utils/types\";\n\nconst SCROLL_DELAY_MS = 200;\n\n@Component({\n  tag: \"ic-horizontal-scroll\",\n  styleUrl: \"./ic-horizontal-scroll.css\",\n  shadow: true,\n})\nexport class HorizontalScroll {\n  private buttonStateSet: boolean = false;\n  private isScrolling: number;\n  private itemOffsets: number[];\n  private items: HTMLElement[];\n  private itemsContainerEl: HTMLElement;\n  private resizeObserver: ResizeObserver;\n  private scrollDelay: number;\n\n  @Element() el: HTMLIcHorizontalScrollElement;\n\n  @State() firstItemVisible: boolean = true;\n  @State() itemOverflow: boolean = false;\n  @State() lastItemVisible: boolean = false;\n\n  /**\n   * The appearance of the horizontal scroll, e.g. dark, light or the default.\n   */\n  @Prop() appearance?: IcThemeForeground = \"default\";\n\n  componentWillLoad(): void {\n    this.itemsContainerEl = this.el.children[0] as HTMLElement;\n    this.itemsContainerEl.addEventListener(\"scroll\", this.scrollHandler);\n\n    this.items = (getSlotElements(this.itemsContainerEl) ||\n      Array.from(this.itemsContainerEl.children)) as HTMLElement[];\n    this.items.forEach((item) => {\n      if (item.addEventListener) {\n        item.addEventListener(\"focus\", this.focusHandler);\n      }\n    });\n  }\n\n  componentDidLoad(): void {\n    let runningTotal = 0;\n    this.itemOffsets = this.items.map((item) => {\n      runningTotal += item.offsetWidth;\n      return runningTotal;\n    });\n\n    checkResizeObserver(this.runResizeObserver);\n\n    // Add event listener to scroll containers as mouse events are not fired on disabled elements (ic-button's <button>)\n    // 'mouseleave' needed in case the user moves their mouse while holding the arrow buttons\n    // - 'mouseup' otherwise not detected and scrolling not stopped\n    const scrollArrows = Array.from(\n      this.el.shadowRoot.querySelectorAll(\"div\")\n    ) as HTMLElement[];\n    [\"mouseup\", \"mouseleave\"].forEach((event) => {\n      scrollArrows.forEach((arrow) =>\n        arrow.addEventListener(event, this.arrowMouseUpHandler)\n      );\n    });\n  }\n\n  disconnectedCallback(): void {\n    if (this.resizeObserver !== undefined) {\n      this.resizeObserver.disconnect();\n    }\n\n    const scrollArrows = Array.from(\n      this.el.shadowRoot.querySelectorAll(\"div\")\n    ) as HTMLElement[];\n    [\"mouseup\", \"mouseleave\"].forEach((event) => {\n      scrollArrows.forEach((arrow) =>\n        arrow.removeEventListener(event, this.arrowMouseUpHandler)\n      );\n    });\n\n    this.items.forEach((item) => {\n      if (item.removeEventListener) {\n        item.removeEventListener(\"focus\", this.focusHandler);\n      }\n    });\n\n    this.itemsContainerEl.removeEventListener(\"scroll\", this.scrollHandler);\n  }\n\n  /**\n   * @internal if side scrolling enabled, scrolls the specified item into view.\n   */\n  @Method()\n  async scrollItemIntoView(itemPosition: number): Promise<void> {\n    this.firstItemVisible = itemPosition <= 0;\n    const newScrollPos =\n      itemPosition <= 0 ? 0 : this.itemOffsets[itemPosition - 1];\n    this.lastItemVisible =\n      this.itemsContainerEl.offsetWidth + newScrollPos >=\n      this.itemsContainerEl.scrollWidth;\n    this.buttonStateSet = true;\n    this.itemsContainerEl.scrollLeft = newScrollPos;\n  }\n\n  private focusHandler = (event: FocusEvent) => {\n    this.itemFocusHandler(\n      Array.from(this.items).indexOf(event.target as HTMLElement)\n    );\n  };\n\n  private itemFocusHandler(itemPosition: number): void {\n    if (this.itemOverflow) {\n      this.scrollItemIntoView(itemPosition);\n    }\n  }\n\n  private resizeObserverCallback = () => {\n    if (this.el.clientWidth >= this.itemsContainerEl.scrollWidth) {\n      this.itemOverflow = false;\n    } else {\n      this.itemOverflow = elementOverflowsX(this.itemsContainerEl);\n    }\n\n    if (this.itemOverflow) {\n      this.lastItemVisible =\n        this.itemsContainerEl.offsetWidth + this.itemsContainerEl.scrollLeft >=\n        this.itemsContainerEl.scrollWidth;\n    }\n  };\n\n  private runResizeObserver = () => {\n    this.resizeObserver = new ResizeObserver(() => {\n      this.resizeObserverCallback();\n    });\n    this.resizeObserver.observe(this.itemsContainerEl);\n  };\n\n  private scrollLeft = () => {\n    this.scrollItemIntoView(this.getCurrentLeftItem() - 1);\n  };\n\n  private scrollRight = () => {\n    this.scrollItemIntoView(this.getCurrentLeftItem() + 1);\n  };\n\n  private longScrollRight = () => {\n    this.scrollRight();\n    this.scrollDelay = window.setTimeout(this.longScrollRight, SCROLL_DELAY_MS);\n  };\n\n  private longScrollLeft = () => {\n    this.scrollLeft();\n    this.scrollDelay = window.setTimeout(this.longScrollLeft, SCROLL_DELAY_MS);\n  };\n\n  private leftArrowMouseDownHandler = (e: MouseEvent) => {\n    e.preventDefault();\n    this.scrollDelay = window.setTimeout(this.longScrollLeft, SCROLL_DELAY_MS);\n  };\n\n  private rightArrowMouseDownHandler = (e: MouseEvent) => {\n    e.preventDefault();\n    this.scrollDelay = window.setTimeout(this.longScrollRight, SCROLL_DELAY_MS);\n  };\n\n  private arrowMouseUpHandler = () => {\n    window.clearTimeout(this.scrollDelay);\n  };\n\n  private getCurrentLeftItem = (): number => {\n    const index = this.itemOffsets.findIndex(\n      (el) => el > Math.round(this.itemsContainerEl.scrollLeft)\n    );\n    return index < 0 ? 0 : index;\n  };\n\n  private scrollHandler = () => {\n    window.clearTimeout(this.isScrolling);\n    // Set a timeout to run after scrolling ends\n    this.isScrolling = window.setTimeout(this.scrollStopped, 50);\n  };\n\n  private scrollStopped = () => {\n    // If scrollItemIntoView has been called, the button states will already be set\n    // Can't just handle it here as it causes strange jumping behaviour in positioning\n    const scrollLeft = Math.round(this.itemsContainerEl.scrollLeft);\n    if (this.buttonStateSet === false) {\n      this.firstItemVisible = scrollLeft === 0;\n      this.lastItemVisible =\n        this.itemsContainerEl.offsetWidth + scrollLeft >=\n        this.itemsContainerEl.scrollWidth;\n    }\n    this.buttonStateSet = false;\n  };\n\n  render() {\n    const { appearance, firstItemVisible, lastItemVisible, itemOverflow } =\n      this;\n\n    return (\n      <Host\n        class={{\n          [\"visible\"]: itemOverflow,\n          [\"dark\"]: this.appearance === IcThemeForegroundEnum.Dark,\n          [\"light\"]: this.appearance === IcThemeForegroundEnum.Light,\n        }}\n      >\n        <div\n          aria-hidden=\"true\"\n          class={{\n            [\"scroll-container-left\"]: true,\n            [\"hidden\"]: !itemOverflow,\n            [\"disabled\"]: firstItemVisible,\n          }}\n          role=\"tab\"\n        >\n          <ic-button\n            class=\"scroll-arrow\"\n            variant=\"icon\"\n            aria-label=\"Scroll left\"\n            appearance={appearance}\n            innerHTML={LeftArrow}\n            disabled={firstItemVisible}\n            tabindex=\"-1\"\n            onClick={this.scrollLeft}\n            onMouseDown={this.leftArrowMouseDownHandler}\n          ></ic-button>\n          <span class=\"scroll-splitter-left\"></span>\n        </div>\n        <slot></slot>\n        <div\n          aria-hidden=\"true\"\n          class={{\n            [\"scroll-container-right\"]: true,\n            [\"hidden\"]: !itemOverflow,\n            [\"disabled\"]: lastItemVisible,\n          }}\n          role=\"tab\"\n        >\n          <span class=\"scroll-splitter-right\"></span>\n          <ic-button\n            class=\"scroll-arrow\"\n            variant=\"icon\"\n            aria-label=\"Scroll right\"\n            appearance={appearance}\n            innerHTML={RightArrow}\n            disabled={lastItemVisible}\n            tabindex=\"-1\"\n            onClick={this.scrollRight}\n            onMouseDown={this.rightArrowMouseDownHandler}\n          ></ic-button>\n        </div>\n      </Host>\n    );\n  }\n}\n","@import \"../../global/normalize.css\";\n\n:host {\n  --border-bottom-color: var(--ic-architectural-300);\n  --splitter-color: var(--ic-architectural-100);\n\n  display: flex;\n  max-width: 100%;\n}\n\n:host(.light) {\n  --splitter-color: var(--ic-keyline-lighten-rgb);\n}\n\n:host(.dark) {\n  --splitter-color: var(--ic-keyline-darken-rgb);\n}\n\n/* Slotted items container element */\n::slotted(*) {\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scroll-behavior: smooth;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n  margin: calc(var(--ic-space-xs) * -1) !important;\n  padding: var(--ic-space-xs) !important;\n}\n\n:host(.visible) ::slotted(*) {\n  margin: calc(var(--ic-space-xs) * -1) 0 !important;\n  padding: var(--ic-space-xs) !important;\n}\n\n.tabs-container::-webkit-scrollbar {\n  display: none;\n}\n\n.scroll-container-left,\n.scroll-container-right {\n  display: flex;\n}\n\n.scroll-container-left {\n  margin-left: var(--ic-space-xxs);\n}\n\n.scroll-container-right {\n  margin-right: var(--ic-space-xxs);\n}\n\n.hidden {\n  display: none;\n}\n\n.scroll-arrow {\n  margin: var(--ic-space-xxs) 0;\n}\n\n.disabled .ic-tooltip-container {\n  display: none !important;\n}\n\n.scroll-splitter-left,\n.scroll-splitter-right {\n  display: flex;\n  height: var(--ic-space-lg);\n  width: var(--ic-space-1px);\n  margin-top: var(--ic-space-xs);\n  border-radius: var(--ic-space-1px);\n  background-color: var(--splitter-color);\n}\n\n.scroll-splitter-left {\n  margin-left: calc(var(--ic-space-xxs) - var(--ic-space-1px));\n}\n\n.scroll-splitter-right {\n  margin-right: calc(var(--ic-space-xxs) - var(--ic-space-1px));\n}\n\n.disabled .scroll-splitter-left,\n.disabled .scroll-splitter-right {\n  background-color: transparent;\n}\n\n.disabled ic-button > svg {\n  color: var(--ic-keyline-darken-rgb);\n}\n\n:host(.dark) .disabled ic-button > svg,\n:host(.light) .disabled ic-button > svg {\n  color: var(--splitter-color) !important;\n}\n"],"names":["SCROLL_DELAY_MS","HorizontalScroll","buttonStateSet","focusHandler","event","_this","itemFocusHandler","Array","from","items","indexOf","target","resizeObserverCallback","el","clientWidth","itemsContainerEl","scrollWidth","itemOverflow","elementOverflowsX","lastItemVisible","offsetWidth","scrollLeft","runResizeObserver","resizeObserver","ResizeObserver","observe","scrollItemIntoView","getCurrentLeftItem","scrollRight","longScrollRight","scrollDelay","window","setTimeout","longScrollLeft","leftArrowMouseDownHandler","e","preventDefault","rightArrowMouseDownHandler","arrowMouseUpHandler","clearTimeout","index","itemOffsets","findIndex","Math","round","scrollHandler","isScrolling","scrollStopped","firstItemVisible","_this2","this","children","addEventListener","getSlotElements","forEach","item","key","value","_this3","runningTotal","map","checkResizeObserver","scrollArrows","shadowRoot","querySelectorAll","arrow","_this4","undefined","disconnect","removeEventListener","_callee","itemPosition","newScrollPos","_regeneratorRuntime","wrap","_context","prev","next","stop","_x","_scrollItemIntoView","apply","arguments","_class","_class2","_class3","appearance","h","Host","class","_defineProperty","IcThemeForegroundEnum","Dark","Light","role","variant","innerHTML","disabled","tabindex","onClick","onMouseDown","get"],"sourceRoot":""}