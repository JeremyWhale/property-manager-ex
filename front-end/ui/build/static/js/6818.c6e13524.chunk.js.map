{"version":3,"file":"static/js/6818.c6e13524.chunk.js","mappings":"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","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-accordion/ic-accordion.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-accordion/ic-accordion.css?tag=ic-accordion&encapsulation=shadow"],"sourcesContent":["import {\n  Component,\n  h,\n  Prop,\n  Element,\n  Event,\n  EventEmitter,\n  Host,\n  Watch,\n  Method,\n} from \"@stencil/core\";\nimport { isSlotUsed } from \"../../utils/helpers\";\nimport chevronIcon from \"../../assets/chevron-icon.svg\";\nimport { IcThemeForeground, IcSizes } from \"../../utils/types\";\n\nlet accordionIds = 0;\n\n/**\n * @slot heading - Content is placed as the accordion heading.\n * @slot icon - Content is placed to the left of the heading.\n */\n\n@Component({\n  tag: \"ic-accordion\",\n  styleUrl: \"ic-accordion.css\",\n  shadow: true,\n})\nexport class Accordion {\n  private accordionId = `ic-accordion-${accordionIds++}`;\n  private expandedContentEl: HTMLDivElement;\n  private accordionBtnHeading: HTMLButtonElement;\n\n  @Element() el: HTMLIcAccordionElement;\n  /**\n   * @internal Determines whether the light or dark variant of the accordion should be displayed.\n   */\n  @Prop() appearance?: IcThemeForeground = \"default\";\n\n  /**\n   * If `true`, the accordion will be disabled.\n   */\n  @Prop() disabled?: boolean = false;\n\n  /**\n   * If `true`, the accordion appears expanded.\n   */\n  @Prop({ mutable: true }) expanded: boolean = false;\n\n  /**\n   * The section header outlining section content.\n   */\n  @Prop() heading?: string = \"\";\n\n  /**\n   * The main body message of the accordion.\n   */\n  @Prop() message?: string = \"\";\n\n  /**\n   * The size of the accordion.\n   */\n  @Prop() size?: IcSizes = \"default\";\n\n  /**\n   * @internal Emitted when accordion is clicked.\n   */\n  @Event() accordionClicked: EventEmitter<{ id: string }>;\n\n  // Every time expanded is set via toggleExpanded or accordionGroup, animate to open or close\n  @Watch(\"expanded\")\n  handleExpandedWatch(): void {\n    this.animateExpandedContent();\n  }\n\n  /**\n   * Sets focus on accordion heading.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    if (this.accordionBtnHeading) {\n      this.accordionBtnHeading.focus();\n    }\n  }\n\n  disconnectedCallback(): void {\n    if (this.expandedContentEl) {\n      this.expandedContentEl.removeEventListener(\n        \"transitionend\",\n        (e) => this.setExpandedContentStyle(e, this.expandedContentEl),\n        true\n      );\n      this.expandedContentEl.removeEventListener(\n        \"transitionend\",\n        (e) => this.hideExpandedContent(e, this.expandedContentEl),\n        true\n      );\n    }\n  }\n\n  componentDidLoad(): void {\n    // So accordion opens by default if expanded set to true\n    if (this.expanded) {\n      this.expandedContentEl.style.height = \"auto\";\n    }\n  }\n\n  private toggleExpanded = (): void => {\n    this.expanded = !this.expanded;\n    this.accordionClicked.emit({ id: this.accordionId });\n  };\n\n  // Set accordion animation\n  private setAccordionAnimation = (\n    el: HTMLElement,\n    duration: string,\n    property: string,\n    delay: string\n  ) => {\n    el.style.transitionDuration = `${duration}ms`;\n    el.style.transitionProperty = property;\n    el.style.transitionDelay = delay;\n  };\n\n  private setExpandedContentStyle = (\n    ev: TransitionEvent,\n    expandedContent: HTMLDivElement\n  ) => {\n    if (ev.propertyName === \"height\" && expandedContent.clientHeight > 0) {\n      expandedContent.classList.add(\"expanded-content-opened\");\n      expandedContent.style.height = \"auto\";\n    }\n  };\n\n  private hideExpandedContent = (\n    ev: TransitionEvent,\n    expandedContent: HTMLDivElement\n  ) => {\n    if (ev.propertyName === \"height\" && expandedContent.clientHeight === 0) {\n      expandedContent.style.setProperty(\n        \"--ic-expanded-content-visiblity\",\n        \"hidden\"\n      );\n    }\n  };\n\n  private animateExpandedContent = () => {\n    const elementHeight = this.expandedContentEl.scrollHeight;\n    if (elementHeight > 0 && this.expanded) {\n      this.expandedContentEl.style.setProperty(\n        \"--ic-expanded-content-visiblity\",\n        \"visible\"\n      );\n      this.expandedContentEl.style.height = `${elementHeight}px`;\n      this.setAccordionAnimation(\n        this.expandedContentEl,\n        \"300\",\n        \"height\",\n        \"ease-out\"\n      );\n\n      this.expandedContentEl.addEventListener(\n        \"transitionend\",\n        (e: TransitionEvent) => {\n          this.setExpandedContentStyle(e, this.expandedContentEl);\n        }\n      );\n    } else if (!this.expanded) {\n      this.expandedContentEl.style.height = `${this.expandedContentEl.scrollHeight}px`;\n      if (this.expandedContentEl.scrollHeight > 0 && !this.expanded) {\n        this.expandedContentEl.style.height = \"0\";\n        this.setAccordionAnimation(\n          this.expandedContentEl,\n          \"300\",\n          \"height\",\n          \"ease-in\"\n        );\n        this.expandedContentEl.classList.remove(\"expanded-content-opened\");\n      }\n      this.expandedContentEl.addEventListener(\"transitionend\", (e) => {\n        this.hideExpandedContent(e, this.expandedContentEl);\n      });\n    }\n  };\n\n  render() {\n    const { appearance, size, disabled, expanded } = this;\n    return (\n      <Host\n        id={this.accordionId}\n        class={{\n          [`${appearance}`]: true,\n          [\"disabled\"]: disabled,\n        }}\n        aria-disabled={disabled ? \"true\" : \"false\"}\n      >\n        <button\n          ref={(el) => (this.accordionBtnHeading = el)}\n          id={`${this.accordionId}-button`}\n          disabled={disabled}\n          tabindex={disabled ? -1 : 0}\n          class={{\n            [`${size}`]: true,\n            [\"section-button\"]: true,\n            [\"section-button-open\"]: expanded && !disabled,\n          }}\n          aria-expanded={`${expanded}`}\n          aria-controls=\"expanded-content-area\"\n          onClick={this.toggleExpanded}\n        >\n          {isSlotUsed(this.el, \"icon\") && (\n            <div class=\"icon-container\">\n              <slot name=\"icon\" />\n            </div>\n          )}\n          <ic-typography variant=\"subtitle-large\" class=\"section-header\">\n            {isSlotUsed(this.el, \"heading\") ? (\n              <slot name=\"heading\" />\n            ) : (\n              this.heading\n            )}\n          </ic-typography>\n          <span\n            class={{\n              [\"expand-chevron\"]: true,\n              [\"content-expanded-chevron\"]: expanded && !disabled,\n            }}\n            aria-hidden=\"true\"\n            innerHTML={chevronIcon}\n          />\n        </button>\n        <div\n          class={{\n            [\"expanded-content\"]: true,\n          }}\n          aria-labelledby={`${this.accordionId}-button`}\n          role=\"region\"\n          aria-hidden={`${!expanded}`}\n          id=\"expanded-content-area\"\n          ref={(el) => (this.expandedContentEl = el)}\n        >\n          <div class=\"expanded-content-inner\">\n            <slot />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n","@import \"../../global/normalize.css\";\n\n:host {\n  display: block;\n  border-bottom: var(--ic-border-default);\n}\n\n:host(.light) ic-typography,\n:host(.light) .expanded-content,\n:host(.light) .icon-container,\n:host(.light) .expand-chevron {\n  color: var(--ic-architectural-white);\n}\n\n:host(.disabled) ic-typography,\n:host(.disabled) .icon-container,\n:host(.disabled) .expand-chevron {\n  color: var(--ic-architectural-500);\n}\n\n.section-button.small {\n  padding: var(--ic-space-xxs) var(--ic-space-xs);\n}\n\n.section-button.large {\n  padding: var(--ic-space-sm) var(--ic-space-xs);\n}\n\n:host(:first-of-type) {\n  border-top: var(--ic-border-default);\n}\n\n:focus {\n  outline: none;\n}\n\n.section-button {\n  background-color: transparent;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: var(--ic-space-xs);\n  font-weight: var(--ic-font-weight-bold);\n  border: none;\n}\n\n.section-header {\n  text-align: left;\n  flex: 1 0;\n}\n\nbutton:hover:enabled {\n  background-color: var(--ic-action-dark-bg-hover);\n  cursor: pointer;\n}\n\nbutton:active {\n  background-color: var(--ic-action-dark-bg-active);\n}\n\nbutton:focus {\n  box-shadow: var(--ic-border-focus);\n  border-radius: var(--ic-border-radius);\n  transition: var(--ic-transition-duration-fast);\n}\n\nbutton:disabled {\n  pointer-events: none;\n}\n\n.icon-container {\n  margin: 0 var(--ic-space-xs) 0 0;\n  display: flex;\n  align-items: center;\n  width: var(--ic-space-lg);\n  height: var(--ic-space-lg);\n}\n\n::slotted(svg) {\n  width: var(--ic-space-md);\n  height: var(--ic-space-md);\n}\n\n.expand-chevron {\n  width: var(--ic-space-lg);\n  height: var(--ic-space-lg);\n  margin-left: calc(var(--ic-space-xl) + var(--ic-space-xs));\n  transform: rotate(90deg);\n  justify-self: end;\n}\n\n.content-expanded-chevron {\n  transform: rotate(-90deg);\n}\n\n.expanded-content {\n  height: 0;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  visibility: var(--ic-expanded-content-visiblity, hidden);\n}\n\n.expanded-content-inner {\n  padding: var(--ic-space-xs);\n}\n\n.expanded-content-opened {\n  overflow: visible;\n}\n"],"names":["accordionIds","Accordion","accordionId","concat","toggleExpanded","_this","expanded","accordionClicked","emit","id","setAccordionAnimation","el","duration","property","delay","style","transitionDuration","transitionProperty","transitionDelay","setExpandedContentStyle","ev","expandedContent","propertyName","clientHeight","classList","add","height","hideExpandedContent","setProperty","animateExpandedContent","elementHeight","expandedContentEl","scrollHeight","addEventListener","e","remove","this","_callee","_regeneratorRuntime","wrap","_context","prev","next","accordionBtnHeading","focus","stop","_setFocus","apply","arguments","key","value","_this2","removeEventListener","_class","_class2","_class3","_this3","appearance","size","disabled","h","Host","class","_defineProperty","ref","tabindex","onClick","isSlotUsed","name","variant","heading","innerHTML","Chevron","role","get"],"sourceRoot":""}