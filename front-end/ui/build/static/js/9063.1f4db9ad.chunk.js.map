{"version":3,"file":"static/js/9063.1f4db9ad.chunk.js","mappings":"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","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-select/ic-select.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-select/ic-select.css?tag=ic-select&encapsulation=shadow"],"sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Host,\n  Method,\n  Prop,\n  h,\n  State,\n  Watch,\n} from \"@stencil/core\";\n\nimport {\n  getInputDescribedByText,\n  getLabelFromValue,\n  hasValidationStatus,\n  inheritAttributes,\n  onComponentRequiredPropUndefined,\n  renderHiddenInput,\n  isMobileOrTablet,\n  getFilteredMenuOptions,\n  addFormResetListener,\n  removeFormResetListener,\n  removeDisabledFalse,\n} from \"../../utils/helpers\";\nimport { IC_INHERITED_ARIA } from \"../../utils/constants\";\nimport {\n  IcInformationStatus,\n  IcInformationStatusOrEmpty,\n  IcThemeForegroundEnum,\n  IcMenuOption,\n  IcSearchMatchPositions,\n  IcValueEventDetail,\n} from \"../../utils/types\";\nimport Expand from \"./assets/Expand.svg\";\nimport Clear from \"./assets/Clear.svg\";\nimport { IcOptionSelectEventDetail } from \"../ic-menu/ic-menu.types\";\n\nlet inputIds = 0;\n\n@Component({\n  tag: \"ic-select\",\n  styleUrl: \"ic-select.css\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport class Select {\n  private anchorEl: HTMLElement;\n  private blurredBecauseButtonPressed: boolean;\n  private characterKeyPressTimer: number;\n  private clearButton: HTMLIcButtonElement;\n  private customSelectElement: HTMLButtonElement;\n  private debounceAria: number;\n  private hasSetDefaultValue = false;\n  private hasTimedOut: boolean;\n  private inheritedAttributes: { [k: string]: unknown } = {};\n  private initialOptionsEmpty = false;\n  private inputId = `ic-select-input-${inputIds++}`;\n  private menu: HTMLIcMenuElement;\n  private menuId = `${this.inputId}-menu`;\n  private nativeSelectElement: HTMLSelectElement;\n  private retryButtonClick: boolean;\n  private searchableMenuItemSelected: boolean = false;\n  private searchableSelectElement: HTMLInputElement;\n  private timeoutTimer: number;\n  private ungroupedOptions: IcMenuOption[] = [];\n\n  @Element() host!: HTMLIcSelectElement;\n\n  @State() ariaActiveDescendant: string;\n  @State() clearButtonFocused: boolean = false;\n  @State() debounceIcChange: number;\n  @State() hiddenInputValue: string;\n  @State() noOptions: IcMenuOption[] = null;\n  @State() open: boolean = false;\n  @State() pressedCharacters: string = \"\";\n  @State() searchableSelectInputValue: string = null;\n\n  /**\n   * @deprecated This prop should not be used anymore.\n   */\n  @Prop() charactersUntilSuggestions?: number = 0;\n\n  /**\n   * If `true`, the disabled state will be set.\n   */\n  @Prop({ reflect: true }) disabled?: boolean = false;\n\n  /**\n   * If `true`, the built in filtering will be disabled for a searchable variant. For example, if options will already be filtered from external source.\n   */\n  @Prop() disableFilter?: boolean = false;\n\n  /**\n   * The text displayed when there are no options in the option list.\n   */\n  @Prop() emptyOptionListText = \"No results found\";\n\n  /**\n   * If `true`, the select element will fill the width of the container.\n   */\n  @Prop() fullWidth: boolean = false;\n\n  /**\n   * The helper text that will be displayed for additional field guidance.\n   */\n  @Prop() helperText?: string = \"\";\n\n  /**\n   * If `true`, the label will be hidden and the required label value will be applied as an aria-label.\n   */\n  @Prop() hideLabel?: boolean = false;\n\n  /**\n   * If `true`, descriptions of options will be included when filtering options in a searchable select. Only applies to built in filtering.\n   */\n  @Prop() includeDescriptionsInSearch?: boolean = false;\n\n  /**\n   * If `true`, group titles of grouped options will be included when filtering options in a searchable select. Only applies to built in filtering.\n   */\n  @Prop() includeGroupTitlesInSearch?: boolean = false;\n\n  /**\n   * The label for the select.\n   */\n  @Prop() label!: string;\n\n  /**\n   * The message displayed when external loading times out.\n   */\n  @Prop() loadingErrorLabel?: string = \"Loading Error\";\n\n  /**\n   * The message displayed whilst the options are being loaded externally.\n   */\n  @Prop() loadingLabel?: string = \"Loading...\";\n\n  /**\n   * The name of the control, which is submitted with the form data.\n   */\n  @Prop() name?: string = this.inputId;\n\n  /**\n   * The placeholder value to be displayed.\n   */\n  @Prop() placeholder?: string = \"Select an option\";\n\n  /**\n   * If `true`, the readonly state will be set.\n   */\n  @Prop() readonly?: boolean = false;\n\n  /**\n   * If `true`, the select will require a value.\n   */\n  @Prop() required?: boolean = false;\n\n  /**\n   * If `true`, a searchable variant of the select will be displayed which can be typed in to filter options.\n   */\n  @Prop() searchable?: boolean = false;\n\n  /**\n   * Whether the search string of the searchable select should match the start of or anywhere in the options. Only applies to built in filtering.\n   */\n  @Prop() searchMatchPosition?: IcSearchMatchPositions = \"anywhere\";\n\n  /**\n   * If `true`, a button which clears the select input when clicked will be displayed. The button will always appear on the searchable select.\n   */\n  @Prop() showClearButton?: boolean = false;\n\n  /**\n   * If `true`, the small styling will be applied to the select.\n   */\n  @Prop() small?: boolean = false;\n\n  /**\n   * If using external filtering, set a timeout for when loading takes too long.\n   */\n  @Prop() timeout?: number;\n\n  /**\n   * The validation status - e.g. 'error' | 'warning' | 'success'.\n   */\n  @Prop() validationStatus?: IcInformationStatusOrEmpty = \"\";\n\n  /**\n   * The text to display as the validation message.\n   */\n  @Prop() validationText?: string = \"\";\n\n  /**\n   * If `true`, the loading state will be triggered when fetching options asyncronously.\n   */\n  @Prop({ mutable: true }) loading?: boolean = false;\n\n  @Watch(\"loading\")\n  loadingHandler(newValue: boolean): void {\n    newValue && this.triggerLoading();\n  }\n\n  /**\n   * The possible selection options.\n   */\n  @Prop() options?: IcMenuOption[] = [];\n  @State() filteredOptions: IcMenuOption[] = this.options;\n  @State() uniqueOptions: IcMenuOption[] = this.options;\n\n  @Watch(\"options\")\n  watchOptionsHandler(): void {\n    if (!this.hasTimedOut) {\n      this.loading = false;\n      clearTimeout(this.timeoutTimer);\n      if (this.isExternalFiltering()) {\n        if (this.options.length > 0) {\n          this.setOptionsValuesFromLabels();\n          this.noOptions = null;\n          this.uniqueOptions = this.deduplicateOptions(this.options);\n          this.filteredOptions = this.uniqueOptions;\n        } else {\n          this.noOptions = [{ label: this.emptyOptionListText, value: \"\" }];\n          this.uniqueOptions = this.noOptions;\n          this.filteredOptions = this.noOptions;\n        }\n        this.updateSearchableSelectResultAriaLive();\n        this.setDefaultValue();\n      } else {\n        this.setOptionsValuesFromLabels();\n        this.uniqueOptions = this.deduplicateOptions(this.options);\n        this.filteredOptions = this.uniqueOptions;\n        if (this.initialOptionsEmpty) {\n          this.setDefaultValue();\n          this.initialOptionsEmpty = false;\n        }\n      }\n    } else {\n      if (!this.searchable) this.options = this.noOptions;\n    }\n  }\n\n  /**\n   * The amount of time, in milliseconds, to wait to trigger the `icChange` event after each keystroke.\n   */\n  @Prop() debounce?: number = 0;\n  @State() currDebounce = this.debounce;\n\n  @Watch(\"debounce\")\n  debounceChangedHandler(newValue: number): void {\n    this.updateOnChangeDebounce(newValue);\n  }\n\n  /**\n   * The value of the select, reflected by the value of the currently selected option. For the searchable variant, the value is also reflected by the user input.\n   */\n  @Prop({ mutable: true }) value?: string;\n  @State() initialValue = this.value;\n  @State() inputValueToFilter = this.value;\n  @State() currValue = this.value;\n\n  @Watch(\"value\")\n  valueChangedHandler(): void {\n    if (this.value !== this.currValue) {\n      this.currValue = this.value;\n    }\n\n    if (this.searchable) {\n      this.searchableSelectInputValue =\n        this.getLabelFromValue(this.currValue) || this.currValue;\n    }\n  }\n\n  /**\n   * Emitted when the select loses focus.\n   */\n  @Event() icBlur!: EventEmitter<void>;\n\n  /**\n   * Emitted when the value changes.\n   */\n  @Event() icChange!: EventEmitter<IcValueEventDetail>;\n\n  /**\n   * Emitted when the clear button is clicked.\n   */\n  @Event() icClear!: EventEmitter<void>;\n\n  /**\n   * Emitted when the select gains focus.\n   */\n  @Event() icFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when a keyboard input occurred.\n   */\n  @Event() icInput: EventEmitter<IcValueEventDetail>;\n\n  /**\n   * Emitted when an option is highlighted within the menu.\n   * Highlighting a menu item will also trigger an `icChange/onIcChange` due to the value being updated.\n   */\n  @Event() icOptionSelect: EventEmitter<IcOptionSelectEventDetail>;\n\n  /**\n   * Emitted when the 'retry loading' button is clicked for a searchable variant.\n   */\n  @Event() icRetryLoad: EventEmitter<IcValueEventDetail>;\n\n  disconnectedCallback(): void {\n    removeFormResetListener(this.host, this.handleFormReset);\n  }\n\n  componentWillLoad(): void {\n    this.inheritedAttributes = inheritAttributes(this.host, [\n      ...IC_INHERITED_ARIA,\n      \"tabindex\",\n      \"title\",\n    ]);\n\n    removeDisabledFalse(this.disabled, this.host);\n\n    this.setOptionsValuesFromLabels();\n\n    addFormResetListener(this.host, this.handleFormReset);\n\n    if (!this.options.length) {\n      this.initialOptionsEmpty = true;\n    } else {\n      this.setDefaultValue();\n      this.uniqueOptions = this.deduplicateOptions(this.options);\n    }\n  }\n\n  componentDidLoad(): void {\n    onComponentRequiredPropUndefined(\n      [{ prop: this.label, propName: \"label\" }],\n      \"Select\"\n    );\n\n    if (this.loading) {\n      this.triggerLoading();\n    }\n    this.hiddenInputValue = this.searchable && this.currValue;\n  }\n\n  componentDidRender(): void {\n    if (this.nativeSelectElement && !this.disabled) {\n      this.setTextColor();\n    }\n  }\n\n  /**\n   * Sets focus on the input box.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    if (this.nativeSelectElement) {\n      this.nativeSelectElement.focus();\n    } else if (this.customSelectElement) {\n      this.customSelectElement.focus();\n    } else if (this.searchableSelectElement) {\n      this.searchableSelectElement.focus();\n    }\n  }\n\n  private handleRetry = (ev: CustomEvent<IcValueEventDetail>) => {\n    if (ev.detail.keyPressed) this.searchableSelectElement?.focus();\n    this.blurredBecauseButtonPressed = true;\n    this.retryButtonClick = true;\n    this.hasSetDefaultValue = true;\n    this.icRetryLoad.emit({ value: this.hiddenInputValue });\n  };\n\n  private updateOnChangeDebounce(newValue: number) {\n    if (this.currDebounce !== newValue) {\n      this.currDebounce = newValue;\n    }\n  }\n\n  private emitIcChange = (value: string) => {\n    if (!this.searchable) {\n      this.value = value;\n    }\n\n    clearTimeout(this.debounceIcChange);\n    this.debounceIcChange = window.setTimeout(() => {\n      this.icChange.emit({ value: value });\n    }, this.currDebounce);\n  };\n\n  private emitImmediateIcChange = (value: string) => {\n    this.value = value;\n    clearTimeout(this.debounceIcChange);\n    this.icChange.emit({ value: value });\n  };\n\n  /**\n   * Processes the provided array of IcMenuOptions, removing duplicates and reporting them with a console.warn\n   * @param options array of IcMenuOptions\n   * @returns a new options object, with all entries possessing a duplicate 'value' field removed\n   */\n  private deduplicateOptions = (options: IcMenuOption[]): IcMenuOption[] => {\n    const uniqueValues: string[] = [];\n    const dedupedOptions: IcMenuOption[] = [];\n    let dedupedChildren: IcMenuOption[];\n\n    options.forEach((option: IcMenuOption) => {\n      if (option.children) {\n        //If an option has children, we will loop through them\n        dedupedChildren = [];\n        option.children.forEach((child) => {\n          if (uniqueValues.includes(child.value)) {\n            console.warn(\n              `ic-select with label ${this.label} was populated with duplicate option (value: ${child.value}) which has been removed.`\n            );\n          } else {\n            uniqueValues.push(child.value);\n            dedupedChildren.push(child);\n          }\n        });\n        // construct a modified option, inserting the deduplicated children alongside the original information\n        const modifiedParent: IcMenuOption = {\n          ...option,\n          children: dedupedChildren,\n        };\n        dedupedOptions.push(modifiedParent);\n      } else {\n        // If an option does not have children, assess to see if it's value has been included already\n        if (uniqueValues.includes(option.value)) {\n          console.warn(\n            `ic-select with label ${this.label} was populated with duplicate option (value: ${option.value}) which has been removed.`\n          );\n        } else {\n          uniqueValues.push(option.value);\n          dedupedOptions.push(option);\n        }\n      }\n    });\n    return dedupedOptions;\n  };\n\n  /**\n   * Loop through options array and for all options with no value, infer it from the label\n   */\n  private setOptionsValuesFromLabels = (): void => {\n    if (this.options.length > 0 && this.options.map) {\n      this.options.map((option) => {\n        if (!option.value) {\n          option.value = option.label;\n        }\n      });\n    }\n  };\n\n  private setUngroupedOptions = (event: CustomEvent): void => {\n    this.ungroupedOptions = event.detail.options;\n  };\n\n  private setTextColor = (): void => {\n    if (this.nativeSelectElement.selectedIndex === 0) {\n      this.nativeSelectElement.className = \"placeholder\";\n    } else {\n      this.nativeSelectElement.className = \"select-option-selected\";\n    }\n  };\n\n  private setMenuChange = (open: boolean) => {\n    if (this.open !== open) {\n      this.open = open;\n    }\n  };\n\n  private getLabelFromValue = (value: string): string | undefined => {\n    return getLabelFromValue(value, this.uniqueOptions);\n  };\n\n  private getFilteredChildMenuOptions = (option: IcMenuOption) => {\n    let children = option.children;\n\n    if (this.searchable) {\n      children = getFilteredMenuOptions(\n        option.children,\n        this.includeDescriptionsInSearch,\n        this.searchableSelectInputValue,\n        this.searchMatchPosition\n      );\n    } else {\n      children = getFilteredMenuOptions(\n        option.children,\n        false,\n        this.pressedCharacters,\n        \"start\"\n      );\n    }\n\n    const newOption = { ...option };\n    newOption.children = children;\n    return newOption;\n  };\n\n  private handleNativeSelectChange = (): void => {\n    this.icOptionSelect.emit({ value: this.nativeSelectElement.value });\n    this.emitImmediateIcChange(this.nativeSelectElement.value);\n    this.setTextColor();\n  };\n\n  private handleCustomSelectChange = (event: CustomEvent): void => {\n    if (this.searchable && event.detail.label === this.emptyOptionListText) {\n      this.searchableSelectElement.focus();\n      return;\n    }\n\n    if (this.searchable) {\n      this.value = event.detail.value;\n      this.searchableMenuItemSelected = true;\n\n      // After editing the input, if selecting the same option as before, set the input value to label again\n      if (this.value === this.currValue) {\n        this.searchableSelectInputValue = this.getLabelFromValue(this.value);\n      }\n\n      this.inputValueToFilter = null;\n      this.hiddenInputValue = this.getValueFromLabel(\n        this.searchableSelectInputValue\n      );\n    }\n\n    this.ariaActiveDescendant = event.detail.optionId;\n    this.icOptionSelect.emit({ value: event.detail.value });\n    this.emitIcChange(event.detail.value);\n  };\n\n  private handleMenuChange = (event: CustomEvent): void => {\n    this.open = event.detail.open;\n    this.pressedCharacters = \"\";\n\n    this.searchable && this.handleFocusIndicatorDisplay();\n  };\n\n  // clears the debounce delay when navigating the menu with arrow keys etc\n  // to prevent delay in change event, which should only occur when typing in input\n  private handleMenuKeyPress = (ev: CustomEvent): void => {\n    ev.cancelBubble = true;\n    this.handleCharacterKeyDown(ev.detail.key);\n  };\n\n  private handleMenuValueChange = (ev: CustomEvent): void => {\n    this.value = ev.detail.value;\n  };\n\n  private handleFocusIndicatorDisplay = () => {\n    const focusIndicator =\n      this.host.shadowRoot.querySelector(\".focus-indicator\");\n\n    if (this.open) {\n      focusIndicator.classList.add(\"focus-indicator-enabled\");\n    } else {\n      focusIndicator.classList.remove(\"focus-indicator-enabled\");\n    }\n  };\n\n  private handleMouseDown = (event: Event): void => {\n    if (!this.open) {\n      event.preventDefault();\n    }\n  };\n\n  private isExternalFiltering = (): boolean =>\n    this.searchable && this.disableFilter;\n\n  private handleClick = (event: MouseEvent): void => {\n    if (!this.open) {\n      if (this.isExternalFiltering()) {\n        this.menu.options = this.filteredOptions;\n      } else if (\n        !this.hasTimedOut &&\n        !this.loading &&\n        (!this.searchable || this.searchableMenuItemSelected)\n      ) {\n        this.noOptions = null;\n        this.menu.options = this.uniqueOptions;\n      }\n    }\n\n    if (event.detail !== 0) {\n      this.menu.handleClickOpen();\n    }\n  };\n\n  private handleExpandIconMouseDown = (event: MouseEvent) => {\n    if (!this.disabled) {\n      event.preventDefault();\n      this.searchableSelectElement.focus();\n      this.handleClick(event);\n    }\n  };\n\n  private handleClear = (event: Event): void => {\n    event.stopPropagation();\n    this.hasTimedOut = false;\n    clearTimeout(this.timeoutTimer);\n    this.noOptions = null;\n    this.emitImmediateIcChange(null);\n    this.icClear.emit();\n\n    if (this.searchable) {\n      this.searchableSelectElement.value = null;\n      this.searchableSelectInputValue = null;\n      this.filteredOptions = this.uniqueOptions;\n      this.hiddenInputValue = null;\n      this.searchableSelectElement.focus();\n    } else {\n      this.customSelectElement.focus();\n    }\n  };\n\n  private handleCharacterKeyDown = (key: string) => {\n    // Only close menu when space is pressed if not being used alongside character keys to quickly select options\n    if (\n      this.open &&\n      key === \" \" &&\n      this.pressedCharacters.length === 0 &&\n      !this.hasTimedOut &&\n      !this.loading\n    ) {\n      this.setMenuChange(false);\n    }\n\n    if (key.length === 1 && !this.searchable) {\n      window.clearTimeout(this.characterKeyPressTimer);\n      this.characterKeyPressTimer = window.setTimeout(\n        () => (this.pressedCharacters = \"\"),\n        1000\n      );\n\n      this.pressedCharacters += key;\n      this.handleFilter();\n\n      if (!this.noOptions) {\n        this.emitImmediateIcChange(this.filteredOptions[0].value);\n      }\n    } else {\n      this.pressedCharacters = \"\";\n    }\n  };\n\n  private handleNativeSelectKeyDown = (event: KeyboardEvent) => {\n    if ((event.key !== \"Escape\" && event.key !== \"Tab\") || this.open) {\n      event.cancelBubble = true;\n    }\n    this.handleCharacterKeyDown(event.key);\n  };\n\n  private handleKeyDown = (event: KeyboardEvent): void => {\n    if ((event.key !== \"Escape\" && event.key !== \"Tab\") || this.open) {\n      event.cancelBubble = true;\n    }\n    const isArrowKey = event.key === \"ArrowDown\" || event.key === \"ArrowUp\";\n\n    if (!this.open) {\n      if (this.isExternalFiltering() && (event.key === \"Enter\" || isArrowKey)) {\n        this.menu.options = this.filteredOptions;\n      } else {\n        if (!this.hasTimedOut) {\n          this.noOptions = null;\n          this.menu.options = this.uniqueOptions;\n        }\n      }\n    }\n\n    if (this.open && event.key === \"Enter\") {\n      this.setMenuChange(false);\n    } else {\n      if (!(isArrowKey && this.noOptions !== null)) {\n        if (!(event.key === \" \" && this.pressedCharacters.length > 0)) {\n          // Keyboard events get passed onto ic-menu\n          this.menu.handleKeyboardOpen(event);\n        }\n        this.handleCharacterKeyDown(event.key);\n      }\n    }\n  };\n\n  private handleClearButtonFocus = (): void => {\n    this.clearButtonFocused = true;\n  };\n\n  private handleClearButtonBlur = (ev: FocusEvent): void => {\n    const retryButton = this.menu?.querySelector(\"#retry-button\");\n    if (\n      !(\n        this.searchableSelectElement &&\n        ev.relatedTarget === this.searchableSelectElement\n      ) &&\n      !(retryButton && ev.relatedTarget === retryButton)\n    ) {\n      this.setMenuChange(false);\n      this.handleFocusIndicatorDisplay();\n    }\n    this.clearButtonFocused = false;\n  };\n\n  private handleFilter = (): void => {\n    const options = this.deduplicateOptions(\n      this.searchable ? [...this.uniqueOptions] : this.ungroupedOptions\n    );\n\n    let isGrouped = false;\n    let newFilteredOptions: IcMenuOption[] = [];\n\n    options.map((option) => {\n      if (option.children) isGrouped = true;\n    });\n\n    let menuOptionsFiltered: IcMenuOption[];\n\n    if (this.searchable) {\n      menuOptionsFiltered = getFilteredMenuOptions(\n        options,\n        this.includeDescriptionsInSearch,\n        this.inputValueToFilter,\n        this.searchMatchPosition\n      );\n      this.searchableMenuItemSelected = false;\n    } else {\n      menuOptionsFiltered = getFilteredMenuOptions(\n        options,\n        false,\n        this.pressedCharacters,\n        \"start\"\n      );\n    }\n\n    if (!isGrouped) {\n      newFilteredOptions = menuOptionsFiltered;\n    } else {\n      options.map((option) => {\n        if (this.includeGroupTitlesInSearch) {\n          if (menuOptionsFiltered.indexOf(option) !== -1) {\n            newFilteredOptions.push(option);\n          } else {\n            newFilteredOptions.push(this.getFilteredChildMenuOptions(option));\n          }\n        } else {\n          newFilteredOptions.push(this.getFilteredChildMenuOptions(option));\n        }\n      });\n    }\n\n    let noChildOptionsWhenFiltered = false;\n\n    if (isGrouped) {\n      noChildOptionsWhenFiltered = true;\n      newFilteredOptions.map((option) => {\n        if (option.children.length > 0) {\n          noChildOptionsWhenFiltered = false;\n        }\n      });\n    }\n\n    const noOptions = [{ label: this.emptyOptionListText, value: \"\" }];\n\n    if (newFilteredOptions.length > 0 && !noChildOptionsWhenFiltered) {\n      this.noOptions = null;\n      this.filteredOptions = newFilteredOptions;\n    } else {\n      this.noOptions = noOptions;\n      this.filteredOptions = this.noOptions;\n    }\n  };\n\n  /**\n   * Put the select component into loading state.\n   * Replace options with the loading message. If timeout is enabled, set the timeout and once passed, replace options with the loading error message\n   */\n  private triggerLoading = () => {\n    this.hasTimedOut = false;\n    this.noOptions = [{ label: this.loadingLabel, value: \"\", loading: true }];\n    if (this.filteredOptions !== this.noOptions && this.searchable) {\n      this.filteredOptions = this.noOptions;\n    } else if (this.uniqueOptions !== this.noOptions && !this.searchable) {\n      this.uniqueOptions = this.noOptions;\n    }\n    if (this.timeout) {\n      this.timeoutTimer = window.setTimeout(() => {\n        this.loading = false;\n        this.hasTimedOut = true;\n        this.noOptions = [\n          { label: this.loadingErrorLabel, value: \"\", timedOut: true },\n        ];\n        this.filteredOptions = this.noOptions;\n        if (!this.searchable) this.uniqueOptions = this.noOptions;\n      }, this.timeout);\n    }\n  };\n\n  private getValueFromLabel = (label: string): string | undefined => {\n    return this.uniqueOptions.find((option) => option.label === label)?.value;\n  };\n\n  private handleSearchableSelectInput = (event: Event): void => {\n    this.searchableSelectInputValue = (event.target as HTMLInputElement).value;\n    this.icInput.emit({ value: this.searchableSelectInputValue });\n    this.emitIcChange(this.searchableSelectInputValue);\n\n    this.hiddenInputValue = this.searchableSelectInputValue;\n    this.inputValueToFilter = this.searchableSelectInputValue;\n    this.setMenuChange(true);\n\n    if (!this.disableFilter) {\n      this.handleFilter();\n      this.debounceAriaLiveUpdate();\n    }\n  };\n\n  private updateSearchableSelectResultAriaLive = (): void => {\n    const searchableSelectResultsStatusEl = this.host.shadowRoot.querySelector(\n      \".searchable-select-results-status\"\n    ) as HTMLDivElement;\n\n    if (searchableSelectResultsStatusEl) {\n      if (this.noOptions !== null) {\n        searchableSelectResultsStatusEl.innerText = this.emptyOptionListText;\n      } else {\n        searchableSelectResultsStatusEl.innerText = \"\";\n      }\n    }\n  };\n\n  private debounceAriaLiveUpdate() {\n    clearTimeout(this.debounceAria);\n\n    window.setTimeout(() => {\n      this.updateSearchableSelectResultAriaLive();\n    }, 800);\n  }\n\n  private getDefaultValue = (value: string): string | null =>\n    this.getLabelFromValue(value) || value || null;\n\n  private setDefaultValue() {\n    if (!this.hasSetDefaultValue && this.currValue) {\n      this.searchableSelectInputValue = this.getDefaultValue(this.currValue);\n      this.initialValue = this.currValue;\n      this.hasSetDefaultValue = true;\n    }\n  }\n\n  private onFocus = (): void => {\n    this.icFocus.emit();\n  };\n\n  private onBlur = (event: FocusEvent): void => {\n    const target = event.relatedTarget as HTMLElement;\n    if (\n      target !== null &&\n      target.tagName === \"UL\" &&\n      target.className.includes(\"menu\")\n    ) {\n      return;\n    }\n\n    const retryButton = this.menu?.querySelector(\"#retry-button\");\n    const isSearchableAndNoFocusedInternalElements =\n      this.searchable &&\n      event.relatedTarget !== this.menu &&\n      !Array.from(this.menu.querySelectorAll(\"[role='option']\")).includes(\n        event.relatedTarget as Element\n      ) &&\n      !(this.clearButton && event.relatedTarget === this.clearButton) &&\n      !(retryButton && event.relatedTarget === retryButton);\n\n    if (isSearchableAndNoFocusedInternalElements) {\n      if (!this.retryButtonClick) {\n        this.setMenuChange(false);\n      }\n      this.handleFocusIndicatorDisplay();\n    }\n\n    this.retryButtonClick = false;\n    this.icBlur.emit();\n  };\n\n  private onTimeoutBlur = (ev: CustomEvent) => {\n    if (\n      (ev.detail.ev as FocusEvent).relatedTarget !==\n        this.searchableSelectElement &&\n      !this.blurredBecauseButtonPressed\n    ) {\n      this.setMenuChange(false);\n      this.handleFocusIndicatorDisplay();\n      this.icBlur.emit();\n    }\n    this.blurredBecauseButtonPressed = false;\n  };\n\n  private handleFormReset = (): void => {\n    this.value = this.initialValue;\n    if (this.searchable) {\n      this.searchableSelectInputValue = this.getDefaultValue(this.value);\n      this.hiddenInputValue = this.value;\n    }\n  };\n\n  render() {\n    const {\n      small,\n      disabled,\n      fullWidth,\n      helperText,\n      hideLabel,\n      label,\n      menuId,\n      name,\n      options,\n      placeholder,\n      readonly,\n      required,\n      searchable,\n      showClearButton,\n      validationStatus,\n      validationText,\n      currValue,\n    } = this;\n\n    const noOptionSelect =\n      searchable &&\n      (this.loading ||\n        this.hasTimedOut ||\n        (this.noOptions !== null &&\n          this.noOptions[0] &&\n          this.noOptions[0].label === this.emptyOptionListText));\n    const inputValue = this.searchable ? this.hiddenInputValue : currValue;\n\n    renderHiddenInput(true, this.host, name, inputValue, disabled);\n\n    const invalid =\n      validationStatus === IcInformationStatus.Error ? \"true\" : \"false\";\n\n    const describedBy = getInputDescribedByText(\n      this.inputId,\n      helperText !== \"\",\n      hasValidationStatus(this.validationStatus, this.disabled)\n    ).trim();\n\n    return (\n      <Host\n        class={{\n          disabled: disabled,\n          searchable: searchable,\n          small: small,\n          \"full-width\": fullWidth,\n        }}\n        onBlur={this.onBlur}\n      >\n        <ic-input-container readonly={readonly}>\n          {!hideLabel && (\n            <ic-input-label\n              for={this.inputId}\n              label={label}\n              helperText={helperText}\n              required={required}\n              disabled={disabled}\n              readonly={readonly}\n            ></ic-input-label>\n          )}\n          <ic-input-component-container\n            ref={(el) => (this.anchorEl = el)}\n            class={{ \"menu-open\": this.open }}\n            small={small}\n            fullWidth={fullWidth}\n            disabled={disabled}\n            readonly={readonly}\n            validationStatus={validationStatus}\n          >\n            {readonly ? (\n              <ic-typography>\n                <p>{this.getLabelFromValue(currValue)}</p>\n              </ic-typography>\n            ) : isMobileOrTablet() ? (\n              <select\n                ref={(el) => (this.nativeSelectElement = el)}\n                disabled={disabled}\n                onChange={this.handleNativeSelectChange}\n                required={required}\n                id={this.inputId}\n                aria-label={label}\n                aria-describedby={describedBy}\n                aria-invalid={invalid}\n                onBlur={this.onBlur}\n                onFocus={this.onFocus}\n                onKeyDown={this.handleNativeSelectKeyDown}\n                {...this.inheritedAttributes}\n              >\n                <option value=\"\" selected disabled={!showClearButton}>\n                  {placeholder}\n                </option>\n                {options.map((option) => {\n                  if (option.children) {\n                    return (\n                      <optgroup label={option.label}>\n                        {option.children.map((option) => (\n                          <option\n                            value={option.value}\n                            disabled={option.disabled}\n                            selected={option.value === currValue}\n                          >\n                            {option.label}\n                          </option>\n                        ))}\n                      </optgroup>\n                    );\n                  } else {\n                    return (\n                      <option\n                        value={option.value}\n                        disabled={option.disabled}\n                        selected={option.value === currValue}\n                      >\n                        {option.label}\n                      </option>\n                    );\n                  }\n                })}\n              </select>\n            ) : searchable ? (\n              <div class=\"searchable-select-container\">\n                <input\n                  class=\"select-input\"\n                  role=\"combobox\"\n                  autocomplete=\"off\"\n                  aria-label={label}\n                  aria-describedby={describedBy}\n                  aria-activedescendant={this.ariaActiveDescendant}\n                  aria-autocomplete=\"list\"\n                  aria-expanded={this.open ? \"true\" : \"false\"}\n                  aria-invalid={invalid}\n                  aria-required={required ? \"true\" : \"false\"}\n                  aria-controls={menuId}\n                  ref={(el) => (this.searchableSelectElement = el)}\n                  id={this.inputId}\n                  value={this.searchableSelectInputValue}\n                  placeholder={placeholder}\n                  disabled={disabled}\n                  onInput={this.handleSearchableSelectInput}\n                  onClick={this.handleClick}\n                  onKeyDown={this.handleKeyDown}\n                  onFocus={this.onFocus}\n                  onBlur={this.onBlur}\n                ></input>\n                {this.searchableSelectInputValue &&\n                  (showClearButton || searchable) && (\n                    <div class=\"clear-button-container\">\n                      <ic-button\n                        id=\"clear-button\"\n                        ref={(el) => (this.clearButton = el)}\n                        aria-label={\n                          this.searchableSelectInputValue && currValue === null\n                            ? \"Clear input\"\n                            : \"Clear selection\"\n                        }\n                        class=\"clear-button\"\n                        innerHTML={Clear}\n                        onClick={this.handleClear}\n                        onFocus={this.handleClearButtonFocus}\n                        onBlur={this.handleClearButtonBlur}\n                        size={small ? \"small\" : \"default\"}\n                        variant=\"icon\"\n                        appearance={\n                          this.clearButtonFocused\n                            ? IcThemeForegroundEnum.Light\n                            : IcThemeForegroundEnum.Dark\n                        }\n                      ></ic-button>\n                      <div class=\"divider\"></div>\n                    </div>\n                  )}\n                <span\n                  onMouseDown={this.handleExpandIconMouseDown}\n                  class={{\n                    \"expand-icon\": true,\n                    \"expand-icon-open\": this.open,\n                    \"expand-icon-filled\": !(\n                      currValue == null || currValue === \"\"\n                    ),\n                  }}\n                  innerHTML={Expand}\n                  aria-hidden=\"true\"\n                />\n                <div\n                  aria-live=\"polite\"\n                  role=\"status\"\n                  class=\"searchable-select-results-status\"\n                ></div>\n              </div>\n            ) : (\n              <div class=\"select-container\">\n                <button\n                  class=\"select-input\"\n                  ref={(el) => (this.customSelectElement = el)}\n                  id={this.inputId}\n                  aria-label={`${label}, ${\n                    this.getLabelFromValue(currValue) || placeholder\n                  }${required ? \", required\" : \"\"}`}\n                  aria-describedby={describedBy}\n                  aria-invalid={invalid}\n                  aria-haspopup=\"listbox\"\n                  aria-expanded={this.open ? \"true\" : \"false\"}\n                  aria-owns={menuId}\n                  aria-controls={menuId}\n                  disabled={disabled}\n                  onBlur={this.onBlur}\n                  onFocus={this.onFocus}\n                  onClick={this.handleClick}\n                  onMouseDown={this.handleMouseDown}\n                  onKeyDown={this.handleKeyDown}\n                >\n                  <ic-typography\n                    variant=\"body\"\n                    class={{\n                      \"value-text\": true,\n                      placeholder:\n                        this.getLabelFromValue(currValue) === undefined,\n                    }}\n                  >\n                    <p>{this.getLabelFromValue(currValue) || placeholder}</p>\n                  </ic-typography>\n                  <div class=\"select-input-end\">\n                    {currValue && showClearButton && (\n                      <div class=\"divider\"></div>\n                    )}\n                    <span\n                      class={{\n                        \"expand-icon\": true,\n                        \"expand-icon-open\": this.open,\n                        \"expand-icon-filled\": !(\n                          currValue == null || currValue === \"\"\n                        ),\n                      }}\n                      innerHTML={Expand}\n                      aria-hidden=\"true\"\n                    />\n                  </div>\n                </button>\n                {currValue && showClearButton && (\n                  <ic-button\n                    id=\"clear-button\"\n                    aria-label=\"Clear selection\"\n                    class=\"clear-button\"\n                    innerHTML={Clear}\n                    onClick={this.handleClear}\n                    onFocus={this.handleClearButtonFocus}\n                    onBlur={this.handleClearButtonBlur}\n                    size={small ? \"small\" : \"default\"}\n                    variant=\"icon\"\n                    appearance={\n                      this.clearButtonFocused\n                        ? IcThemeForegroundEnum.Light\n                        : IcThemeForegroundEnum.Dark\n                    }\n                  ></ic-button>\n                )}\n              </div>\n            )}\n          </ic-input-component-container>\n          {!isMobileOrTablet() && (\n            <ic-menu\n              class={{\n                \"no-results\": noOptionSelect,\n              }}\n              ref={(el) => (this.menu = el)}\n              inputEl={\n                searchable\n                  ? this.searchableSelectElement\n                  : this.customSelectElement\n              }\n              inputLabel={label}\n              anchorEl={this.anchorEl}\n              small={small}\n              menuId={menuId}\n              open={this.open}\n              options={searchable ? this.filteredOptions : this.uniqueOptions}\n              value={currValue}\n              fullWidth={fullWidth}\n              onMenuStateChange={this.handleMenuChange}\n              onMenuOptionSelect={this.handleCustomSelectChange}\n              onMenuKeyPress={this.handleMenuKeyPress}\n              onMenuValueChange={this.handleMenuValueChange}\n              onUngroupedOptionsSet={this.setUngroupedOptions}\n              onRetryButtonClicked={this.handleRetry}\n              parentEl={this.host}\n              onTimeoutBlur={this.onTimeoutBlur}\n              activationType={this.searchable ? \"manual\" : \"automatic\"}\n            ></ic-menu>\n          )}\n          {hasValidationStatus(this.validationStatus, this.disabled) && (\n            <ic-input-validation\n              class={{ \"menu-open\": this.open }}\n              ariaLiveMode=\"polite\"\n              status={validationStatus}\n              message={validationText}\n              for={this.inputId}\n            ></ic-input-validation>\n          )}\n        </ic-input-container>\n      </Host>\n    );\n  }\n}\n","@import \"../../global/normalize.css\";\n\n/**\n * @prop --input-width: Width of the input field\n * @prop --ic-z-index-menu: z-index of select menu\n */\n\n:host {\n  position: relative;\n}\n\n:host(.full-width) {\n  width: 100%;\n}\n\nic-input-component-container:hover {\n  --border-color: var(--ic-action-dark-hover);\n}\n\nic-input-component-container:active {\n  --border-color: var(--ic-action-dark-active);\n\n  color: var(--ic-action-dark-active);\n}\n\nic-input-component-container.menu-open {\n  --border-color: var(--ic-architectural-400);\n\n  color: var(--ic-action-dark);\n}\n\nic-input-validation .status-icon,\nic-input-validation .statustext {\n  visibility: visible;\n}\n\nic-input-validation.menu-open .status-icon,\nic-input-validation.menu-open .statustext {\n  visibility: hidden;\n  transition: visibility 0s;\n}\n\nic-input-label {\n  margin-bottom: var(--ic-space-xs) !important;\n}\n\nselect {\n  border: 0;\n  border-radius: var(--ic-border-radius);\n  background-color: var(--ic-architectural-white);\n  color: var(--ic-color-primary-text);\n  line-height: 1.5rem;\n  letter-spacing: 0.005rem;\n  width: 100%;\n  height: 100%;\n  padding-left: 0.375rem;\n  appearance: none;\n  background-repeat: no-repeat;\n  background-position: right 0.375rem center;\n  background-image: url(\"data:image/svg+xml;utf8,<svg fill='black' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>\");\n}\n\nselect option,\n.select-option-selected {\n  color: var(--ic-color-primary-text);\n}\n\nselect:disabled {\n  color: var(--ic-architectural-200);\n  background-image: url(\"data:image/svg+xml;utf8,<svg fill='grey' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>\");\n}\n\nselect:focus {\n  border: 0;\n  outline: 0;\n}\n\nselect:not([disabled]) {\n  cursor: pointer;\n}\n\n.select-container {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  position: relative;\n}\n\n.select-input {\n  width: 100%;\n  height: 100%;\n  padding: 0 0.375rem;\n  display: flex;\n  cursor: pointer;\n  align-items: center;\n  justify-content: space-between;\n  background: none;\n  border: none;\n}\n\n.select-input:focus {\n  outline: var(--ic-hc-focus-outline);\n}\n\n:host(:not(.disabled)) ic-input-component-container:hover .select-input {\n  background-color: var(--ic-architectural-white);\n}\n\n.select-input[disabled] {\n  pointer-events: none;\n}\n\n:host(.searchable) .select-input {\n  cursor: auto;\n}\n\n.searchable-select-container {\n  align-items: center;\n  display: flex;\n  width: 100%;\n  position: relative;\n}\n\n.expand-icon {\n  height: var(--ic-space-lg);\n  padding-left: var(--ic-space-xs);\n  color: var(--ic-action-dark);\n}\n\n.expand-icon > svg {\n  display: inline-block;\n  width: var(--ic-space-lg);\n  height: var(--ic-space-lg);\n}\n\n:host(.disabled) .expand-icon,\n:host(.disabled) .expand-icon > svg > path {\n  color: var(--ic-architectural-200);\n}\n\n:host(.searchable) .expand-icon {\n  padding-left: var(--ic-space-xxs);\n  height: 2.25rem;\n}\n\n:host(.searchable) .expand-icon > svg {\n  height: 2.25rem;\n  padding: 0 0.375rem;\n}\n\n:host(.searchable:not(.disabled)) .expand-icon > svg {\n  cursor: pointer;\n}\n\n.expand-icon-open {\n  color: var(--ic-action-dark);\n}\n\n.expand-icon-filled {\n  color: var(--ic-action-dark);\n}\n\n.expand-icon-open,\n:host(.searchable) .expand-icon-open {\n  transform: rotateX(180deg);\n}\n\n:host(.disabled) .value-text,\n.placeholder {\n  color: var(--ic-color-tertiary-text);\n}\n\n.select-input-end {\n  display: flex;\n  align-items: center;\n}\n\n.clear-button-container {\n  display: flex;\n  gap: var(--ic-space-xxs);\n  padding-left: 2.375rem;\n}\n\n:host(.small) .clear-button-container {\n  padding-left: 1.875rem;\n}\n\n.divider {\n  width: var(--ic-space-1px);\n  background-color: var(--ic-architectural-400);\n  margin: var(--ic-space-xxs) 0;\n  border-radius: var(--ic-space-1px);\n  height: var(--ic-space-lg);\n}\n\n:host(.small) .divider {\n  height: var(--ic-space-md);\n}\n\n.clear-button {\n  position: absolute;\n  right: 2.75rem;\n  border-radius: var(--ic-border-radius);\n  transition: box-shadow var(--ic-easing-transition),\n    border-radius var(--ic-easing-transition);\n}\n\n.clear-button:focus {\n  background-color: var(--ic-focus-blue);\n  box-shadow: inset 0 0 0 0.125rem var(--ic-focus-glow);\n  border-radius: 0.25rem;\n}\n\n.clear-button:focus * {\n  fill: white;\n}\n\n.searchable-select-results-status {\n  border: 0;\n  clip: rect(0, 0, 0, 0, 0);\n  height: var(--ic-space-1px);\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: var(--ic-space-1px);\n}\n"],"names":["inputIds","Select","hasSetDefaultValue","inheritedAttributes","initialOptionsEmpty","inputId","concat","menuId","this","searchableMenuItemSelected","ungroupedOptions","handleRetry","ev","detail","keyPressed","_a","_this","searchableSelectElement","focus","blurredBecauseButtonPressed","retryButtonClick","icRetryLoad","emit","value","hiddenInputValue","emitIcChange","searchable","clearTimeout","debounceIcChange","window","setTimeout","icChange","currDebounce","emitImmediateIcChange","deduplicateOptions","options","dedupedChildren","uniqueValues","dedupedOptions","forEach","option","children","child","includes","console","warn","label","push","modifiedParent","Object","assign","setOptionsValuesFromLabels","length","map","setUngroupedOptions","event","setTextColor","nativeSelectElement","selectedIndex","className","setMenuChange","open","getLabelFromValue","uniqueOptions","getFilteredChildMenuOptions","getFilteredMenuOptions","includeDescriptionsInSearch","searchableSelectInputValue","searchMatchPosition","pressedCharacters","newOption","handleNativeSelectChange","icOptionSelect","handleCustomSelectChange","emptyOptionListText","currValue","inputValueToFilter","getValueFromLabel","ariaActiveDescendant","optionId","handleMenuChange","handleFocusIndicatorDisplay","handleMenuKeyPress","cancelBubble","handleCharacterKeyDown","key","handleMenuValueChange","focusIndicator","host","shadowRoot","querySelector","classList","add","remove","handleMouseDown","preventDefault","isExternalFiltering","disableFilter","handleClick","menu","filteredOptions","hasTimedOut","loading","noOptions","handleClickOpen","handleExpandIconMouseDown","disabled","handleClear","stopPropagation","timeoutTimer","icClear","customSelectElement","characterKeyPressTimer","handleFilter","handleNativeSelectKeyDown","handleKeyDown","isArrowKey","handleKeyboardOpen","handleClearButtonFocus","clearButtonFocused","handleClearButtonBlur","retryButton","relatedTarget","menuOptionsFiltered","_toConsumableArray","isGrouped","newFilteredOptions","includeGroupTitlesInSearch","indexOf","noChildOptionsWhenFiltered","triggerLoading","loadingLabel","timeout","loadingErrorLabel","timedOut","find","handleSearchableSelectInput","target","icInput","debounceAriaLiveUpdate","updateSearchableSelectResultAriaLive","searchableSelectResultsStatusEl","innerText","getDefaultValue","onFocus","icFocus","onBlur","tagName","Array","from","querySelectorAll","clearButton","icBlur","onTimeoutBlur","handleFormReset","initialValue","debounce","newValue","setDefaultValue","updateOnChangeDebounce","removeFormResetListener","inheritAttributes","IC_INHERITED_ARIA","removeDisabledFalse","addFormResetListener","onComponentRequiredPropUndefined","prop","propName","_callee","_regeneratorRuntime","wrap","_context","prev","next","stop","_setFocus","apply","arguments","_this2","debounceAria","_this3","small","fullWidth","helperText","hideLabel","name","placeholder","readonly","required","showClearButton","validationStatus","validationText","noOptionSelect","inputValue","renderHiddenInput","invalid","IcInformationStatus","Error","describedBy","getInputDescribedByText","hasValidationStatus","trim","h","Host","class","for","ref","el","anchorEl","isMobileOrTablet","onChange","id","onKeyDown","selected","role","autocomplete","onInput","onClick","innerHTML","Clear","size","variant","appearance","IcThemeForegroundEnum","Light","Dark","onMouseDown","Expand","undefined","inputEl","inputLabel","onMenuStateChange","onMenuOptionSelect","onMenuKeyPress","onMenuValueChange","onUngroupedOptionsSet","onRetryButtonClicked","parentEl","activationType","ariaLiveMode","status","message","get"],"sourceRoot":""}