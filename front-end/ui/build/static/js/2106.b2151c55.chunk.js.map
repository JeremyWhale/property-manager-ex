{"version":3,"file":"static/js/2106.b2151c55.chunk.js","mappings":"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","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-step/ic-step.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-step/ic-step.css?tag=ic-step&encapsulation=shadow"],"sourcesContent":["import { Component, Host, h, Prop, Element, Watch } from \"@stencil/core\";\nimport checkIcon from \"../../assets/check-icon.svg\";\nimport warningIcon from \"../../assets/warning-icon-outline.svg\";\nimport { IcStepVariants, IcStepStatuses, IcStepTypes } from \"./ic-step.types\";\n\n@Component({\n  tag: \"ic-step\",\n  styleUrl: \"ic-step.css\",\n  shadow: true,\n})\nexport class Step {\n  @Element() el: HTMLIcStepElement;\n\n  /**\n   * @internal If a compact stepper is being used, this sets the styling of the step.\n   */\n  @Prop() compactStepStyling?: IcStepTypes;\n\n  /**\n   * @internal If `true`, and a compact stepper  is being used, the current step will be the only step in view.\n   */\n  @Prop({ mutable: true }) current?: boolean = false;\n\n  /**\n   * @internal If `true`, the step will be marked as being the last one in the series. This is managed by ic-stepper.\n   */\n  @Prop() lastStep!: boolean;\n\n  /**\n   * @internal The step number of the final step. This is managed by ic-stepper.\n   */\n  @Prop() lastStepNum?: number;\n\n  /**\n   * @internal The name of the next step. This is managed by ic-stepper.\n   */\n  @Prop() nextStepTitle?: string;\n\n  /**\n   * @internal The progress of the next step, calculated by dividing the current step number by the total number of steps. This is managed by ic-stepper.\n   */\n  @Prop() progress?: number;\n\n  /**\n   * @internal The step number, managed by ic-stepper.\n   */\n  @Prop() stepNum?: number;\n\n  /**\n   * The status of the step. Use this prop to display a status message on the step if it is required or optional.\n   */\n  @Prop() stepStatus?: IcStepStatuses;\n\n  /**\n   * Additional information about the step. Use this prop to override the default step status messaging displayed when selecting a step type or step status.\n   */\n  @Prop() stepSubtitle?: string;\n\n  /**\n   * The title of the step within the stepper.\n   */\n  @Prop() stepTitle?: string;\n\n  /**\n   * @internal The variant of the step. This is managed by ic-stepper.\n   */\n  @Prop() variant!: IcStepVariants;\n\n  /**\n   * The state of the step within the stepper.\n   */\n  @Prop() stepType?: IcStepTypes = \"active\";\n\n  @Watch(\"stepType\")\n  stepTypeChangeHandler(): void {\n    if (this.variant === \"compact\" && this.stepType === \"current\") {\n      this.current = true;\n    } else {\n      this.current = false;\n    }\n  }\n\n  render() {\n    // ARIA LABEL\n    let ariaLabel = \"\";\n\n    if (this.stepType === \"completed\") {\n      ariaLabel = \". Completed step\";\n    } else if (this.stepType === \"disabled\") {\n      ariaLabel = \". Non-required step\";\n    } else if (this.stepStatus === \"required\") {\n      ariaLabel = \". Required step\";\n    } else if (this.stepStatus === \"optional\") {\n      ariaLabel = \". Optional step\";\n    }\n\n    // STEP STATUS\n    let stepStatus;\n    if (this.stepStatus) {\n      stepStatus = this.stepStatus[0].toUpperCase() + this.stepStatus.slice(1);\n    }\n\n    // STEP TYPE\n    let stepType;\n    if (\n      this.stepType === \"disabled\" ||\n      this.compactStepStyling === \"disabled\"\n    ) {\n      stepType = \"Not required\";\n    } else if (this.compactStepStyling === \"completed\") {\n      stepType = \"Completed\";\n    }\n\n    // STATUS ICON FOR COMPACT STEP\n    let statusIcon;\n    if (\n      this.stepType === \"completed\" ||\n      this.compactStepStyling === \"completed\"\n    ) {\n      statusIcon = (\n        <span\n          class=\"check-icon step-icon\"\n          aria-hidden=\"true\"\n          innerHTML={checkIcon}\n        ></span>\n      );\n    } else if (\n      this.stepType === \"disabled\" ||\n      this.compactStepStyling === \"disabled\"\n    ) {\n      statusIcon = (\n        <span\n          class=\"warning-icon step-icon\"\n          aria-hidden=\"true\"\n          innerHTML={warningIcon}\n        ></span>\n      );\n    }\n\n    // COMPACT STEP COMPONENT\n    const compactStep = (\n      <div\n        class={{\n          [\"step\"]: true,\n          [\"current\"]: this.current,\n          [`compact-step-${this.compactStepStyling}`]:\n            !!this.compactStepStyling,\n        }}\n      >\n        <ic-loading-indicator\n          class={{\n            \"compact-step-progress-indicator\": true,\n            \"not-required\":\n              this.stepType === \"disabled\" ||\n              this.compactStepStyling === \"disabled\",\n          }}\n          aria-hidden=\"true\"\n          size=\"small\"\n          inner-label={this.stepNum}\n          progress={this.progress}\n        ></ic-loading-indicator>\n        <div class=\"step-title-area\">\n          <ic-typography variant=\"h4\" class=\"step-title\">\n            {this.stepTitle}\n          </ic-typography>\n          <div class=\"info-line\">\n            <ic-typography variant=\"caption\" class=\"step-num\">\n              {`${this.stepNum} of ${this.lastStepNum}`}\n              <span class=\"visually-hidden\"> steps</span>\n            </ic-typography>\n            {(this.stepSubtitle ||\n              this.stepType === \"completed\" ||\n              this.stepType === \"disabled\" ||\n              (this.variant === \"compact\" &&\n                !!this.compactStepStyling &&\n                this.compactStepStyling !== \"active\") ||\n              !!this.stepStatus) && (\n              <div class=\"step-status\">\n                {statusIcon !== undefined && statusIcon}\n                {(this.stepSubtitle || stepType) && (\n                  <ic-typography variant=\"caption\">\n                    {this.stepSubtitle !== null &&\n                    this.stepSubtitle !== undefined\n                      ? this.stepSubtitle\n                      : this.stepType === \"disabled\" ||\n                        (this.variant === \"compact\" &&\n                          this.compactStepStyling === \"disabled\") ||\n                        this.stepType === \"completed\" ||\n                        (this.variant === \"compact\" &&\n                          this.compactStepStyling === \"completed\")\n                      ? stepType\n                      : this.stepStatus && stepStatus}\n                  </ic-typography>\n                )}\n              </div>\n            )}\n          </div>\n          {this.lastStep ? (\n            <ic-typography variant=\"subtitle-small\" class=\"next-step\">\n              Last step\n            </ic-typography>\n          ) : (\n            this.nextStepTitle !== undefined && (\n              <ic-typography variant=\"subtitle-small\" class=\"next-step\">\n                Next<span class=\"visually-hidden\"> step is</span>:{\" \"}\n                {this.nextStepTitle}\n              </ic-typography>\n            )\n          )}\n        </div>\n      </div>\n    );\n\n    // ICON FOR DEFAULT STEP\n    let icon;\n    if (this.stepType !== \"completed\") {\n      icon = (\n        <ic-typography variant=\"subtitle-small\">\n          <span class=\"step-icon-inner\" aria-hidden=\"true\">\n            {this.stepNum}\n          </span>\n        </ic-typography>\n      );\n    } else {\n      icon = (\n        <div class=\"step-icon-inner\" aria-hidden=\"true\">\n          <span class=\"check-icon\" innerHTML={checkIcon}></span>\n        </div>\n      );\n    }\n\n    // STEP CONNECT FOR DEFAULT STEP\n    const partialBar = this.stepType === \"current\" && (\n      <div class=\"step-connect-inner\"></div>\n    );\n\n    const finalStep = !this.lastStep && (\n      <div\n        class={{\n          [\"step-connect\"]: true,\n          [\"aligned-full-width\"]:\n            this.el.parentElement.classList.contains(\"default\") &&\n            !this.el.parentElement.classList.contains(\"aligned-left\"),\n        }}\n      >\n        {partialBar}\n      </div>\n    );\n\n    // DEFAULT STEP COMPONENT\n    const defaultStep = (\n      <div\n        class={{\n          [\"step\"]: true,\n          [`${this.stepType}`]: true,\n        }}\n      >\n        <div class=\"step-top\">\n          <div class=\"step-icon\">{icon}</div>\n          {finalStep}\n        </div>\n        {(this.stepTitle || this.stepSubtitle || this.stepStatus) && (\n          <div class=\"step-title-area\">\n            {this.stepTitle && (\n              <ic-typography variant=\"subtitle-large\" class=\"step-title\">\n                {this.stepTitle}\n              </ic-typography>\n            )}\n            {this.stepTitle && (this.stepSubtitle || this.stepStatus) && (\n              <ic-typography variant=\"caption\" class=\"step-subtitle\">\n                {this.stepSubtitle !== null && this.stepSubtitle !== undefined\n                  ? this.stepSubtitle\n                  : stepStatus}\n              </ic-typography>\n            )}\n          </div>\n        )}\n      </div>\n    );\n\n    return (\n      <Host\n        role=\"listitem\"\n        aria-label={`Step ${this.stepNum}${ariaLabel}`}\n        aria-current={(this.current || this.stepType === \"current\") && \"step\"}\n        class={{\n          [\"aligned-full-width\"]:\n            this.el.parentElement.classList.contains(\"default\") &&\n            !this.el.parentElement.classList.contains(\"aligned-left\"),\n          [`${this.variant}`]: true,\n        }}\n      >\n        {this.variant === \"compact\" ? compactStep : defaultStep}\n      </Host>\n    );\n  }\n}\n","/* SHARED STYLING */\n:host {\n  display: flex;\n  flex: auto;\n}\n\n.step {\n  display: flex;\n  flex: 1 1 0;\n}\n\n.step-icon {\n  display: flex;\n  justify-content: center;\n}\n\n.step-title,\n.step-subtitle,\n.step-status,\n.next-step {\n  white-space: pre-line;\n}\n\n.visually-hidden {\n  position: absolute;\n  left: -625rem;\n  top: auto;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n}\n\n/* COMPACT STEP STYLING */\n:host(.compact) {\n  column-gap: var(--ic-space-sm);\n\n  --compact-step-inner-color: var(--ic-status-info);\n  --compact-step-circular-line-width: var(--ic-space-xxs);\n}\n\n:host(.compact) .step {\n  column-gap: var(--ic-space-sm);\n}\n\n:host(.compact) .step:not(.current) {\n  display: none;\n  opacity: 0;\n  visibility: hidden;\n}\n\n.compact-step-progress-indicator {\n  margin: var(--ic-space-xs) 0 0;\n}\n\n:host(.compact) .step-title-area {\n  display: flex;\n  flex-direction: column;\n  width: 14.25rem;\n}\n\n.info-line {\n  display: flex;\n  column-gap: var(--ic-space-xs);\n}\n\n.step-status {\n  display: flex;\n  color: var(--ic-color-secondary-text);\n  column-gap: var(--ic-space-xxxs);\n}\n\n.compact-step-completed .step-status {\n  color: var(--ic-status-success);\n}\n\n.compact-step-disabled :is(.step-title, .step-status) {\n  color: var(--ic-color-tertiary-text);\n}\n\n.step-num {\n  color: var(--ic-color-secondary-text);\n  white-space: nowrap;\n}\n\n:host(.compact) .step-icon {\n  margin: var(--ic-space-xxxs);\n}\n\n:host(.compact) .step-icon svg {\n  width: var(--ic-space-md);\n  height: var(--ic-space-md);\n}\n\n/* DEFAULT STEP STYLING */\n:host(.default) .step {\n  flex-direction: column;\n}\n\n:host(.default.last-step) {\n  flex-grow: initial;\n}\n\n.step-top {\n  display: flex;\n  width: 100%;\n  align-items: center;\n  align-self: flex-start;\n  height: 2.5rem;\n}\n\n:host(.default) .step-icon {\n  border-radius: 50%;\n}\n\n.step-icon-inner {\n  width: var(--ic-space-xl);\n  height: var(--ic-space-xl);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n}\n\n:host(.default) .current {\n  color: var(--ic-status-info);\n}\n\n:host(.default) .step-title-area {\n  margin: var(--ic-space-xs) 0;\n  padding-right: var(--ic-space-xs);\n  width: 100%;\n}\n\n:host(.default) .step-title,\n.step-subtitle {\n  width: fit-content;\n}\n\n.step-subtitle {\n  color: var(--ic-color-tertiary-text);\n}\n\n.current .step-subtitle {\n  color: var(--ic-color-primary-text);\n}\n\n:host(.default) .completed {\n  color: var(--ic-status-success);\n}\n\n.active .step-icon-inner {\n  box-shadow: inset var(--ic-architectural-200) 0 0 0 0.125rem;\n}\n\n.current .step-icon-inner {\n  background-color: var(--ic-status-info);\n  color: white;\n}\n\n.disabled {\n  color: var(--ic-architectural-200);\n}\n\n.disabled .step-icon-inner {\n  border: var(--ic-space-1px) dashed var(--ic-architectural-200);\n  width: calc(var(--ic-space-xl) - var(--ic-space-xxxs));\n  height: calc(var(--ic-space-xl) - var(--ic-space-xxxs));\n}\n\n.disabled .step-title-area {\n  color: var(--ic-color-tertiary-text);\n}\n\n.completed .step-icon-inner {\n  background: var(--ic-status-success);\n  box-shadow: inset var(--ic-status-success) 0 0 0 var(--ic-space-xxxs);\n  border-radius: 100%;\n}\n\n:host(.default) .current .step-icon {\n  border: var(--ic-space-xxxs) solid var(--ic-status-info);\n  padding: var(--ic-space-xxxs);\n  margin: 0 calc(-1 * var(--ic-space-xxxs));\n\n  /* compensating for the circle being bigger than other steps */\n}\n\n.step-connect {\n  height: var(--ic-space-xxxs);\n  background-color: var(--ic-architectural-200);\n  margin: 0 var(--ic-space-xs);\n  border-radius: var(--ic-space-xxs);\n  width: 100%;\n}\n\n.aligned-full-width.step-connect {\n  min-width: 6.25rem;\n  width: 100%;\n}\n\n.disabled .step-connect {\n  height: 0;\n  background-color: rgb(0 0 0 / 0%);\n  border-top: 0.125rem dashed var(--ic-architectural-200);\n  border-radius: 0;\n}\n\n.completed .step-connect {\n  background-color: var(--ic-status-success);\n}\n\n.step-connect-inner {\n  width: 70%;\n  display: flex;\n  flex: auto;\n  height: var(--ic-space-xxxs);\n  border-radius: var(--ic-space-xxs);\n  background-color: var(--ic-status-info);\n}\n\n.step-icon-inner .check-icon {\n  padding-top: var(--ic-space-xxs);\n}\n\n.step-icon-inner .check-icon svg {\n  width: var(--ic-space-md);\n  height: auto;\n}\n\n.step-icon-inner .check-icon > svg > path {\n  fill: var(--ic-color-white-text);\n}\n\n/** High Contrast **/\n@media (forced-colors: active) {\n  /* COMPACT STEP */\n  .compact-step-disabled :is(.step-title, .step-status) {\n    color: GrayText;\n  }\n\n  /* DEFAULT STEP */\n  .step-connect:not(.disabled .step-connect) {\n    border: var(--ic-hc-border);\n  }\n\n  .active .step-icon-inner,\n  .completed .step-icon-inner,\n  .current .step-icon-inner {\n    forced-color-adjust: none;\n    box-shadow: inset canvastext 0 0 0 0.125rem;\n    background-color: transparent;\n    color: canvastext;\n  }\n\n  :host(.default) .current .step-icon {\n    padding: 0;\n    border: none;\n  }\n\n  .disabled,\n  .disabled .step-title-area {\n    color: GrayText;\n  }\n\n  .step-connect-inner,\n  .completed .step-connect {\n    background-color: canvastext;\n  }\n\n  .step-icon-inner .check-icon > svg > path {\n    fill: canvastext;\n  }\n}\n"],"names":["Step","this","variant","stepType","current","key","value","_class","_class2","_class3","_class4","stepStatus","statusIcon","ariaLabel","toUpperCase","slice","compactStepStyling","h","class","innerHTML","Check","icon","compactStep","_defineProperty","concat","size","stepNum","progress","stepTitle","lastStepNum","stepSubtitle","undefined","lastStep","nextStepTitle","partialBar","finalStep","el","parentElement","classList","contains","defaultStep","Host","role","get"],"sourceRoot":""}