{"version":3,"file":"static/js/6131.c79df21f.chunk.js","mappings":"wMAkBaA,G,QAAU,W,2DAMqB,O,6EAoBZ,U,sEAO9B,YACEC,EAAAA,EAAAA,GACE,CAAC,CAAEC,KAAMC,KAAKC,QAASC,SAAU,YACjC,c,GAEH,CAAAC,IAAA,SAAAC,MAED,WAAM,IAAAC,EACIC,EACNN,KADMM,QAASC,EACfP,KADeO,KAAMC,EACrBR,KADqBQ,aAAcP,EACnCD,KADmCC,QAASQ,EAC5CT,KAD4CS,UAAWC,EACvDV,KADuDU,WAEzD,OACEC,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CACHC,OAAKR,EAAA,IAAAS,EAAAA,EAAAA,GAAAT,EAAA,GAAAU,OACCT,IAAY,IAAIQ,EAAAA,EAAAA,GAAAT,EAAA,SAAAU,OACVN,IAAcO,EAAAA,EAAAA,GAAWhB,KAAKiB,GAAI,UAAQZ,KAGrDW,EAAAA,EAAAA,GAAWhB,KAAKiB,GAAI,WAAYN,EAAAA,EAAAA,GAAA,QAAMO,KAAK,WAC5CP,EAAAA,EAAAA,GAAA,YACEA,EAAAA,EAAAA,GAAA,iBAAeQ,QAAQ,MAAMlB,GAC5BS,IACCC,EAAAA,EAAAA,GAAA,iBAAeQ,QAAQ,kBAAkBT,GAE1CH,IACCI,EAAAA,EAAAA,GAAA,iBAAeS,SAAUZ,GAAeD,KAG3CS,EAAAA,EAAAA,GAAWhB,KAAKiB,GAAI,aACnBN,EAAAA,EAAAA,GAAA,OAAKE,MAAM,gBACTF,EAAAA,EAAAA,GAAA,QAAMO,KAAK,a,GAKpB,CAAAf,IAAA,KAAAkB,IAAA,W,0BAnEoB,I,QClBC,01B","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-empty-state/ic-empty-state.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-empty-state/ic-empty-state.css?tag=ic-empty-state&encapsulation=shadow"],"sourcesContent":["import { h, Component, Host, Prop, Element } from \"@stencil/core\";\n\nimport { IcEmptyStateAlignment } from \"./ic-empty-state.types\";\nimport {\n  isSlotUsed,\n  onComponentRequiredPropUndefined,\n} from \"../../utils/helpers\";\nimport { IcSizes } from \"../../utils/types\";\n\n/**\n * @slot image - Content is placed at the top above all other content.\n * @slot actions - Content is placed at the bottom below all other content.\n */\n@Component({\n  tag: \"ic-empty-state\",\n  styleUrl: \"ic-empty-state.css\",\n  shadow: true,\n})\nexport class EmptyState {\n  @Element() el: HTMLIcEmptyStateElement;\n\n  /**\n   * The alignment of the empty state container.\n   */\n  @Prop() aligned?: IcEmptyStateAlignment = \"left\";\n\n  /**\n   * The body text rendered in the empty state container.\n   */\n  @Prop() body?: string;\n\n  /**\n   * The number of lines of body text to display before truncating.\n   */\n  @Prop() bodyMaxLines?: number;\n\n  /**\n   * The title rendered in the empty state container.\n   */\n  @Prop() heading!: string;\n\n  /**\n   * The size of the image or icon used in the image slot.\n   */\n  @Prop() imageSize?: IcSizes = \"default\";\n\n  /**\n   * The subtitle rendered in the empty state container.\n   */\n  @Prop() subheading?: string;\n\n  componentDidLoad(): void {\n    onComponentRequiredPropUndefined(\n      [{ prop: this.heading, propName: \"heading\" }],\n      \"Empty State\"\n    );\n  }\n\n  render() {\n    const { aligned, body, bodyMaxLines, heading, imageSize, subheading } =\n      this;\n    return (\n      <Host\n        class={{\n          [`${aligned}`]: true,\n          [`image-${imageSize}`]: isSlotUsed(this.el, \"image\"),\n        }}\n      >\n        {isSlotUsed(this.el, \"image\") && <slot name=\"image\"></slot>}\n        <div>\n          <ic-typography variant=\"h4\">{heading}</ic-typography>\n          {subheading && (\n            <ic-typography variant=\"subtitle-small\">{subheading}</ic-typography>\n          )}\n          {body && (\n            <ic-typography maxLines={bodyMaxLines}>{body}</ic-typography>\n          )}\n        </div>\n        {isSlotUsed(this.el, \"actions\") && (\n          <div class=\"action-area\">\n            <slot name=\"actions\" />\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n",":host {\n  gap: var(--ic-space-xs);\n  padding: var(--ic-space-xs);\n}\n\n:host,\n.action-area {\n  display: flex;\n  flex-direction: column;\n}\n\n.action-area {\n  gap: var(--ic-space-md);\n}\n\n:host ::slotted(svg),\n:host ::slotted(img) {\n  border-radius: var(--ic-space-xxs);\n}\n\n:host(.right),\n:host(.right) .action-area {\n  align-items: flex-end;\n  text-align: right;\n}\n\n:host(.center),\n:host(.center) .action-area {\n  align-items: center;\n  text-align: center;\n}\n\n:host(.image-default) ::slotted(svg),\n:host(.image-default) ::slotted(img) {\n  height: calc(3 * var(--ic-space-lg)) !important;\n  width: calc(3 * var(--ic-space-lg)) !important;\n}\n\n:host(.image-small) ::slotted(svg),\n:host(.image-small) ::slotted(img) {\n  height: var(--ic-space-xxl) !important;\n  width: var(--ic-space-xxl) !important;\n}\n\n:host(.image-large) ::slotted(svg),\n:host(.image-large) ::slotted(img) {\n  height: calc(4 * var(--ic-space-xl)) !important;\n  width: calc(4 * var(--ic-space-xl)) !important;\n}\n"],"names":["EmptyState","onComponentRequiredPropUndefined","prop","this","heading","propName","key","value","_class","aligned","body","bodyMaxLines","imageSize","subheading","h","Host","class","_defineProperty","concat","isSlotUsed","el","name","variant","maxLines","get"],"sourceRoot":""}