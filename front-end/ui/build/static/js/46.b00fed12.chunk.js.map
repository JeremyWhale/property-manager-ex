{"version":3,"file":"static/js/46.b00fed12.chunk.js","mappings":"uLAQaA,EAAQ,W,gJAWO,E,aAKa,W,iDAEvC,WAC+B,KAAzBC,KAAKC,GAAGC,MAAMC,QAAyC,KAAxBH,KAAKC,GAAGC,MAAME,MAC/CJ,KAAKK,SAAU,EACqB,KAAzBL,KAAKC,GAAGC,MAAMC,QAA0C,KAAxBH,KAAKC,GAAGC,MAAME,MACzDJ,KAAKM,YAAa,EACiB,KAAxBN,KAAKC,GAAGC,MAAME,OAA0C,KAAzBJ,KAAKC,GAAGC,MAAMC,SACxDH,KAAKO,WAAY,E,GAEpB,CAAAC,IAAA,SAAAC,MAED,WAAM,IAAAC,EACIC,EAAmBX,KAAnBW,QAASC,EAAUZ,KAAVY,MAEjBZ,KAAKa,WAAab,KAAKC,GAAGa,kBAE1B,IAAMC,EAAuB,CAC3BZ,OAAmB,QAAXQ,EAAoB,MAAmB,UAAXA,EAAsB,OAAS,OACnEP,MAAkB,UAAXO,EAAsB,OAAS,SAGlCK,EAAiB,CACrBb,OAAQH,KAAKC,GAAGC,MAAMC,OACtBC,MAAkB,UAAXO,EAAsB,OAAS,SAGlCM,EAAgB,CACpBd,OAAmB,QAAXQ,EAAoB,MAAmB,UAAXA,EAAsB,OAAS,OACnEP,MAAOJ,KAAKC,GAAGC,MAAME,OAGvB,OACEc,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CACHC,OAAKV,EAAA,IAAAW,EAAAA,EAAAA,GAAAX,EACF,YAAa,IAAIW,EAAAA,EAAAA,GAAAX,EACjB,SAAsB,UAAXC,IAAmBU,EAAAA,EAAAA,GAAAX,EAC9B,QAAUE,GAAKF,GAElBR,OACIF,KAAKa,UAAYb,KAAKK,SAAWU,GAClCf,KAAKM,YAAcU,GACnBhB,KAAKO,WAAaU,EAAc,gBAErB,SAEdC,EAAAA,EAAAA,GAAA,a,GAGL,CAAAV,IAAA,KAAAc,IAAA,W,0BAjEkB,G,QCRC,gqG","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-skeleton/ic-skeleton.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-skeleton/ic-skeleton.css?tag=ic-skeleton&encapsulation=shadow"],"sourcesContent":["import { Component, Element, Host, Prop, h, State } from \"@stencil/core\";\nimport { IcSkeletonVariants } from \"./ic-skeleton.types\";\n\n@Component({\n  tag: \"ic-skeleton\",\n  styleUrl: \"ic-skeleton.css\",\n  shadow: true,\n})\nexport class Skeleton {\n  @Element() el: HTMLIcSkeletonElement;\n\n  @State() default: boolean;\n  @State() hasChild: boolean;\n  @State() heightOnly: boolean;\n  @State() widthOnly: boolean;\n\n  /**\n   * If `true`, the skeleton will be set to the light variant.\n   */\n  @Prop() light?: boolean = false;\n\n  /**\n   * The variant of the skeleton that will be displayed.\n   */\n  @Prop() variant?: IcSkeletonVariants = \"rectangle\";\n\n  componentWillLoad(): void {\n    if (this.el.style.height === \"\" && this.el.style.width === \"\") {\n      this.default = true;\n    } else if (!(this.el.style.height === \"\") && this.el.style.width === \"\") {\n      this.heightOnly = true;\n    } else if (!(this.el.style.width === \"\") && this.el.style.height === \"\") {\n      this.widthOnly = true;\n    }\n  }\n\n  render() {\n    const { variant, light } = this;\n\n    this.hasChild = !!this.el.firstElementChild;\n\n    const defaultSkeletonStyle = {\n      height: variant == \"text\" ? \"1em\" : variant == \"circle\" ? \"25px\" : \"93px\",\n      width: variant == \"circle\" ? \"25px\" : \"260px\",\n    };\n\n    const heightSetStyle = {\n      height: this.el.style.height,\n      width: variant == \"circle\" ? \"25px\" : \"260px\",\n    };\n\n    const widthSetStyle = {\n      height: variant == \"text\" ? \"1em\" : variant == \"circle\" ? \"25px\" : \"93px\",\n      width: this.el.style.width,\n    };\n\n    return (\n      <Host\n        class={{\n          [\"skeleton\"]: true,\n          [\"circle\"]: variant == \"circle\",\n          [\"light\"]: light,\n        }}\n        style={\n          (!this.hasChild && this.default && defaultSkeletonStyle) ||\n          (this.heightOnly && heightSetStyle) ||\n          (this.widthOnly && widthSetStyle)\n        }\n        aria-disabled=\"true\"\n      >\n        <slot />\n      </Host>\n    );\n  }\n}\n","@import \"../../global/normalize.css\";\n\n@keyframes loading {\n  0% {\n    background-color: var(--ic-architectural-100);\n  }\n\n  50% {\n    background-color: var(--ic-architectural-200);\n  }\n\n  100% {\n    background-color: var(--ic-architectural-100);\n  }\n}\n\n@keyframes loading-light {\n  0% {\n    background-color: var(--ic-architectural-600);\n  }\n\n  50% {\n    background-color: var(--ic-architectural-400);\n  }\n\n  100% {\n    background-color: var(--ic-architectural-600);\n  }\n}\n\n:host {\n  display: inline-block;\n}\n\n:host(.skeleton) {\n  background-color: var(--ic-architectural-100);\n  border-radius: var(--ic-border-radius);\n  animation: loading 1200ms infinite;\n  display: inline-block;\n}\n\n:host(.skeleton) > * {\n  opacity: 0;\n  visibility: hidden;\n}\n\n:host(.circle) {\n  border-radius: 50%;\n}\n\n:host(.light) {\n  background-color: var(--ic-architectural-600);\n  animation: loading-light 1200ms infinite;\n}\n\n@media (forced-colors: active) {\n  :host(.skeleton) {\n    -ms-high-contrast-adjust: none;\n    forced-color-adjust: none;\n    background: currentcolor;\n  }\n}\n"],"names":["Skeleton","this","el","style","height","width","default","heightOnly","widthOnly","key","value","_class","variant","light","hasChild","firstElementChild","defaultSkeletonStyle","heightSetStyle","widthSetStyle","h","Host","class","_defineProperty","get"],"sourceRoot":""}