{"version":3,"file":"static/js/9304.21aa67a5.chunk.js","mappings":"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","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-menu-item/ic-menu-item.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-menu-item/ic-menu-item.css?tag=ic-menu-item&encapsulation=shadow"],"sourcesContent":["import {\n  Component,\n  Element,\n  Host,\n  Prop,\n  h,\n  State,\n  Event,\n  EventEmitter,\n  Listen,\n} from \"@stencil/core\";\nimport {\n  getParentElement,\n  isSlotUsed,\n  onComponentRequiredPropUndefined,\n  removeDisabledFalse,\n} from \"../../utils/helpers\";\nimport { IcMenuItemVariants } from \"./ic-menu-item.types\";\nimport Check from \"../../assets/check-icon.svg\";\nimport Chevron from \"../../assets/chevron-icon.svg\";\n\n/**\n * @slot icon - Content will be placed to the left of the menu item label.\n */\n\n@Component({\n  tag: \"ic-menu-item\",\n  styleUrl: \"ic-menu-item.css\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class MenuItem {\n  @Element() el: HTMLIcMenuItemElement;\n\n  @State() toggleChecked: boolean = false;\n\n  /**\n   * The description displayed in the menu item, below the label.\n   */\n  @Prop() description?: string;\n\n  /**\n   * If `true`, the menu item will be in disabled state.\n   */\n  @Prop() disabled?: boolean = false;\n\n  /**\n   * The URL that the link points to. This will render the menu item as an \"a\" tag.\n   */\n  @Prop() href?: string;\n\n  /**\n   * The human language of the linked URL.\n   */\n  @Prop() hreflang?: string;\n\n  /**\n   * The label describing the keyboard shortcut for a menu item's action.\n   */\n  @Prop() keyboardShortcut?: string;\n\n  /**\n   * The label to display in the menu item.\n   */\n  @Prop() label!: string;\n\n  /**\n   * How much of the referrer to send when following the link.\n   */\n  @Prop() referrerpolicy?: ReferrerPolicy;\n\n  /**\n   * The relationship of the linked URL as space-separated link types.\n   */\n  @Prop() rel?: string;\n\n  /**\n   * This references the popover menu instance that the menu item is a trigger for. If this prop is set, then the variant will always be default.\n   */\n  @Prop() submenuTriggerFor?: string;\n\n  /**\n   * The place to display the linked URL, as the name for a browsing context (a tab, window, or iframe).\n   */\n  @Prop() target?: string;\n\n  /**\n   * The variant of the menu item.\n   */\n  @Prop({ mutable: true, reflect: true }) variant: IcMenuItemVariants =\n    \"default\";\n\n  /**\n   * @internal Emitted when item loses focus.\n   */\n  @Event() childBlur: EventEmitter<void>;\n\n  /**\n   * @internal Emitted when the user clicks a menu item.\n   */\n  @Event() handleMenuItemClick: EventEmitter<{\n    label: string;\n    hasSubMenu: boolean;\n  }>;\n\n  /**\n   * @internal Emitted when the user clicks a menu item that triggers a popover menu instance.\n   */\n  @Event() triggerPopoverMenuInstance: EventEmitter<void>;\n\n  componentWillLoad(): void {\n    // This ensures that trigger menu items are always set to the default variant\n    if (this.submenuTriggerFor !== undefined && this.variant !== \"default\") {\n      this.variant = \"default\";\n    }\n    removeDisabledFalse(this.disabled, this.el);\n  }\n\n  componentDidLoad(): void {\n    onComponentRequiredPropUndefined(\n      [{ prop: this.label, propName: \"label\" }],\n      \"Menu Item\"\n    );\n  }\n\n  @Listen(\"click\", { capture: true })\n  handleHostClick(e: Event): void {\n    if (this.disabled) {\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private handleClick = (e: Event): void => {\n    if (this.submenuTriggerFor !== undefined) {\n      this.triggerPopoverMenuInstance.emit();\n    } else if (this.variant === \"toggle\") {\n      e.preventDefault();\n      this.toggleChecked\n        ? (this.toggleChecked = false)\n        : (this.toggleChecked = true);\n    }\n    this.handleMenuItemClick.emit({\n      label: this.label,\n      hasSubMenu: !!this.el.submenuTriggerFor,\n    });\n  };\n\n  private getMenuItemAriaLabel = (): string => {\n    let ariaLabel = this.label;\n\n    if (this.description !== undefined) {\n      ariaLabel = `${ariaLabel}, ${this.description}`;\n    }\n\n    if (this.keyboardShortcut !== undefined) {\n      ariaLabel = `${ariaLabel}, ${this.keyboardShortcut}`;\n    }\n\n    if (this.variant === \"destructive\") {\n      ariaLabel = `${ariaLabel}, destructive`;\n    }\n\n    if (this.submenuTriggerFor !== undefined) {\n      ariaLabel = `${ariaLabel}, triggers submenu`;\n    }\n\n    if (this.el.classList.contains(\"ic-popover-submenu-back-button\")) {\n      ariaLabel = \"Go back to parent menu\";\n    }\n    const parentEl = getParentElement(this.el);\n\n    if (\n      parentEl.tagName === \"IC-MENU-GROUP\" &&\n      (parentEl as HTMLIcMenuGroupElement).label\n    ) {\n      return `${ariaLabel}, ${\n        (parentEl as HTMLIcMenuGroupElement).label\n      } menu group`;\n    } else {\n      return ariaLabel;\n    }\n  };\n\n  render() {\n    // A helper function that checks if a prop has been defined\n    const isPropDefined = (prop: string) => {\n      return prop !== undefined ? prop : null;\n    };\n\n    // A sub-component to layout the menu information correctly in ic-button\n    const MenuItemInformation = () => {\n      return (\n        <div class=\"menu-item-info\">\n          <div class=\"menu-labels\">\n            <ic-typography class=\"menu-item-label\">{this.label}</ic-typography>\n            {this.keyboardShortcut && (\n              <ic-typography variant=\"caption\" class=\"shortcut\">\n                {this.keyboardShortcut}\n              </ic-typography>\n            )}\n          </div>\n          {this.description && (\n            <ic-typography class=\"menu-item-description\" variant=\"caption\">\n              {this.description}\n            </ic-typography>\n          )}\n        </div>\n      );\n    };\n\n    return (\n      <Host\n        class={{\n          [\"disabled\"]: this.disabled,\n        }}\n      >\n        <li\n          role={this.variant === \"toggle\" ? \"menuitemcheckbox\" : \"menuitem\"}\n          aria-disabled={`${this.disabled}`}\n          aria-checked={\n            this.variant === \"toggle\" && this.toggleChecked === true\n              ? true\n              : this.variant === \"toggle\" && this.toggleChecked === false\n              ? false\n              : undefined\n          }\n        >\n          <ic-button\n            disableTooltip\n            fullWidth\n            variant=\"tertiary\"\n            onClick={this.handleClick}\n            href={isPropDefined(this.href)}\n            hreflang={isPropDefined(this.hreflang)}\n            target={isPropDefined(this.target)}\n            rel={isPropDefined(this.rel)}\n            referrerpolicy={\n              this.referrerpolicy !== undefined ? this.referrerpolicy : null\n            }\n            aria-disabled={`${this.disabled}`}\n            aria-label={this.getMenuItemAriaLabel()}\n            aria-controls={\n              this.submenuTriggerFor !== undefined\n                ? `ic-popover-submenu-${this.submenuTriggerFor}`\n                : false\n            }\n            aria-haspopup={\n              this.submenuTriggerFor !== undefined ||\n              this.el.classList.contains(\"ic-popover-submenu-back-button\")\n                ? \"menu\"\n                : false\n            }\n            aria-owns={\n              this.submenuTriggerFor !== undefined\n                ? `ic-popover-submenu-${this.submenuTriggerFor}`\n                : false\n            }\n          >\n            <div class=\"focus-border\">\n              {isSlotUsed(this.el, \"icon\") && (\n                <span class=\"icon\">\n                  <slot name=\"icon\"></slot>\n                </span>\n              )}\n              <MenuItemInformation />\n              {this.variant === \"toggle\" && (\n                <span\n                  class={{\n                    [\"check-icon\"]: true,\n                    [\"hide\"]: !this.toggleChecked,\n                  }}\n                  aria-hidden=\"true\"\n                  innerHTML={Check}\n                />\n              )}\n              {this.submenuTriggerFor !== undefined && (\n                <span\n                  class={{ [\"submenu-icon\"]: true }}\n                  aria-hidden=\"true\"\n                  innerHTML={Chevron}\n                />\n              )}\n            </div>\n          </ic-button>\n        </li>\n      </Host>\n    );\n  }\n}\n","@import \"../../global/normalize.css\";\n\nli {\n  list-style: none;\n  padding: 0;\n}\n\n:host::part(button) {\n  color: var(--ic-color-primary-text);\n  padding: calc(var(--ic-space-xxxs) / 2);\n  display: flex;\n  align-items: flex-start;\n  gap: var(--ic-space-xs);\n  border-radius: 0;\n  min-height: 2.5rem;\n  height: auto;\n}\n\n.focus-border {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--ic-space-xs);\n  border-radius: var(--ic-border-radius);\n  margin: calc(var(--ic-space-xxxs) / 2);\n  padding: var(--ic-space-xxs);\n  border: var(--ic-space-xxxs) dashed transparent;\n\n  --icon-height: auto;\n}\n\n:host(.disabled)::part(button) {\n  color: var(--ic-architectural-200) !important;\n  pointer-events: none;\n}\n\n:host(.disabled) .menu-item-label,\n:host(.disabled) .shortcut,\n:host(.disabled) .menu-item-description {\n  color: var(--ic-architectural-200) !important;\n}\n\n:host([variant=\"destructive\"])::part(button) {\n  color: var(--ic-action-destructive);\n}\n\n:host::part(button):hover {\n  background-color: var(--ic-action-dark-bg-hover);\n}\n\n:host::part(button):focus-visible,\n:host::part(button):focus {\n  color: var(--ic-color-white-text);\n  background-color: var(--ic-focus-blue);\n  box-shadow: none;\n}\n\n:host(.disabled)::part(button):focus-visible,\n:host(.disabled)::part(button):focus {\n  color: var(--ic-theme-lighten-40) !important;\n}\n\n:host([variant=\"destructive\"])::part(button):focus-visible,\n:host([variant=\"destructive\"])::part(button):focus {\n  background-color: var(--ic-action-destructive);\n}\n\nic-button:focus-within .menu-item-label,\nic-button:focus-within .shortcut,\nic-button:focus-within .menu-item-description {\n  color: var(--ic-color-white-text);\n}\n\n:host(.disabled) ic-button:focus-within .focus-border {\n  border-color: var(--ic-architectural-white);\n}\n\n:host(.disabled) ic-button:focus-within .menu-item-label,\n:host(.disabled) ic-button:focus-within .shortcut,\n:host(.disabled) ic-button:focus-within .menu-item-description {\n  color: var(--ic-theme-lighten-40) !important;\n}\n\n:host::part(button):active {\n  background-color: var(--ic-action-dark-bg-active);\n  color: var(--ic-color-primary-text) !important;\n}\n\n:host([variant=\"destructive\"])::part(button):active {\n  background-color: var(--ic-action-dark-bg-active);\n  color: var(--ic-action-destructive) !important;\n}\n\n.menu-item-info {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  align-items: baseline;\n  white-space: pre-line;\n  text-align: left;\n}\n\n.menu-labels {\n  display: flex;\n  align-items: baseline;\n  gap: var(--ic-space-xs);\n}\n\n.menu-item-description {\n  color: var(--ic-color-secondary-text);\n}\n\n.shortcut {\n  color: var(--ic-color-tertiary-text);\n  display: flex;\n  flex: min-content;\n}\n\n:host([variant=\"destructive\"]) .menu-item-label {\n  text-transform: uppercase;\n  font-weight: 600;\n  letter-spacing: 0.025em;\n}\n\nic-button:active .menu-item-label {\n  color: var(--ic-color-primary-text);\n}\n\nic-button:active .menu-item-description {\n  color: var(--ic-color-secondary-text);\n}\n\nic-button:active .shortcut {\n  color: var(--ic-color-tertiary-text);\n}\n\n:host([variant=\"destructive\"]) ic-button:active .menu-item-label {\n  color: var(--ic-action-destructive) !important;\n}\n\n.icon,\n.check-icon,\n.submenu-icon,\n.icon ::slotted(svg),\n.check-icon svg,\n.submenu-icon svg {\n  width: var(--ic-space-lg);\n  height: var(--ic-space-lg);\n}\n\n.check-icon.hide {\n  visibility: hidden;\n}\n\n/** High Contrast **/\n@media (forced-colors: active) {\n  :host::part(button) {\n    border: canvas;\n  }\n\n  :host::part(button):focus-visible {\n    outline: var(--ic-space-xxxs) solid transparent;\n  }\n\n  .focus-border {\n    border-color: canvas;\n  }\n\n  :host(.disabled) ic-button:focus-within .focus-border {\n    border-color: GrayText;\n  }\n\n  :host(.disabled) .menu-item-info,\n  :host(.disabled) .menu-item-label,\n  :host(.disabled) .shortcut,\n  :host(.disabled) .menu-item-description,\n  :host(.disabled) ic-button:focus-within .menu-item-info,\n  :host(.disabled) ic-button:focus-within .menu-item-label,\n  :host(.disabled) ic-button:focus-within .shortcut,\n  :host(.disabled) ic-button:focus-within .menu-item-description {\n    color: GrayText !important;\n  }\n\n  :host(.disabled)::part(button):focus-visible,\n  :host(.disabled)::part(button):focus {\n    outline-color: GrayText !important;\n  }\n}\n"],"names":["MenuItem","handleClick","e","undefined","_this","submenuTriggerFor","triggerPopoverMenuInstance","emit","variant","preventDefault","toggleChecked","handleMenuItemClick","label","hasSubMenu","el","getMenuItemAriaLabel","ariaLabel","description","concat","keyboardShortcut","classList","contains","parentEl","getParentElement","tagName","this","removeDisabledFalse","disabled","key","value","onComponentRequiredPropUndefined","prop","propName","stopImmediatePropagation","_class2","_this2","isPropDefined","h","Host","class","_defineProperty","role","disableTooltip","fullWidth","onClick","href","hreflang","target","rel","referrerpolicy","isSlotUsed","name","innerHTML","Check","Chevron","get"],"sourceRoot":""}