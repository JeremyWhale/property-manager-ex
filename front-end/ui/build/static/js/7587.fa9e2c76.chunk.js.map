{"version":3,"file":"static/js/7587.fa9e2c76.chunk.js","mappings":"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","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-dialog/ic-dialog.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-dialog/ic-dialog.css?tag=ic-dialog&encapsulation=shadow"],"sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Host,\n  Prop,\n  State,\n  Method,\n  Listen,\n  Watch,\n  h,\n} from \"@stencil/core\";\nimport closeIcon from \"../../assets/close-icon.svg\";\nimport { isSlotUsed, checkResizeObserver } from \"../../utils/helpers\";\n\n/**\n * @slot dialog-controls - Content will be place at the bottom of the dialog.\n * @slot heading - Content will be placed at the top of the dialog.\n * @slot label - Content will be placed above the dialog heading.\n */\n@Component({\n  tag: \"ic-dialog\",\n  styleUrl: \"ic-dialog.css\",\n  shadow: true,\n})\nexport class Dialog {\n  private DATA_OVERFLOW: string = \"data-overflow\";\n  private DATA_GETS_FOCUS: string = \"data-gets-focus\";\n  private DATA_GETS_FOCUS_SELECTOR: string = \"[data-gets-focus]\";\n  private DIALOG_CONTROLS: string = \"dialog-controls\";\n  private dialogEl: HTMLDialogElement;\n  private dialogHeight: number = 0;\n  private focusedElementIndex = 0;\n  private IC_TEXT_FIELD: string = \"IC-TEXT-FIELD\";\n  private IC_ACCORDION: string = \"IC-ACCORDION\";\n  private interactiveElementList: HTMLElement[];\n  private resizeObserver: ResizeObserver = null;\n  private resizeTimeout: number;\n  private sourceElement: HTMLElement;\n\n  /* eslint-disable */\n\n  private buttonOnclick0: Function;\n  private buttonOnclick1: Function;\n  private buttonOnclick2: Function;\n\n  /* eslint-enable */\n\n  @Element() el: HTMLIcDialogElement;\n\n  @State() dialogRendered: boolean = false;\n  @State() fadeIn: boolean = false;\n\n  /**\n   * If a status is set, sets the heading for the displayed alert.\n   */\n  @Prop() alertHeading?: string;\n\n  /**\n   * If a status is set, sets the message for the displayed alert.\n   */\n  @Prop() alertMessage?: string;\n\n  /**\n   * If set to `false`, dialog controls will not be displayed overriding buttonProps or slotted dialog controls.\n   */\n  @Prop() buttons?: boolean = true;\n\n  /**\n   * If set to `true`, the dialog will not close when the backdrop is clicked.\n   */\n  @Prop() closeOnBackdropClick?: boolean = true;\n\n  /**\n   * If default buttons are displayed, sets the 'primary' or rightmost button to the destructive variant. Stops initial focus being set on the 'primary' or rightmost default or slotted button.\n   */\n  @Prop() destructive?: boolean = false;\n\n  /**\n   * Sets the dismiss label tooltip and aria label.\n   */\n  @Prop() dismissLabel?: string = \"Dismiss\";\n\n  /**\n   * Sets the heading for the dialog.\n   */\n  @Prop() heading!: string;\n\n  /**\n   * Sets the optional label for the dialog which appears above the heading.\n   */\n  @Prop() label?: string;\n\n  /**\n   * Sets the maximum and minimum height and width for the dialog.\n   */\n  @Prop() size?: \"small\" | \"medium\" | \"large\" = \"small\";\n\n  /**\n   * If set, displays an alert of the corresponding variant below the heading.\n   */\n  @Prop() status?: \"neutral\" | \"info\" | \"warning\" | \"error\" | \"success\";\n\n  /**\n   * Sets the label and onclick functions for default buttons.\n   */\n  @Prop() buttonProps?: { label: string; onclick: string }[] = [\n    {\n      label: \"Cancel\",\n      onclick: \"this.cancelDialog();\",\n    },\n    { label: \"Confirm\", onclick: \"this.confirmDialog();\" },\n  ];\n\n  @Watch(\"buttonProps\")\n  watchPropHandler(): void {\n    this.setButtonOnClick();\n  }\n\n  /**\n   * Cancelation event emitted when default 'Cancel' button clicked or 'cancelDialog' method is called.\n   */\n  @Event() icDialogCancelled: EventEmitter<void>;\n\n  /**\n   * Emitted when dialog has closed.\n   */\n  @Event() icDialogClosed: EventEmitter<void>;\n\n  /**\n   * Confirmation event emitted when default 'Confirm' primary button clicked or 'confirmDialog' method is called.\n   */\n  @Event() icDialogConfirmed: EventEmitter<void>;\n\n  /**\n   * Emitted when dialog has opened.\n   */\n  @Event() icDialogOpened: EventEmitter<void>;\n\n  componentWillLoad(): void {\n    this.setButtonOnClick();\n  }\n\n  componentDidLoad(): void {\n    this.getInteractiveElements();\n    this.setAlertVariant();\n  }\n\n  @Listen(\"keydown\", { target: \"document\" })\n  handleKeyboard(ev: KeyboardEvent): void {\n    if (this.dialogRendered) {\n      switch (ev.key) {\n        case \"Tab\":\n          ev.preventDefault();\n          this.focusNextInteractiveElement(ev.shiftKey);\n          break;\n        case \"Escape\":\n          !ev.repeat && this.hideDialog();\n          ev.stopImmediatePropagation();\n          break;\n      }\n    }\n  }\n\n  @Listen(\"click\", {})\n  handleClick(ev: MouseEvent): void {\n    const dialogElement = this.el.shadowRoot.querySelector(\"dialog\");\n    if (\n      this.closeOnBackdropClick &&\n      ev.composedPath().indexOf(dialogElement) <= 0\n    ) {\n      const rect = this.dialogEl.getBoundingClientRect();\n      const isInDialog =\n        rect.top <= ev.clientY &&\n        ev.clientY <= rect.top + rect.height &&\n        rect.left <= ev.clientX &&\n        ev.clientX <= rect.left + rect.width;\n      if (!isInDialog) {\n        this.hideDialog();\n      }\n    }\n  }\n\n  /**\n   * Use to show the dialog.\n   */\n  @Method()\n  async showDialog(): Promise<void> {\n    this.dialogRendered = true;\n    this.dialogEl.showModal();\n    setTimeout(() => {\n      this.fadeIn = true;\n    }, 10);\n    setTimeout(() => {\n      this.setInitialFocus();\n      checkResizeObserver(this.runResizeObserver);\n    }, 75);\n    setTimeout(() => {\n      this.getFocusedElementIndex();\n      this.icDialogOpened.emit();\n    }, 80);\n  }\n\n  /**\n   * Use to hide the dialog.\n   */\n  @Method()\n  async hideDialog(): Promise<void> {\n    this.fadeIn = false;\n    if (this.resizeObserver !== null) {\n      this.resizeObserver.disconnect();\n    }\n    setTimeout(() => {\n      this.dialogRendered = false;\n      this.dialogEl.close();\n      this.sourceElement?.focus();\n      this.el.removeAttribute(this.DATA_OVERFLOW);\n      this.dialogHeight = 0;\n      this.icDialogClosed.emit();\n    }, 80);\n  }\n\n  /**\n   * Cancels the dialog. Used by the default 'Cancel' button or can be called manually to trigger cancelling of dialog.\n   */\n  @Method()\n  async cancelDialog(): Promise<void> {\n    this.icDialogCancelled.emit();\n    this.hideDialog();\n  }\n\n  /**\n   * Confirms the dialog. Used by the default 'Confirm' button or can be called manually to trigger confirming of dialog.\n   */\n  @Method()\n  async confirmDialog(): Promise<void> {\n    this.icDialogConfirmed.emit();\n  }\n\n  private setContentOverflow = (): void => {\n    if (this.dialogEl.clientHeight < this.dialogEl.scrollHeight) {\n      this.el.setAttribute(this.DATA_OVERFLOW, \"true\");\n    } else {\n      this.el.setAttribute(this.DATA_OVERFLOW, \"false\");\n    }\n  };\n\n  private runResizeObserver = () => {\n    this.resizeObserver = new ResizeObserver(() => {\n      clearTimeout(this.resizeTimeout);\n      this.resizeTimeout = window.setTimeout(this.resizeObserverCallback, 80);\n    });\n    this.resizeObserver.observe(this.dialogEl);\n  };\n\n  private resizeObserverCallback = () => {\n    if (this.dialogEl.clientHeight !== this.dialogHeight) {\n      this.el.setAttribute(this.DATA_OVERFLOW, \"false\");\n      this.setContentOverflow();\n      this.dialogHeight = this.dialogEl.clientHeight;\n    }\n  };\n\n  private setInitialFocus = () => {\n    this.sourceElement = document.activeElement as HTMLElement;\n\n    let focusedElement;\n\n    if (this.el.querySelector(this.DATA_GETS_FOCUS_SELECTOR) !== null) {\n      focusedElement = this.el.querySelector(\n        this.DATA_GETS_FOCUS_SELECTOR\n      ) as HTMLElement;\n    } else {\n      focusedElement = this.el.shadowRoot.querySelector(\n        this.DATA_GETS_FOCUS_SELECTOR\n      ) as HTMLElement;\n    }\n    if (focusedElement.tagName === this.IC_TEXT_FIELD) {\n      (focusedElement as HTMLIcTextFieldElement).setFocus();\n    } else if (focusedElement.tagName === this.IC_ACCORDION) {\n      (focusedElement as HTMLIcAccordionElement).setFocus();\n    } else {\n      focusedElement.focus();\n    }\n  };\n\n  private getFocusedElementIndex = () => {\n    for (let i = 0; i < this.interactiveElementList.length; i++) {\n      if (\n        (this.interactiveElementList[i] as HTMLElement) ===\n        (this.el.shadowRoot.activeElement || document.activeElement)\n      ) {\n        this.focusedElementIndex = i;\n      }\n    }\n  };\n\n  private setAlertVariant = () => {\n    if (this.status !== undefined && this.status !== null) {\n      const alert = this.el.shadowRoot.querySelector(\"ic-alert\");\n      alert.setAttribute(\"variant\", this.status);\n    }\n  };\n\n  private closeIconClick = () => {\n    this.hideDialog();\n  };\n\n  private getInteractiveElements = () => {\n    this.interactiveElementList = Array.from(\n      this.el.shadowRoot.querySelectorAll(\"ic-button\")\n    );\n    const slottedInteractiveElements = Array.from(\n      this.el.querySelectorAll(\n        `a[href], button, input:not(.ic-input), textarea, select, details, [tabindex]:not([tabindex=\"-1\"]), \n          ic-button, ic-checkbox, ic-select, ic-search-bar, ic-tab-group, ic-radio-group, \n          ic-back-to-top, ic-breadcrumb, ic-chip[dismissible=\"true\"], ic-footer-link, ic-link, ic-navigation-button, \n          ic-navigation-item, ic-switch, ic-text-field, ic-accordion-group, ic-accordion`\n      )\n    );\n    if (slottedInteractiveElements.length > 0) {\n      if (slottedInteractiveElements[0].slot !== this.DIALOG_CONTROLS) {\n        slottedInteractiveElements[0].setAttribute(this.DATA_GETS_FOCUS, \"\");\n      } else if (!this.destructive) {\n        slottedInteractiveElements[\n          slottedInteractiveElements.length - 1\n        ].setAttribute(this.DATA_GETS_FOCUS, \"\");\n      }\n    }\n    for (let i = 0; i < slottedInteractiveElements.length; i++) {\n      this.interactiveElementList.splice(\n        1 + i,\n        0,\n        slottedInteractiveElements[i] as HTMLElement\n      );\n    }\n  };\n\n  private getNextFocusEl = (focusedElementIndex: number) =>\n    this.interactiveElementList[focusedElementIndex];\n\n  private focusNextInteractiveElement = (shiftKey: boolean) => {\n    this.getFocusedElementIndex();\n    this.setFocusIndexBasedOnShiftKey(shiftKey);\n    this.loopNextFocusIndexIfLastElement();\n\n    let nextFocusEl = this.getNextFocusEl(this.focusedElementIndex);\n\n    const isHidden = getComputedStyle(nextFocusEl).visibility === \"hidden\";\n\n    if (nextFocusEl.tagName === this.IC_TEXT_FIELD) {\n      (nextFocusEl as HTMLIcTextFieldElement).setFocus();\n    } else {\n      if (isHidden) {\n        this.setFocusIndexBasedOnShiftKey(shiftKey);\n        this.loopNextFocusIndexIfLastElement();\n\n        nextFocusEl = this.getNextFocusEl(this.focusedElementIndex);\n      }\n      if (nextFocusEl.tagName === this.IC_ACCORDION) {\n        (nextFocusEl as HTMLIcAccordionElement).setFocus();\n      } else {\n        (nextFocusEl as HTMLElement).focus();\n      }\n    }\n  };\n\n  private setButtonOnClick = () => {\n    if (this.buttons) {\n      this.buttonOnclick0 = new Function(this.buttonProps[0]?.onclick);\n      this.buttonOnclick1 = new Function(this.buttonProps[1]?.onclick);\n      this.buttonOnclick2 = new Function(this.buttonProps[2]?.onclick);\n    }\n  };\n\n  private getButtonOnclick = (index: number) => {\n    if (index === 0) {\n      return this.buttonOnclick0();\n    } else if (index === 1) {\n      return this.buttonOnclick1();\n    } else {\n      return this.buttonOnclick2();\n    }\n  };\n\n  private getButtonVariant = (index: number) => {\n    const mainVariant = this.destructive ? \"destructive\" : \"primary\";\n    if (this.buttonProps.length === 1) {\n      return mainVariant;\n    } else if (this.buttonProps.length === 2) {\n      if (index === 0) {\n        return \"tertiary\";\n      } else {\n        return mainVariant;\n      }\n    } else {\n      if (index === 2) {\n        return mainVariant;\n      } else {\n        return \"secondary\";\n      }\n    }\n  };\n\n  private loopNextFocusIndexIfLastElement() {\n    if (this.focusedElementIndex > this.interactiveElementList.length - 1)\n      this.focusedElementIndex = 0;\n    else if (this.focusedElementIndex < 0) {\n      this.focusedElementIndex = this.interactiveElementList.length - 1;\n    }\n  }\n\n  private setFocusIndexBasedOnShiftKey(shiftKey: boolean) {\n    if (shiftKey) {\n      this.focusedElementIndex -= 1;\n    } else {\n      this.focusedElementIndex += 1;\n    }\n  }\n\n  render() {\n    const {\n      alertHeading,\n      alertMessage,\n      buttons,\n      buttonProps,\n      size,\n      heading,\n      label,\n      status,\n      destructive,\n      dismissLabel,\n    } = this;\n\n    return (\n      <Host\n        class={{ [\"hidden\"]: !this.dialogRendered, [\"fade-in\"]: this.fadeIn }}\n      >\n        <dialog\n          class={{ [\"dialog\"]: true, [`${size}`]: true }}\n          aria-labelledby=\"dialog-label dialog-heading\"\n          aria-describedby=\"dialog-alert dialog-content\"\n          ref={(el) => (this.dialogEl = el)}\n        >\n          <div class=\"heading-area\">\n            <div class=\"heading-content\">\n              <div class=\"label\">\n                <slot name=\"label\">\n                  <ic-typography variant=\"label\" id=\"dialog-label\">\n                    {label}\n                  </ic-typography>\n                </slot>\n              </div>\n              <div class=\"heading\">\n                <slot name=\"heading\">\n                  <ic-typography variant=\"h4\" id=\"dialog-heading\">\n                    {heading}\n                  </ic-typography>\n                </slot>\n              </div>\n            </div>\n            <ic-button\n              class=\"close-icon\"\n              variant=\"icon\"\n              aria-label={dismissLabel}\n              onClick={this.closeIconClick}\n              data-gets-focus={destructive || !buttons ? \"\" : null}\n            >\n              <span class=\"close-icon-svg\" innerHTML={closeIcon} />\n            </ic-button>\n          </div>\n          <div class=\"content-area\">\n            {status && (\n              <ic-alert\n                variant={status}\n                heading={alertHeading}\n                message={alertMessage}\n                title-above\n                class=\"status-alert\"\n                id=\"dialog-alert\"\n              ></ic-alert>\n            )}\n            <div id=\"dialog-content\">\n              <slot></slot>\n            </div>\n          </div>\n          {(buttons || isSlotUsed(this.el, this.DIALOG_CONTROLS)) && (\n            <div\n              class={{\n                [this.DIALOG_CONTROLS]: true,\n                [\"triple-button\"]: buttonProps.length === 3,\n              }}\n            >\n              <slot name={this.DIALOG_CONTROLS}>\n                {!isSlotUsed(this.el, this.DIALOG_CONTROLS) &&\n                  buttonProps.map((props, index) => {\n                    if (index > 2) {\n                      return;\n                    } else {\n                      return (\n                        <ic-button\n                          variant={this.getButtonVariant(index)}\n                          onClick={() => this.getButtonOnclick(index)}\n                          class=\"dialog-control-button\"\n                          full-width={buttonProps.length === 3}\n                          data-gets-focus={\n                            this.getButtonVariant(index) === \"primary\"\n                              ? \"\"\n                              : null\n                          }\n                        >\n                          {props.label}\n                        </ic-button>\n                      );\n                    }\n                  })}\n              </slot>\n            </div>\n          )}\n        </dialog>\n      </Host>\n    );\n  }\n}\n","@import \"../../global/normalize.css\";\n\n/**\n  * @prop --ic-z-index-dialog: z-index of dialog \n  */\n\n:host {\n  position: fixed;\n  inset: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100% !important;\n  background: rgb(0 0 0 / 60%);\n  z-index: var(--ic-z-index-dialog);\n  opacity: 0;\n  transition: opacity var(--ic-easing-transition-slow);\n}\n\n:host(.fade-in) {\n  opacity: 1;\n  transition: opacity var(--ic-easing-transition-slow);\n}\n\n:host(.hidden) {\n  display: none;\n}\n\n.dialog {\n  background-color: var(--ic-architectural-white);\n  border: var(--ic-border-default);\n  border-radius: var(--ic-border-radius);\n  padding: var(--ic-space-xs) var(--ic-space-md);\n  transform: translateY(-3rem);\n  transition: transform 1000s;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n}\n\n:host(.fade-in) .dialog {\n  transform: translateY(0);\n  transition: transform var(--ic-easing-transition-slow);\n}\n\n.small {\n  width: 50%;\n  max-width: 25rem;\n  min-height: 11rem;\n  max-height: 70vh;\n}\n\n.medium {\n  width: 70vw;\n  max-width: 44rem;\n  min-height: 12.5rem;\n  max-height: 70vh;\n}\n\n.large {\n  width: 90vw;\n  max-width: 62.5rem;\n  min-height: 12.5rem;\n  max-height: 90vh;\n}\n\n.heading-area {\n  display: flex;\n  margin-bottom: var(--ic-space-xs);\n}\n\n.close-icon {\n  margin-left: auto;\n}\n\n.close-icon-svg {\n  display: flex;\n  align-items: center;\n}\n\n.content-area {\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  padding: 0 var(--ic-space-xs);\n  margin: 0 calc(-1 * var(--ic-space-xs));\n}\n\n:host([data-overflow=\"false\"]) .content-area {\n  overflow-y: visible;\n}\n\n:host([data-overflow=\"true\"]) .content-area {\n  overflow-y: scroll;\n}\n\n:host([data-overflow=\"false\"]) .dialog {\n  overflow: visible;\n}\n\n.content-area::-webkit-scrollbar {\n  display: none;\n}\n\n#dialog-content {\n  margin-bottom: var(--ic-space-sm);\n}\n\n.status-alert {\n  margin-bottom: var(--ic-space-xs);\n}\n\n.dialog-controls {\n  margin-top: auto;\n  padding-top: var(--ic-space-xs);\n  display: flex;\n  justify-content: flex-end;\n  gap: var(--ic-space-md);\n}\n\n.dialog-control-button {\n  width: fit-content;\n}\n\n@media (min-width: 800px) {\n  :host([size=\"large\"]) .content-area {\n    width: 75%;\n  }\n}\n\n@media (max-width: 576px) {\n  .dialog {\n    width: 100vw;\n    height: 100vh;\n    transform: translateY(-5rem);\n    max-width: none;\n    max-height: none;\n    box-sizing: border-box;\n  }\n}\n\n@media (max-width: 364px) {\n  .triple-button {\n    flex-direction: column;\n    gap: var(--ic-space-xs);\n  }\n\n  .dialog-control-button {\n    width: unset;\n  }\n}\n"],"names":["Dialog","DATA_OVERFLOW","DATA_GETS_FOCUS","DATA_GETS_FOCUS_SELECTOR","DIALOG_CONTROLS","dialogHeight","focusedElementIndex","IC_TEXT_FIELD","IC_ACCORDION","resizeObserver","setContentOverflow","_this","dialogEl","clientHeight","scrollHeight","el","setAttribute","runResizeObserver","ResizeObserver","clearTimeout","resizeTimeout","window","setTimeout","resizeObserverCallback","observe","setInitialFocus","focusedElement","sourceElement","document","activeElement","querySelector","shadowRoot","tagName","setFocus","focus","getFocusedElementIndex","i","interactiveElementList","length","setAlertVariant","undefined","status","closeIconClick","hideDialog","getInteractiveElements","Array","from","querySelectorAll","slottedInteractiveElements","slot","destructive","splice","getNextFocusEl","focusNextInteractiveElement","shiftKey","setFocusIndexBasedOnShiftKey","loopNextFocusIndexIfLastElement","nextFocusEl","isHidden","getComputedStyle","visibility","setButtonOnClick","buttons","buttonOnclick0","Function","_a","buttonProps","onclick","buttonOnclick1","_b","buttonOnclick2","_c","getButtonOnclick","index","getButtonVariant","mainVariant","label","this","key","value","ev","dialogRendered","preventDefault","repeat","stopImmediatePropagation","dialogElement","closeOnBackdropClick","composedPath","indexOf","rect","getBoundingClientRect","top","clientY","height","left","clientX","width","_callee","_this2","_regeneratorRuntime","wrap","_context","prev","next","showModal","fadeIn","checkResizeObserver","icDialogOpened","emit","stop","_showDialog","apply","arguments","_callee2","_this3","_context2","disconnect","close","removeAttribute","icDialogClosed","_hideDialog","_callee3","_context3","icDialogCancelled","_cancelDialog","_callee4","_context4","icDialogConfirmed","_confirmDialog","_class","_class2","_class3","_this4","alertHeading","alertMessage","size","heading","dismissLabel","h","Host","class","_defineProperty","concat","ref","name","variant","id","onClick","innerHTML","closeIcon","message","isSlotUsed","map","props","get"],"sourceRoot":""}