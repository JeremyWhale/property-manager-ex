{"version":3,"file":"static/js/5844.ec21753c.chunk.js","mappings":"kMAWIA,EAAoB,EAQXC,EAAc,W,yDACjB,KAAAC,iBAAmB,sBAAHC,OAAyBH,KAqEzC,KAAAI,eAAiB,WACnBC,EAAKC,sBACPD,EAAKE,UAAW,EAChBF,EAAKG,WAAWC,SAAQ,SAACC,GACvBA,EAAIH,SAAWF,EAAKE,Q,MAGtBF,EAAKE,UAAW,EAChBF,EAAKG,WAAWC,SAAQ,SAACC,GACvBA,EAAIH,SAAWF,EAAKE,Q,KAGxBF,EAAKM,mC,EAGC,KAAAC,eAAiB,WACvBP,EAAKG,WAAWC,SAAQ,SAACI,GACvBA,EAAUC,aAAa,aAAcT,EAAKH,iB,KAItC,KAAAS,kCAAoC,WAC1CN,EAAKC,qBAAuBD,EAAKG,WAAWO,OAC1C,SAACF,GAAS,QAAOA,EAAUN,QAAQ,G,0EAlFC,U,eAKK,E,gBAKhB,G,sBAKM,E,UAKV,S,gDAEzB,WAAgB,IAAAS,EAAA,KACRC,EAA2BC,KAAKC,GAAmBC,SACzDF,KAAKV,WAAaa,MAAMC,KAAKL,GAAyBM,QACpD,SAACC,GAAK,MAAuB,iBAAlBA,EAAMC,OAA0B,IAE7CP,KAAKN,iBACLM,KAAKV,WAAWC,SAAQ,SAACC,GACvBA,EAAIgB,WAAaV,EAAKU,U,IAExBR,KAAKV,WAAWC,SAAQ,SAACC,GACvBA,EAAIiB,KAAOX,EAAKW,I,IAEdT,KAAKX,UACPW,KAAKV,WAAWC,SAAQ,SAACC,GACvBA,EAAIH,UAAW,C,IAEjBW,KAAKP,sCAELO,KAAKP,oCACLO,KAAKX,SAAWW,KAAKZ,qB,GAExB,CAAAsB,IAAA,yBAAAC,MAGD,SAAuBC,GAChBZ,KAAKa,gBAIRb,KAAKV,WAAWC,SAAQ,SAACC,GACnBA,EAAIH,UAAYuB,EAAME,OAAOC,KAAOvB,EAAIuB,KAC1CvB,EAAIH,UAAW,E,IAJnBW,KAAKP,mC,GAQR,CAAAiB,IAAA,SAAAC,MA6BD,WAAM,IAAAK,EACIR,EAAkDR,KAAlDQ,WAAYC,EAAsCT,KAAtCS,KAAMQ,EAAgCjB,KAAhCiB,WAAYJ,EAAoBb,KAApBa,gBACtC,OACEK,EAAAA,EAAAA,GAACC,EAAAA,EAAI,cACSnB,KAAKhB,iBACjBoC,OAAKJ,EAAA,IAAAK,EAAAA,EAAAA,GAAAL,EAAA,GAAA/B,OACCuB,IAAe,IAAIa,EAAAA,EAAAA,GAAAL,EAAA,GAAA/B,OACnBwB,IAAS,IAAIY,EAAAA,EAAAA,GAAAL,EAChB,mBAAoB,GAAIA,KAG3BE,EAAAA,EAAAA,GAAA,OAAKE,MAAM,0BACTF,EAAAA,EAAAA,GAAA,iBAAeI,QAAQ,OACrBJ,EAAAA,EAAAA,GAAA,UAAKD,KAELJ,IACAK,EAAAA,EAAAA,GAAA,aACEV,WAA2B,UAAfA,EAAyB,QAAU,UAC/Ce,QAASvB,KAAKd,eACdoC,QAAQ,YAENtB,KAAKZ,qBAAmC,WAAZ,aAIpC8B,EAAAA,EAAAA,GAAA,a,GAGL,CAAAR,IAAA,KAAAc,IAAA,W,4EA7HwB,G,QCnBC,qwF","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-accordion-group/ic-accordion-group.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-accordion-group/ic-accordion-group.css?tag=ic-accordion-group&encapsulation=shadow"],"sourcesContent":["import {\n  Component,\n  Element,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n} from \"@stencil/core\";\nimport { IcThemeForeground, IcSizes } from \"../../utils/types\";\n\nlet accordionGroupIds = 0;\n@Component({\n  tag: \"ic-accordion-group\",\n  styleUrl: \"ic-accordion-group.css\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class AccordionGroup {\n  private accordionGroupId = `ic-accordion-group-${accordionGroupIds++}`;\n\n  @Element() el: HTMLIcAccordionGroupElement;\n\n  @State() accordions: HTMLIcAccordionElement[];\n\n  @State() areAllAccordionsOpen: boolean;\n  /**\n   * The appearance of the accordion group, e.g dark, or light.\n   */\n  @Prop() appearance: IcThemeForeground = \"default\";\n\n  /**\n   * If `true`, the accordion will load in an expanded state.\n   */\n  @Prop({ mutable: true }) expanded: boolean = false;\n\n  /**\n   * The header for the accordion group.\n   */\n  @Prop() groupTitle: string = \"\";\n\n  /**\n   * If `true`, only one accordion will open at a time.\n   */\n  @Prop() singleExpansion: boolean = false;\n\n  /**\n   * The size of the accordion.\n   */\n  @Prop() size?: IcSizes = \"default\";\n\n  componentDidLoad(): void {\n    const accordionDirectChildren = (this.el as HTMLElement).children;\n    this.accordions = Array.from(accordionDirectChildren).filter(\n      (child) => child.tagName === \"IC-ACCORDION\"\n    ) as HTMLIcAccordionElement[];\n    this.linkAccordions();\n    this.accordions.forEach((acc) => {\n      acc.appearance = this.appearance;\n    });\n    this.accordions.forEach((acc) => {\n      acc.size = this.size;\n    });\n    if (this.expanded) {\n      this.accordions.forEach((acc) => {\n        acc.expanded = true;\n      });\n      this.setExpandedToAreAllAccordionsOpen();\n    } else {\n      this.setExpandedToAreAllAccordionsOpen();\n      this.expanded = this.areAllAccordionsOpen;\n    }\n  }\n\n  @Listen(\"accordionClicked\")\n  handleAccordionClicked(event: CustomEvent): void {\n    if (!this.singleExpansion) {\n      // 'See all' should be visible until all accordions are open, then 'Hide all' should be visible\n      this.setExpandedToAreAllAccordionsOpen();\n    } else {\n      this.accordions.forEach((acc) => {\n        if (acc.expanded && event.detail.id !== acc.id) {\n          acc.expanded = false;\n        }\n      });\n    }\n  }\n\n  private handleExpanded = () => {\n    if (this.areAllAccordionsOpen) {\n      this.expanded = false;\n      this.accordions.forEach((acc) => {\n        acc.expanded = this.expanded;\n      });\n    } else {\n      this.expanded = true;\n      this.accordions.forEach((acc) => {\n        acc.expanded = this.expanded;\n      });\n    }\n    this.setExpandedToAreAllAccordionsOpen();\n  };\n\n  private linkAccordions = () => {\n    this.accordions.forEach((accordion) => {\n      accordion.setAttribute(\"context-id\", this.accordionGroupId);\n    });\n  };\n\n  private setExpandedToAreAllAccordionsOpen = () => {\n    this.areAllAccordionsOpen = this.accordions.every(\n      (accordion) => !!accordion.expanded\n    );\n  };\n\n  render() {\n    const { appearance, size, groupTitle, singleExpansion } = this;\n    return (\n      <Host\n        context-id={this.accordionGroupId}\n        class={{\n          [`${appearance}`]: true,\n          [`${size}`]: true,\n          [\"accordion-group\"]: true,\n        }}\n      >\n        <div class=\"group-title-container\">\n          <ic-typography variant=\"h4\">\n            <h3>{groupTitle}</h3>\n          </ic-typography>\n          {!singleExpansion && (\n            <ic-button\n              appearance={appearance === \"light\" ? \"light\" : \"default\"}\n              onClick={this.handleExpanded}\n              variant=\"tertiary\"\n            >\n              {!this.areAllAccordionsOpen ? \"See all\" : \"Hide all\"}\n            </ic-button>\n          )}\n        </div>\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n// add single expansion without title\n","@import \"../../global/normalize.css\";\n\n.group-title-container {\n  padding: var(--ic-space-xs);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n:host(.small) .group-title-container {\n  padding: var(--ic-space-xxs) var(--ic-space-xs);\n}\n\n:host(.large) .group-title-container {\n  padding: var(--ic-space-sm) var(--ic-space-xs);\n}\n\n:host(.light) {\n  color: var(--ic-architectural-white);\n}\n\n:host(.accordion-group.dark) ::slotted(ic-accordion) {\n  color: var(--ic-architectural-white);\n}\n"],"names":["accordionGroupIds","AccordionGroup","accordionGroupId","concat","handleExpanded","_this","areAllAccordionsOpen","expanded","accordions","forEach","acc","setExpandedToAreAllAccordionsOpen","linkAccordions","accordion","setAttribute","every","_this2","accordionDirectChildren","this","el","children","Array","from","filter","child","tagName","appearance","size","key","value","event","singleExpansion","detail","id","_class","groupTitle","h","Host","class","_defineProperty","variant","onClick","get"],"sourceRoot":""}