{"version":3,"file":"static/js/7398.d2cfa355.chunk.js","mappings":"+dAiBaA,G,QAAU,W,yDAqCb,KAAAC,wBAA0B,SAChCC,EACAC,EACAC,EACAC,GAKA,OAAIH,IAFY,OAAdC,QAAoCG,IAAdH,GAAyC,KAAdA,IAI/CI,EAAAA,EAAAA,GAAA,QACEC,MAAO,CACL,yBAA0BN,KAG3BO,EAAAA,EAAAA,GAAWC,EAAKC,GAAI,UAAWJ,EAAAA,EAAAA,GAAA,QAAMK,KAAK,SAC1CT,IAMLI,EAAAA,EAAAA,GAAA,WACEF,KAAMA,EACNG,MAAM,kBAAiB,mBACLE,EAAKG,cAAgBT,GAAiBA,GAEvDM,EAAKG,eACJN,EAAAA,EAAAA,GAAA,OAAKC,MAAM,YAAYM,U,2LAExBL,EAAAA,EAAAA,GAAWC,EAAKC,GAAI,UAAWJ,EAAAA,EAAAA,GAAA,QAAMK,KAAK,SAC1CT,E,EAKC,KAAAY,2BAA6B,WACnC,IAAMC,EAASN,EAAKC,GAAGM,cAAc,WAC/BC,EAAc,eAChBF,IACFA,EAAOG,UAAUC,OAAOF,GACpBR,EAAKR,UACqBc,EAAOG,UAAUE,SAASH,IAEpDF,EAAOG,UAAUG,IAAI,kBAAmBJ,I,gBA5EpB,E,0DAeqB,C,mDAEjD,WACEK,KAAKR,4B,kEAOP,SAAAS,IAAA,OAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACMN,KAAKZ,GAAGmB,WAAWb,cAAc,YACnCM,KAAKZ,GAAGmB,WAAWb,cAAc,WAAWc,QAC7C,wBAAAJ,EAAAK,OAAA,GAAAR,EAAA,UACF,yBAAAS,EAAAC,MAAA,KAAAC,UAAA,E,IAAA,CAAAC,IAAA,SAAAC,MAqDD,WACE,IAAQnC,EAA6BqB,KAA7BrB,QAASG,EAAoBkB,KAApBlB,KAAMF,EAAcoB,KAAdpB,UACjBC,EAAgB,GAAHkC,OACjBnC,GAAaA,EAAUoC,cAAcC,QAAQ,IAAK,KACpD,gBAEMC,EACU,OAAdtC,QAAoCG,IAAdH,GAAyC,KAAdA,EAC7CuC,EAAmB,OAATrC,QAA0BC,IAATD,GAA+B,KAATA,EAEvD,OACEE,EAAAA,EAAAA,GAACoC,EAAAA,EAAI,CACHnC,MAAO,CACLoC,KAAMrB,KAAKV,cACZ,eACaX,GAAW,OACzB2C,KAAK,aAELtC,EAAAA,EAAAA,GAAA,OAAKC,MAAM,eACTD,EAAAA,EAAAA,GAAA,QAAMO,UAAWgC,EAAAA,EAAatC,MAAM,UAAS,cAAa,SACzDe,KAAKV,cAAgBT,IACpBG,EAAAA,EAAAA,GAAA,QACEwC,GAAI3C,EACJI,MAAM,QAAM,WAAA8B,OACDnC,IAEdsC,GAAgBC,EACfnB,KAAKtB,wBACHC,EACAC,EACAC,EACAC,IAGFE,EAAAA,EAAAA,GAAA,c,GAKT,CAAA6B,IAAA,KAAAY,IAAA,W,4EA/HoB,I,QCjBC,g1D","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-breadcrumb/ic-breadcrumb.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-breadcrumb/ic-breadcrumb.css?tag=ic-breadcrumb&encapsulation=shadow"],"sourcesContent":["import { Component, Host, Prop, h, Element, Method } from \"@stencil/core\";\nimport { IcBreadcrumbDefault } from \"./ic-breadcrumb.types\";\n\nimport chevronIcon from \"../../assets/chevron-icon.svg\";\nimport backIcon from \"../../assets/back-icon.svg\";\nimport { isSlotUsed } from \"../../utils/helpers\";\n\n/**\n * @slot icon - Content will be rendered to the left of the breadcrumb page title.\n */\n@Component({\n  tag: \"ic-breadcrumb\",\n  styleUrl: \"ic-breadcrumb.css\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class Breadcrumb {\n  @Element() el: HTMLIcBreadcrumbElement;\n\n  /**\n   * If `true`, aria-current will be set on the breadcrumb.\n   */\n  @Prop() current?: boolean = false;\n\n  /**\n   * The URL that the breadcrumb link points to.\n   */\n  @Prop() href?: string;\n\n  /**\n   * The title of the breadcrumb.\n   */\n  @Prop() pageTitle!: string;\n\n  /**\n   * @internal If `true`, back icon will be displayed.\n   */\n  @Prop({ reflect: true }) showBackIcon: boolean = false;\n\n  componentWillRender(): void {\n    this.setSlottedCurrentPageClass();\n  }\n\n  /**\n   * Sets focus on the breadcrumb.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    if (this.el.shadowRoot.querySelector(\"ic-link\")) {\n      this.el.shadowRoot.querySelector(\"ic-link\").focus();\n    }\n  }\n\n  private renderDefaultBreadcrumb = (\n    current: boolean,\n    pageTitle: string,\n    describedById: string,\n    href: string\n  ): IcBreadcrumbDefault => {\n    const hasPageTitle =\n      pageTitle !== null && pageTitle !== undefined && pageTitle !== \"\";\n\n    if (current && hasPageTitle) {\n      return (\n        <span\n          class={{\n            \"current-page-container\": current,\n          }}\n        >\n          {isSlotUsed(this.el, \"icon\") && <slot name=\"icon\"></slot>}\n          {pageTitle}\n        </span>\n      );\n    }\n\n    return (\n      <ic-link\n        href={href}\n        class=\"breadcrumb-link\"\n        aria-describedby={this.showBackIcon && describedById && describedById}\n      >\n        {this.showBackIcon && (\n          <div class=\"back-icon\" innerHTML={backIcon}></div>\n        )}\n        {isSlotUsed(this.el, \"icon\") && <slot name=\"icon\"></slot>}\n        {pageTitle}\n      </ic-link>\n    );\n  };\n\n  private setSlottedCurrentPageClass = () => {\n    const icLink = this.el.querySelector(\"ic-link\");\n    const currentPage = \"current-page\";\n    if (icLink) {\n      icLink.classList.remove(currentPage);\n      if (this.current) {\n        const hasCurrentPageClass = icLink.classList.contains(currentPage);\n        if (!hasCurrentPageClass) {\n          icLink.classList.add(\"breadcrumb-link\", currentPage);\n        }\n      }\n    }\n  };\n\n  render() {\n    const { current, href, pageTitle } = this;\n    const describedById = `${\n      pageTitle && pageTitle.toLowerCase().replace(\" \", \"-\")\n    }-describedby`;\n\n    const hasPageTitle =\n      pageTitle !== null && pageTitle !== undefined && pageTitle !== \"\";\n    const hasHref = href !== null && href !== undefined && href !== \"\";\n\n    return (\n      <Host\n        class={{\n          back: this.showBackIcon,\n        }}\n        aria-current={current && \"page\"}\n        role=\"listitem\"\n      >\n        <div class=\"breadcrumb\">\n          <span innerHTML={chevronIcon} class=\"chevron\" aria-hidden=\"true\" />\n          {this.showBackIcon && describedById && (\n            <span\n              id={describedById}\n              class=\"hide\"\n            >{`Back to ${pageTitle}`}</span>\n          )}\n          {hasPageTitle && hasHref ? (\n            this.renderDefaultBreadcrumb(\n              current,\n              pageTitle,\n              describedById,\n              href\n            )\n          ) : (\n            <slot />\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  margin: var(--ic-space-xs) var(--ic-space-xs) var(--ic-space-xs) 0;\n}\n\n:host .breadcrumb {\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  gap: var(--ic-space-xs);\n  min-height: var(--ic-space-lg);\n}\n\n:host .chevron {\n  width: var(--ic-space-lg);\n  height: var(--ic-space-lg);\n}\n\n:host .chevron svg {\n  color: var(--ic-architectural-400);\n}\n\n:host(:first-child) .chevron {\n  display: none;\n}\n\n.back-icon svg {\n  color: var(--ic-hyperlink);\n}\n\n:host(.back) {\n  display: flex;\n  align-items: center;\n}\n\n:host(.back) .chevron {\n  display: none;\n}\n\nic-link {\n  --breadcrumb-link-display: inline-flex;\n  --breadcrumb-link-align-items: center;\n  --breadcrumb-link-gap: var(--ic-space-xs);\n}\n\n:host([aria-current=\"page\"]) .current-page-container {\n  display: flex;\n  align-items: center;\n  gap: var(--ic-space-xs);\n}\n\n:host(.collapsed-breadcrumb-wrapper) {\n  margin-right: var(--ic-space-xs) !important;\n  display: flex;\n  align-items: center;\n  gap: var(--ic-space-xs);\n}\n\n:host(.collapsed-breadcrumb-wrapper) ::slotted(.collapsed-breadcrumb) {\n  border: none;\n  background-color: transparent;\n  color: var(--ic-hyperlink);\n  text-decoration: underline;\n  font-weight: var(--ic-font-weight-bold);\n  cursor: pointer;\n}\n\n:host(.collapsed-breadcrumb-wrapper) ::slotted(.collapsed-breadcrumb:hover),\n:host(.collapsed-breadcrumb-wrapper) ::slotted(.collapsed-breadcrumb:focus) {\n  outline: var(--ic-hc-focus-outline);\n  border-bottom: 0.25rem solid !important;\n  margin-bottom: -0.25rem !important;\n  text-decoration: none;\n}\n\n.hide,\n:host(.collapsed-breadcrumb-wrapper) ::slotted(.hide) {\n  display: none;\n}\n\n@media (forced-colors: active) {\n  .back-icon svg {\n    color: currentcolor;\n  }\n}\n\n@supports (text-decoration-thickness: 25%) {\n  ic-link {\n    --breadcrumb-link-display: flex;\n  }\n\n  :host(.collapsed-breadcrumb-wrapper) ::slotted(.collapsed-breadcrumb:hover),\n  :host(.collapsed-breadcrumb-wrapper) ::slotted(.collapsed-breadcrumb:focus) {\n    text-decoration-line: underline;\n    text-decoration-thickness: 25%;\n    text-underline-offset: 25%;\n    border-bottom: 0 !important;\n    margin-bottom: 0 !important;\n  }\n}\n"],"names":["Breadcrumb","renderDefaultBreadcrumb","current","pageTitle","describedById","href","undefined","h","class","isSlotUsed","_this","el","name","showBackIcon","innerHTML","setSlottedCurrentPageClass","icLink","querySelector","currentPage","classList","remove","contains","add","this","_callee","_regeneratorRuntime","wrap","_context","prev","next","shadowRoot","focus","stop","_setFocus","apply","arguments","key","value","concat","toLowerCase","replace","hasPageTitle","hasHref","Host","back","role","Chevron","id","get"],"sourceRoot":""}