{"version":3,"file":"static/js/4609.8b459bc4.chunk.js","mappings":"wMAGMA,EAAqB,CACzBC,QAAS,6BACTC,SAAU,WACV,qBAAsB,qBACtBC,OAAQ,SACR,aAAc,cAQHC,EAAoB,W,uEAIQ,G,oBAIS,U,aAIrB,K,aAIA,E,WAIF,C,CA8BxB,O,8BA5BD,WAAM,IAAAC,EACIC,EAA+DC,KAA/DD,eAAgBE,EAA+CD,KAA/CC,OAAQC,EAAuCF,KAAvCE,QAASC,EAA8BH,KAA9BG,KAAMC,EAAwBJ,KAAxBI,oBAE/C,OACEC,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CAACC,OAAKC,EAAAA,EAAAA,GAAA,GAAK,SAAWP,KACzBI,EAAAA,EAAAA,GAAA,uBACa,qBACXE,OAAKT,EAAA,IAAAU,EAAAA,EAAAA,GAAAV,EACF,yBAA0B,IAAIU,EAAAA,EAAAA,GAAAV,EAAA,GAAAW,OAC3BV,GAAmBA,GAAcD,IAGnB,YAAnBC,GACCM,EAAAA,EAAAA,GAAA,QAAME,MAAM,aAAW,0CACmB,KAExC,MACJF,EAAAA,EAAAA,GAAA,iBAAeK,QAAQ,qBACD,YAAnBX,EACGN,EAAmBM,GAAe,GAAAU,OAC/BN,EAAO,QAAU,GAAE,sBAAAM,OACT,KAAZP,EAAiBA,EAAU,GAAE,sBAAAO,OAC7BhB,EAAmBM,GAAe,sBAAAU,OACV,KAAxBL,EAA6BA,EAAsB,M,KAKjEP,CAAA,CAlD8B,G,QChBC,qyG","sources":["../node_modules/@ukic/web-components/dist/esm/src/components/ic-classification-banner/ic-classification-banner.tsx","../node_modules/@ukic/web-components/dist/esm/src/components/ic-classification-banner/ic-classification-banner.css?tag=ic-classification-banner&encapsulation=shadow"],"sourcesContent":["import { Component, Prop, h, Host } from \"@stencil/core\";\nimport { IcProtectiveMarkings } from \"./ic-classification-banner.types\";\n\nconst classificationText = {\n  default: \"protective marking not set\",\n  official: \"official\",\n  \"official-sensitive\": \"official sensitive\",\n  secret: \"secret\",\n  \"top-secret\": \"top secret\",\n};\n\n@Component({\n  tag: \"ic-classification-banner\",\n  styleUrl: \"ic-classification-banner.css\",\n  shadow: true,\n})\nexport class ClassificationBanner {\n  /**\n   * The additional information that will be displayed after the classification.\n   */\n  @Prop() additionalSelectors?: string = \"\";\n  /**\n   * The classification level to be displayed - also determines the banner and text colour.\n   */\n  @Prop() classification?: IcProtectiveMarkings = \"default\";\n  /**\n   * The optional text that will be displayed before classification to specify relevant country/countries.\n   */\n  @Prop() country?: string = \"uk\";\n  /**\n   * If `true`, the banner will appear inline with the page, instead of sticking to the bottom of the page.\n   */\n  @Prop() inline?: boolean = false;\n  /**\n   * If `true`, \"Up to\" will be displayed before the classification and country.\n   */\n  @Prop() upTo?: boolean = false;\n\n  render() {\n    const { classification, inline, country, upTo, additionalSelectors } = this;\n\n    return (\n      <Host class={{ [\"inline\"]: inline }}>\n        <banner\n          aria-label=\"Protective marking\"\n          class={{\n            [\"classification-banner\"]: true,\n            [`${classification}`]: classification,\n          }}\n        >\n          {classification !== \"default\" ? (\n            <span class=\"offscreen\">\n              The protective marking of this page is:{\" \"}\n            </span>\n          ) : null}\n          <ic-typography variant=\"caption-uppercase\">\n            {classification === \"default\"\n              ? classificationText[classification]\n              : `${upTo ? \"up to\" : \"\"} \n               ${country !== \"\" ? country : \"\"} \n               ${classificationText[classification]} \n               ${additionalSelectors !== \"\" ? additionalSelectors : \"\"}`}\n          </ic-typography>\n        </banner>\n      </Host>\n    );\n  }\n}\n","@import \"../../global/normalize.css\";\n\n/**\n * @prop --ic-z-index-classification-banner: z-index of classification banner\n */\n\n:host {\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  height: var(--ic-space-lg);\n  z-index: var(--ic-z-index-classification-banner);\n}\n\n:host(.inline) {\n  position: static;\n  left: auto;\n  bottom: auto;\n}\n\n.classification-banner {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: var(--ic-space-xxxs) var(--ic-space-md);\n}\n\n.default {\n  background-color: var(--ic-classification-not-set);\n  color: var(--ic-classification-not-set-foreground);\n}\n\n.official,\n.official-sensitive {\n  background-color: var(--ic-classification-official);\n  color: var(--ic-classification-official-foreground);\n}\n\n.secret {\n  background-color: var(--ic-classification-secret);\n  color: var(--ic-classification-secret-foreground);\n}\n\n.top-secret {\n  background-color: var(--ic-classification-top-secret);\n  color: var(--ic-classification-top-secret-foreground);\n}\n\n.offscreen {\n  position: absolute;\n  left: -9999px;\n  background-color: #fff;\n  color: #000;\n  text-transform: none;\n}\n\n@media (forced-colors: active) {\n  .classification-banner {\n    border: var(--ic-hc-border);\n  }\n}\n"],"names":["classificationText","default","official","secret","ClassificationBanner","_class2","classification","this","inline","country","upTo","additionalSelectors","h","Host","class","_defineProperty","concat","variant"],"sourceRoot":""}